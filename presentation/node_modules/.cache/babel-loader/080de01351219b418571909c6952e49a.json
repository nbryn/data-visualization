{"ast":null,"code":"var _jsxFileName = \"/home/nbryn/Desktop/JamiiPay/jamiipay-web-dashboard/presentation/src/components/dashboard/views/UserView.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport { KPICard } from \"../util/KPICard\";\nimport UserTotalGraph from \"../charts/graph/UserTotalGraph\";\nimport SoMeCircleChart from \"../charts/circle/SoMeCircleChart\";\nimport UsersLastMonthBar from \"../charts/bar/UsersLastMonthBar\";\nimport UsersLastYearBar from \"../charts/bar/UsersLastYearBar\";\nimport { fetchUserStats } from \"../../../redux/actions/KPI/UserStatsAction\";\nimport { getCurrentTime } from \"../../../util/Date\";\n\nclass KPIView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userTotal: \"\",\n      usersTotalLastUpdate: \"\",\n      usersToday: \"\",\n      usersTodayLastUpdate: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    // Error handling when not authenticated?\n    this.fetchData(); // Reload KPI data\n\n    setInterval(async () => {\n      // Error handling when not authenticated?\n      this.fetchData();\n    }, 1000000);\n  }\n\n  async fetchData() {\n    await this.props.fetchUserStats();\n    const userStats = this.props.userStats;\n    let lastUpdatedAt = getCurrentTime();\n    this.setState({\n      userTotal: userStats.numberOfUsers,\n      userTotalLastUpdate: lastUpdatedAt,\n      usersToday: userStats.signups[10].count,\n      usersTodayLastUpdate: lastUpdatedAt\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: \"pe-7s-user text-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }),\n      statsText: \"Total Users\",\n      statsValue: this.state.userTotal,\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-refresh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }),\n      statsIconText: \"Last Update: \".concat(this.state.userTotalLastUpdate),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: \"pe-7s-user text-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }),\n      statsText: \"Users Today\",\n      statsValue: this.state.usersToday,\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-refresh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }),\n      statsIconText: \"Last Update: \".concat(this.state.usersTodayLastUpdate),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: \"pe-7s-user text-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }),\n      statsText: \"This Month\",\n      statsValue: \"\",\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-calendar-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }),\n      statsIconText: \"Last Update: \".concat(this.state.usersTodayLastUpdate),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: \"pe-7s-user text-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }),\n      statsText: \"This Year\",\n      statsValue: \"\",\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-clock-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }),\n      statsIconText: \"Last Update: \".concat(this.state.usersTodayLastUpdate),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(UserTotalGraph, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(UsersLastMonthBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(SoMeCircleChart, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(UsersLastYearBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userStats: state.KPI.userStats\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchUserStats\n})(KPIView);","map":{"version":3,"sources":["/home/nbryn/Desktop/JamiiPay/jamiipay-web-dashboard/presentation/src/components/dashboard/views/UserView.js"],"names":["React","Component","connect","Grid","Row","Col","KPICard","UserTotalGraph","SoMeCircleChart","UsersLastMonthBar","UsersLastYearBar","fetchUserStats","getCurrentTime","KPIView","constructor","props","state","userTotal","usersTotalLastUpdate","usersToday","usersTodayLastUpdate","componentDidMount","fetchData","setInterval","userStats","lastUpdatedAt","setState","numberOfUsers","userTotalLastUpdate","signups","count","render","mapStateToProps","KPI"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\n\nimport { KPICard } from \"../util/KPICard\";\n\nimport UserTotalGraph from \"../charts/graph/UserTotalGraph\";\n\nimport SoMeCircleChart from \"../charts/circle/SoMeCircleChart\";\n\nimport UsersLastMonthBar from \"../charts/bar/UsersLastMonthBar\";\nimport UsersLastYearBar from \"../charts/bar/UsersLastYearBar\";\n\nimport { fetchUserStats } from \"../../../redux/actions/KPI/UserStatsAction\";\nimport { getCurrentTime } from \"../../../util/Date\";\n\nclass KPIView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userTotal: \"\",\n      usersTotalLastUpdate: \"\",\n      usersToday: \"\",\n      usersTodayLastUpdate: \"\"\n    };\n    \n  }\n  async componentDidMount() {\n    // Error handling when not authenticated?\n    this.fetchData();\n\n    // Reload KPI data\n    setInterval(async () => {\n      // Error handling when not authenticated?\n      this.fetchData();\n    }, 1000000);\n  }\n\n  async fetchData() {\n    await this.props.fetchUserStats();\n\n    const userStats = this.props.userStats;\n\n    let lastUpdatedAt = getCurrentTime();\n\n    this.setState({\n      userTotal: userStats.numberOfUsers,\n      userTotalLastUpdate: lastUpdatedAt,\n      usersToday: userStats.signups[10].count,\n      usersTodayLastUpdate: lastUpdatedAt\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"content\">\n        <Grid fluid>\n          <Row>\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-user text-warning\" />}\n                statsText=\"Total Users\"\n                statsValue={this.state.userTotal}\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText={`Last Update: ${this.state.userTotalLastUpdate}`}\n              />\n            </Col>\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-user text-warning\" />}\n                statsText=\"Users Today\"\n                statsValue={this.state.usersToday}\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText={`Last Update: ${this.state.usersTodayLastUpdate}`}\n              />\n            </Col>\n\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-user text-warning\" />}\n                statsText=\"This Month\"\n                statsValue=\"\"\n                statsIcon={<i className=\"fa fa-calendar-o\" />}\n                statsIconText={`Last Update: ${this.state.usersTodayLastUpdate}`}\n              />\n            </Col>\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-user text-warning\" />}\n                statsText=\"This Year\"\n                statsValue=\"\"\n                statsIcon={<i className=\"fa fa-clock-o\" />}\n                statsIconText={`Last Update: ${this.state.usersTodayLastUpdate}`}\n              />\n            </Col>\n          </Row>\n\n          <Row>\n            <Col lg={4} sm={6}>\n              <UserTotalGraph />\n            </Col>\n          </Row>\n          <Row>\n            <Col lg={4} sm={6}>\n              <UsersLastMonthBar />\n            </Col>\n            <Col lg={4} sm={6}>\n              <SoMeCircleChart />\n            </Col>\n\n            <Col lg={4} sm={6}>\n              <UsersLastYearBar />\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userStats: state.KPI.userStats\n  };\n};\n\nexport default connect(mapStateToProps, { fetchUserStats })(KPIView);\n"]},"metadata":{},"sourceType":"module"}