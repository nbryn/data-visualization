{"ast":null,"code":"var _jsxFileName = \"/home/nbryn/Desktop/JamiiPay/jamiipay-web-dashboard/presentation/src/components/dashboard/views/UserView.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport { KPICard } from \"../util/KPICard\";\nimport TotalGraph from \"../charts/graph/TotalGraph\";\nimport SoMeCircleChart from \"../charts/circle/SoMeCircleChart\";\nimport LastMonthBar from \"../charts/bar/LastMonthBar\";\nimport LastYearBar from \"../charts/bar/LastYearBar\";\nimport { fetchUserStats } from \"../../../redux/actions/KPI/UserStatsAction\";\nimport { fetchUsersLastYear } from \"../../../redux/actions/KPI/UsersLastYearAction\";\nimport { getCurrentTime } from \"../../../util/Date\";\n\nclass KPIView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userTotal: \"\",\n      usersTotalLastUpdate: \"\",\n      usersToday: \"\",\n      usersTodayLastUpdate: \"\",\n      userMonth: \"\",\n      userYear: \"\",\n      usersLastMonth: \"\",\n      usersLastYear: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    // Error handling when not authenticated?\n    this.fetchData(); // Reload KPI data\n\n    setInterval(async () => {\n      // Error handling when not authenticated?\n      this.fetchData();\n    }, 1000000);\n  }\n\n  async fetchData() {\n    await this.props.fetchUserStats();\n    await this.props.fetchUsersLastYear();\n    const userStats = this.props.userStats;\n    const usersLastYear = this.props.usersLastYear;\n    let lastUpdatedAt = getCurrentTime();\n    let userMonthCount, userYearCount;\n    userStats.signups.forEach(element => userMonthCount += element.count);\n    usersLastYear.data.forEach(element => userYearCount += element.count);\n    this.setState({\n      userTotal: userStats.numberOfUsers,\n      userTotalLastUpdate: lastUpdatedAt,\n      usersToday: userStats.signups[10].count,\n      usersTodayLastUpdate: lastUpdatedAt,\n      userMonth: userMonthCount,\n      userYear: userYearCount,\n      usersLastMonth: userStats.signups,\n      usersLastYear: usersLastYear.signups\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: \"pe-7s-user text-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }),\n      statsText: \"Total Users\",\n      statsValue: this.state.userTotal,\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-refresh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }),\n      statsIconText: \"Last Update: \".concat(this.state.userTotalLastUpdate),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: \"pe-7s-user text-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }),\n      statsText: \"Users Today\",\n      statsValue: this.state.usersToday,\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-refresh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }),\n      statsIconText: \"Last Update: \".concat(this.state.usersTodayLastUpdate),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: \"pe-7s-user text-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }),\n      statsText: \"This Month\",\n      statsValue: \"\",\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-calendar-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }),\n      statsIconText: \"Last Update: \".concat(this.state.usersTodayLastUpdate),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: \"pe-7s-user text-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }),\n      statsText: \"This Year\",\n      statsValue: \"\",\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-clock-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }),\n      statsIconText: \"Last Update: \".concat(this.state.usersTodayLastUpdate),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(TotalGraph, {\n      title: \"Total Users\",\n      stroke: \"#ff0000\",\n      signups: this.state.usersLastYear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(LastMonthBar, {\n      title: \"Users Last Month\",\n      signups: this.state.usersLastMonth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(SoMeCircleChart, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(LastYearBar, {\n      title: \"Users Last Year\",\n      signups: this.state.usersLastYear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userStats: state.KPI.userStats,\n    usersLastYear: state.KPI.usersLastYear\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchUserStats,\n  fetchUsersLastYear\n})(KPIView);","map":{"version":3,"sources":["/home/nbryn/Desktop/JamiiPay/jamiipay-web-dashboard/presentation/src/components/dashboard/views/UserView.js"],"names":["React","Component","connect","Grid","Row","Col","KPICard","TotalGraph","SoMeCircleChart","LastMonthBar","LastYearBar","fetchUserStats","fetchUsersLastYear","getCurrentTime","KPIView","constructor","props","state","userTotal","usersTotalLastUpdate","usersToday","usersTodayLastUpdate","userMonth","userYear","usersLastMonth","usersLastYear","componentDidMount","fetchData","setInterval","userStats","lastUpdatedAt","userMonthCount","userYearCount","signups","forEach","element","count","data","setState","numberOfUsers","userTotalLastUpdate","render","mapStateToProps","KPI"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\n\nimport { KPICard } from \"../util/KPICard\";\n\nimport TotalGraph from \"../charts/graph/TotalGraph\";\n\nimport SoMeCircleChart from \"../charts/circle/SoMeCircleChart\";\n\nimport LastMonthBar from \"../charts/bar/LastMonthBar\";\nimport LastYearBar from \"../charts/bar/LastYearBar\";\n\nimport { fetchUserStats } from \"../../../redux/actions/KPI/UserStatsAction\";\nimport { fetchUsersLastYear } from \"../../../redux/actions/KPI/UsersLastYearAction\";\nimport { getCurrentTime } from \"../../../util/Date\";\n\n\nclass KPIView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userTotal: \"\",\n      usersTotalLastUpdate: \"\",\n      usersToday: \"\",\n      usersTodayLastUpdate: \"\",\n      userMonth: \"\",\n      userYear: \"\",\n      usersLastMonth: \"\",\n      usersLastYear: \"\",\n    };\n    \n  }\n  async componentDidMount() {\n    // Error handling when not authenticated?\n    this.fetchData();\n\n    // Reload KPI data\n    setInterval(async () => {\n      // Error handling when not authenticated?\n      this.fetchData();\n    }, 1000000);\n  }\n\n  async fetchData() {\n    await this.props.fetchUserStats();\n    await this.props.fetchUsersLastYear();\n\n    const userStats = this.props.userStats;\n    const usersLastYear = this.props.usersLastYear\n\n    let lastUpdatedAt = getCurrentTime();\n\n    let userMonthCount, userYearCount; \n\n    userStats.signups.forEach(element => userMonthCount += element.count);\n    usersLastYear.data.forEach(element => userYearCount += element.count);\n\n    this.setState({\n      userTotal: userStats.numberOfUsers,\n      userTotalLastUpdate: lastUpdatedAt,\n      usersToday: userStats.signups[10].count,\n      usersTodayLastUpdate: lastUpdatedAt,\n      userMonth: userMonthCount,\n      userYear: userYearCount,\n      usersLastMonth: userStats.signups,\n      usersLastYear: usersLastYear.signups\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"content\">\n        <Grid fluid>\n          <Row>\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-user text-warning\" />}\n                statsText=\"Total Users\"\n                statsValue={this.state.userTotal}\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText={`Last Update: ${this.state.userTotalLastUpdate}`}\n              />\n            </Col>\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-user text-warning\" />}\n                statsText=\"Users Today\"\n                statsValue={this.state.usersToday}\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText={`Last Update: ${this.state.usersTodayLastUpdate}`}\n              />\n            </Col>\n\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-user text-warning\" />}\n                statsText=\"This Month\"\n                statsValue=\"\"\n                statsIcon={<i className=\"fa fa-calendar-o\" />}\n                statsIconText={`Last Update: ${this.state.usersTodayLastUpdate}`}\n              />\n            </Col>\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-user text-warning\" />}\n                statsText=\"This Year\"\n                statsValue=\"\"\n                statsIcon={<i className=\"fa fa-clock-o\" />}\n                statsIconText={`Last Update: ${this.state.usersTodayLastUpdate}`}\n              />\n            </Col>\n          </Row>\n\n          <Row>\n            <Col lg={4} sm={6}>\n              <TotalGraph title=\"Total Users\" stroke=\"#ff0000\" signups={this.state.usersLastYear}/>\n            </Col>\n          </Row>\n          <Row>\n            <Col lg={4} sm={6}>\n              <LastMonthBar title=\"Users Last Month\" signups={this.state.usersLastMonth} />\n            </Col>\n            <Col lg={4} sm={6}>\n              <SoMeCircleChart />\n            </Col>\n\n            <Col lg={4} sm={6}>\n              <LastYearBar title=\"Users Last Year\" signups={this.state.usersLastYear} />\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userStats: state.KPI.userStats,\n    usersLastYear: state.KPI.usersLastYear\n  };\n};\n\nexport default connect(mapStateToProps, { fetchUserStats, fetchUsersLastYear })(KPIView);\n"]},"metadata":{},"sourceType":"module"}