{"ast":null,"code":"var _jsxFileName = \"/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/src/components/dashboard/views/UserView.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport { KPICard } from \"../util/KPICard\";\nimport TotalGraph from \"../charts/graph/TotalGraph\";\nimport SizeChart from \"../charts/circle/SizeChart\";\nimport LastMonthBar from \"../charts/bar/LastMonthBar\";\nimport LastYearBar from \"../charts/bar/LastYearBar\";\nimport { fetchUserStats, fetchUsersLastYear, fetchUserGender } from \"../../../redux/actions/KPI/UserStatsActions\";\nimport { getCurrentTime } from \"../../../util/Date\";\n\nclass KPIView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userTotal: \"\",\n      usersToday: \"\",\n      usersTodayText: \"\",\n      userMonth: \"\",\n      userYear: \"\",\n      usersLastMonth: \"\",\n      usersLastYear: \"\",\n      userGender: \"\",\n      lastUpdate: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    this.fetchData();\n    setInterval(async () => {\n      this.fetchData();\n    }, 1000000);\n  }\n\n  async fetchData() {\n    await this.props.fetchUserStats();\n    await this.props.fetchUsersLastYear();\n    await this.props.fetchUserGender();\n    const userStats = this.props.userStats;\n    const usersLastYear = this.props.usersLastYear;\n    const userGender = this.props.userGender;\n    let lastUpdatedAt = getCurrentTime();\n    let userMonthCount = 0;\n    let userYearCount = 0;\n    userStats.signups.forEach(element => userMonthCount += element.count);\n    usersLastYear.data.forEach(element => userYearCount += element.count);\n    this.setState({\n      userTotal: userStats.numberOfUsers,\n      usersToday: userStats.signups[userStats.signups.length - 1].count,\n      usersTodayText: userStats.signups[userStats.signups.length - 1].day.day + \"/\" + userStats.signups[userStats.signups.length - 1].day.month,\n      userMonth: userMonthCount,\n      userYear: userYearCount,\n      usersLastMonth: userStats.signups,\n      usersLastYear: usersLastYear.data,\n      userGender: userGender,\n      lastUpdate: lastUpdatedAt\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: \"pe-7s-user text-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }),\n      statsText: \"Total Users\",\n      statsValue: this.state.userTotal,\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-refresh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }),\n      statsIconText: `Last Update: ${this.state.lastUpdate}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: \"pe-7s-user text-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }),\n      statsText: \"Users \" + this.state.usersTodayText,\n      statsValue: this.state.usersToday,\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-refresh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }),\n      statsIconText: `Last Update: ${this.state.lastUpdate}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: \"pe-7s-user text-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }),\n      statsText: \"This Month\",\n      statsValue: this.state.userMonth,\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-calendar-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }),\n      statsIconText: `Last Update: ${this.state.lastUpdate}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: \"pe-7s-user text-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }),\n      statsText: \"This Year\",\n      statsValue: this.state.userTotal,\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-clock-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }),\n      statsIconText: `Last Update: ${this.state.lastUpdate}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(TotalGraph, {\n      title: \"Total Users\",\n      stroke: \"#ff0000\",\n      data: this.state.usersLastYear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(LastMonthBar, {\n      title: \"Users Last Month\",\n      color: \"#228b22\",\n      data: this.state.usersLastMonth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(SizeChart, {\n      title: \"Gender Distribution\",\n      colors: [\"#1828E8\", \"#228b22\"],\n      data: this.state.userGender,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(LastYearBar, {\n      title: \"Users Last Year\",\n      color: \"#ff0000\",\n      data: this.state.usersLastYear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userStats: state.KPI.userStats,\n    usersLastYear: state.KPI.usersLastYear,\n    userGender: state.KPI.userGender\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchUserStats,\n  fetchUsersLastYear,\n  fetchUserGender\n})(KPIView);","map":{"version":3,"sources":["/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/src/components/dashboard/views/UserView.js"],"names":["React","Component","connect","Grid","Row","Col","KPICard","TotalGraph","SizeChart","LastMonthBar","LastYearBar","fetchUserStats","fetchUsersLastYear","fetchUserGender","getCurrentTime","KPIView","constructor","props","state","userTotal","usersToday","usersTodayText","userMonth","userYear","usersLastMonth","usersLastYear","userGender","lastUpdate","componentDidMount","fetchData","setInterval","userStats","lastUpdatedAt","userMonthCount","userYearCount","signups","forEach","element","count","data","setState","numberOfUsers","length","day","month","render","mapStateToProps","KPI"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\n\nimport { KPICard } from \"../util/KPICard\";\n\nimport TotalGraph from \"../charts/graph/TotalGraph\";\n\nimport SizeChart from \"../charts/circle/SizeChart\";\n\nimport LastMonthBar from \"../charts/bar/LastMonthBar\";\nimport LastYearBar from \"../charts/bar/LastYearBar\";\n\nimport {\n  fetchUserStats,\n  fetchUsersLastYear,\n  fetchUserGender\n} from \"../../../redux/actions/KPI/UserStatsActions\";\nimport { getCurrentTime } from \"../../../util/Date\";\n\nclass KPIView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userTotal: \"\",\n      usersToday: \"\",\n      usersTodayText: \"\",\n      userMonth: \"\",\n      userYear: \"\",\n      usersLastMonth: \"\",\n      usersLastYear: \"\",\n      userGender: \"\",\n      lastUpdate: \"\"\n    };\n  }\n  async componentDidMount() {\n    this.fetchData();\n\n    setInterval(async () => {\n      this.fetchData();\n    }, 1000000);\n  }\n\n  async fetchData() {\n    await this.props.fetchUserStats();\n    await this.props.fetchUsersLastYear();\n    await this.props.fetchUserGender();\n\n    const userStats = this.props.userStats;\n    const usersLastYear = this.props.usersLastYear;\n    const userGender = this.props.userGender;\n\n    let lastUpdatedAt = getCurrentTime();\n\n    let userMonthCount = 0;\n    let userYearCount = 0;\n\n    userStats.signups.forEach(element => (userMonthCount += element.count));\n    usersLastYear.data.forEach(element => (userYearCount += element.count));\n\n    this.setState({\n      userTotal: userStats.numberOfUsers,\n      usersToday: userStats.signups[userStats.signups.length - 1].count,\n      usersTodayText:\n        userStats.signups[userStats.signups.length - 1].day.day +\n        \"/\" +\n        userStats.signups[userStats.signups.length - 1].day.month,\n      userMonth: userMonthCount,\n      userYear: userYearCount,\n      usersLastMonth: userStats.signups,\n      usersLastYear: usersLastYear.data,\n      userGender: userGender,\n      lastUpdate: lastUpdatedAt\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"content\">\n        <Grid fluid>\n          <Row>\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-user text-warning\" />}\n                statsText=\"Total Users\"\n                statsValue={this.state.userTotal}\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText={`Last Update: ${this.state.lastUpdate}`}\n              />\n            </Col>\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-user text-warning\" />}\n                statsText={\"Users \" + this.state.usersTodayText}\n                statsValue={this.state.usersToday}\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText={`Last Update: ${this.state.lastUpdate}`}\n              />\n            </Col>\n\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-user text-warning\" />}\n                statsText=\"This Month\"\n                statsValue={this.state.userMonth}\n                statsIcon={<i className=\"fa fa-calendar-o\" />}\n                statsIconText={`Last Update: ${this.state.lastUpdate}`}\n              />\n            </Col>\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-user text-warning\" />}\n                statsText=\"This Year\"\n                statsValue={this.state.userTotal}\n                statsIcon={<i className=\"fa fa-clock-o\" />}\n                statsIconText={`Last Update: ${this.state.lastUpdate}`}\n              />\n            </Col>\n          </Row>\n\n          <Row>\n            <Col lg={4} sm={6}>\n              <TotalGraph\n                title=\"Total Users\"\n                stroke=\"#ff0000\"\n                data={this.state.usersLastYear}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col lg={4} sm={6}>\n              <LastMonthBar\n                title=\"Users Last Month\"\n                color=\"#228b22\"\n                data={this.state.usersLastMonth}\n              />\n            </Col>\n            <Col lg={4} sm={6}>\n              <SizeChart\n                title=\"Gender Distribution\"\n                colors={[\"#1828E8\", \"#228b22\"]}\n                data={this.state.userGender}\n              />\n            </Col>\n\n            <Col lg={4} sm={6}>\n              <LastYearBar\n                title=\"Users Last Year\"\n                color=\"#ff0000\"\n                data={this.state.usersLastYear}\n              />\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userStats: state.KPI.userStats,\n    usersLastYear: state.KPI.usersLastYear,\n    userGender: state.KPI.userGender\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchUserStats,\n  fetchUsersLastYear,\n  fetchUserGender\n})(KPIView);\n"]},"metadata":{},"sourceType":"module"}