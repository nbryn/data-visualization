{"ast":null,"code":"import _regeneratorRuntime from \"/home/nbryn/Desktop/JamiiPay/jamiipay-web-dashboard/presentation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/nbryn/Desktop/JamiiPay/jamiipay-web-dashboard/presentation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { SET_CURRENT_USER } from \"../ActionTypes\";\nimport axios from \"axios\";\nimport { setTokenInHeader } from \"../../../security/Token\";\nvar url = \"/graphql\";\nexport var setCurrentUser = function setCurrentUser() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var data, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                data = \"query{\\n        me\\n      }\";\n                setTokenInHeader();\n                _context.prev = 2;\n                _context.next = 5;\n                return axios({\n                  url: url,\n                  method: \"post\",\n                  data: {\n                    query: data\n                  }\n                });\n\n              case 5:\n                response = _context.sent;\n                // Flag for error in DB?\n                console.log(response);\n                dispatch({\n                  type: SET_CURRENT_USER,\n                  payload: response.data.data\n                });\n                return _context.abrupt(\"return\", response);\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](2);\n                console.log(_context.t0);\n                return _context.abrupt(\"return\", \"Connection problem\");\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 11]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/home/nbryn/Desktop/JamiiPay/jamiipay-web-dashboard/presentation/src/redux/actions/User/SetUserAction.js"],"names":["SET_CURRENT_USER","axios","setTokenInHeader","url","setCurrentUser","dispatch","data","method","query","response","console","log","type","payload"],"mappings":";;AAAA,SAASA,gBAAT,QAAiC,gBAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,gBAAT,QAAiC,yBAAjC;AAEA,IAAMC,GAAG,GACT,UADA;AAGA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAM,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5BC,gBAAAA,IAD4B;AAKlCJ,gBAAAA,gBAAgB;AALkB;AAAA;AAAA,uBAUfD,KAAK,CAAC;AACrBE,kBAAAA,GAAG,EAAHA,GADqB;AAErBI,kBAAAA,MAAM,EAAE,MAFa;AAGrBD,kBAAAA,IAAI,EAAE;AACJE,oBAAAA,KAAK,EAAEF;AADH;AAHe,iBAAD,CAVU;;AAAA;AAUhCG,gBAAAA,QAVgC;AAmBhC;AAEAC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAJ,gBAAAA,QAAQ,CAAC;AACPO,kBAAAA,IAAI,EAAEZ,gBADC;AAEPa,kBAAAA,OAAO,EAAEJ,QAAQ,CAACH,IAAT,CAAcA;AAFhB,iBAAD,CAAR;AAtBgC,iDA2BzBG,QA3ByB;;AAAA;AAAA;AAAA;AA+BhCC,gBAAAA,OAAO,CAACC,GAAR;AA/BgC,iDAgCzB,oBAhCyB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB","sourcesContent":["import { SET_CURRENT_USER } from \"../ActionTypes\";\nimport axios from \"axios\";\n\nimport { setTokenInHeader } from \"../../../security/Token\";\n\nconst url =\n\"/graphql\";\n\nexport const setCurrentUser = () => async dispatch => {\n  const data = `query{\n        me\n      }`;\n\n  setTokenInHeader();\n\n  let response;\n\n  try {\n    response = await axios({\n      url,\n      method: \"post\",\n      data: {\n        query: data\n      }\n    });\n\n\n    // Flag for error in DB?\n\n    console.log(response);\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: response.data.data\n    });\n\n    return response;\n\n    // Need better handling of network errors here\n  } catch (err) {\n    console.log(err);\n    return \"Connection problem\";\n  }\n};\n"]},"metadata":{},"sourceType":"module"}