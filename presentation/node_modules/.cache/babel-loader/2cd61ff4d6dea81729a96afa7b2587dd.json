{"ast":null,"code":"var _jsxFileName = \"/home/nbryn/Desktop/JamiiPay/jamiipay-web-dashboard/presentation/src/components/dashboard/views/GroupView.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport { KPICard } from \"../util/KPICard\";\nimport GroupTotalGraph from \"../charts/graph/GroupTotalGraph\";\nimport GroupSizeChart from \"../charts/circle/GroupSizeChart\";\nimport { fetchGroupTotal } from \"../../../redux/actions/KPI/GroupTotalAction\";\nimport { getCurrentTime } from \"../../../util/Date\";\n\nclass KPIView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      groupTotal: \"\",\n      groupTotalLastUpdate: \"\",\n      groupsToday: \"\",\n      groupTodayLastUpdate: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    // Error handling when not authenticated?\n    const temp1 = await this.props.fetchGroupTotal();\n    const groupTotal = this.props.groupTotal;\n    let lastUpdatedAt = getCurrentTime();\n    this.setState({\n      groupTotal: groupTotal,\n      groupTotalLastUpdate: lastUpdatedAt,\n      groupsToday: \"\",\n      groupTodayLastUpdate: lastUpdatedAt\n    }); // Reload KPI data\n\n    setInterval(async () => {\n      // Error handling when not authenticated?\n      const temp1 = await this.props.fetchGroupTotal();\n      let lastUpdatedAt = getCurrentTime();\n      this.setState({\n        groupTotal: groupTotal,\n        groupTotalLastUpdate: lastUpdatedAt,\n        groupsToday: \"\",\n        groupTodayLastUpdate: lastUpdatedAt\n      });\n    }, 1000000);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: \"pe-7s-users text-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }),\n      statsText: \"Total Groups\",\n      statsValue: this.state.groupTotal,\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-refresh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }),\n      statsIconText: \"Last Update: \".concat(this.state.groupTotalLastUpdate),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: \"pe-7s-graph1 text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }),\n      statsText: \"New Users Today\",\n      statsValue: this.state.usersToday,\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-clock-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }),\n      statsIconText: \"Last Update: \".concat(this.state.usersTodayLastUpdate),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(GroupSizeChart, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userStats: state.KPI.userStats,\n    groupTotal: state.KPI.groupTotal\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchUserStats,\n  fetchGroupTotal\n})(KPIView);","map":{"version":3,"sources":["/home/nbryn/Desktop/JamiiPay/jamiipay-web-dashboard/presentation/src/components/dashboard/views/GroupView.js"],"names":["React","Component","connect","Grid","Row","Col","KPICard","GroupTotalGraph","GroupSizeChart","fetchGroupTotal","getCurrentTime","KPIView","constructor","props","state","groupTotal","groupTotalLastUpdate","groupsToday","groupTodayLastUpdate","componentDidMount","temp1","lastUpdatedAt","setState","setInterval","render","usersToday","usersTodayLastUpdate","mapStateToProps","userStats","KPI","fetchUserStats"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\n\nimport { KPICard } from \"../util/KPICard\";\n\nimport GroupTotalGraph from \"../charts/graph/GroupTotalGraph\";\n\nimport GroupSizeChart from \"../charts/circle/GroupSizeChart\";\n\nimport { fetchGroupTotal } from \"../../../redux/actions/KPI/GroupTotalAction\";\nimport { getCurrentTime } from \"../../../util/Date\";\n\nclass KPIView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      groupTotal: \"\",\n      groupTotalLastUpdate: \"\",\n      groupsToday: \"\",\n      groupTodayLastUpdate: \"\"\n    };\n  }\n  async componentDidMount() {\n    // Error handling when not authenticated?\n    const temp1 = await this.props.fetchGroupTotal();\n\n    const groupTotal = this.props.groupTotal;\n\n    let lastUpdatedAt = getCurrentTime();\n\n    this.setState({\n      groupTotal: groupTotal,\n      groupTotalLastUpdate: lastUpdatedAt,\n      groupsToday: \"\",\n      groupTodayLastUpdate: lastUpdatedAt\n    });\n\n    // Reload KPI data\n    setInterval(async () => {\n      // Error handling when not authenticated?\n      const temp1 = await this.props.fetchGroupTotal();\n\n      let lastUpdatedAt = getCurrentTime();\n\n      this.setState({\n        groupTotal: groupTotal,\n        groupTotalLastUpdate: lastUpdatedAt,\n        groupsToday: \"\",\n        groupTodayLastUpdate: lastUpdatedAt\n      });\n    }, 1000000);\n  }\n\n  render() {\n    return (\n      <div className=\"content\">\n        <Grid fluid>\n          <Row>\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-users text-info\" />}\n                statsText=\"Total Groups\"\n                statsValue={this.state.groupTotal}\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText={`Last Update: ${this.state.groupTotalLastUpdate}`}\n              />\n            </Col>\n\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-graph1 text-danger\" />}\n                statsText=\"New Users Today\"\n                statsValue={this.state.usersToday}\n                statsIcon={<i className=\"fa fa-clock-o\" />}\n                statsIconText={`Last Update: ${this.state.usersTodayLastUpdate}`}\n              />\n            </Col>\n          </Row>\n\n          <Row>\n            <Col lg={4} sm={6}>\n              <GroupSizeChart />\n            </Col>\n            <Col lg={4} sm={6}></Col>\n\n            <Col lg={4} sm={6}></Col>\n          </Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userStats: state.KPI.userStats,\n    groupTotal: state.KPI.groupTotal\n  };\n};\n\nexport default connect(mapStateToProps, { fetchUserStats, fetchGroupTotal })(\n  KPIView\n);\n"]},"metadata":{},"sourceType":"module"}