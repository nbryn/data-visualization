{"ast":null,"code":"import _regeneratorRuntime from \"/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { fetchFromServer } from \"../Fetch\";\nimport { KEY_STATS } from \"../ActionTypes\";\nexport var fetchKeyStats = function fetchKeyStats() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var keyStats, groupResponse, userResponse, meetingResponse, shareResponse;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                keyStats = {\n                  groupStats: \"\",\n                  userStats: \"\",\n                  shareStats: \"\",\n                  meetingStats: \"\"\n                };\n                _context.next = 3;\n                return fetchKeyGroupStats();\n\n              case 3:\n                groupResponse = _context.sent;\n                keyStats.groupStats = groupResponse.groupStats;\n                _context.next = 7;\n                return fetchKeyUserStats();\n\n              case 7:\n                userResponse = _context.sent;\n                keyStats.userStats = userResponse.userStats;\n                _context.next = 11;\n                return fetchKeyMeetingStats();\n\n              case 11:\n                meetingResponse = _context.sent;\n                keyStats.meetingStats = meetingResponse.meetingStats;\n                _context.next = 15;\n                return fetchKeyFinanceStats();\n\n              case 15:\n                shareResponse = _context.sent;\n                keyStats.shareStats = shareResponse.financeStats.shareStats.shareTotal;\n                console.log(keyStats);\n                dispatch({\n                  type: KEY_STATS,\n                  payload: keyStats\n                });\n\n              case 19:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\n\nfunction fetchKeyGroupStats() {\n  return _fetchKeyGroupStats.apply(this, arguments);\n}\n\nfunction _fetchKeyGroupStats() {\n  _fetchKeyGroupStats = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee2() {\n    var groupQuery, response;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            groupQuery = \"query{\\n    groupStats{\\n      groupTotal    \\n     groupsLastMonth{\\n        data{\\n          count\\n          day{\\n            year\\n            month\\n            day\\n          }     \\n        }\\n    }\\n    groupsLastYear{\\n        data{\\n          year\\n          month\\n          count  \\n        }\\n      }      \\n    }\\n    }\";\n            _context2.next = 3;\n            return fetchFromServer(\"post\", groupQuery);\n\n          case 3:\n            response = _context2.sent;\n            return _context2.abrupt(\"return\", response);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _fetchKeyGroupStats.apply(this, arguments);\n}\n\nfunction fetchKeyUserStats() {\n  return _fetchKeyUserStats.apply(this, arguments);\n}\n\nfunction _fetchKeyUserStats() {\n  _fetchKeyUserStats = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3() {\n    var userQuery, response;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            userQuery = \"query{\\n    userStats{\\n      userCount   \\n      userGenderStats{\\n        value\\n        count\\n       }\\n      usersLastYear{\\n        data{\\n          year\\n          month\\n          count\\n        }\\n      }       \\n    }\\n    }\";\n            _context3.next = 3;\n            return fetchFromServer(\"post\", userQuery);\n\n          case 3:\n            response = _context3.sent;\n            return _context3.abrupt(\"return\", response.data.data);\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _fetchKeyUserStats.apply(this, arguments);\n}\n\nfunction fetchKeyMeetingStats() {\n  return _fetchKeyMeetingStats.apply(this, arguments);\n}\n\nfunction _fetchKeyMeetingStats() {\n  _fetchKeyMeetingStats = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee4() {\n    var meetingQuery, response;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            meetingQuery = \"query {\\n    meetingStats{\\n      meetingTotal\\n      meetingsLastYear{\\n        data{\\n          year\\n          month\\n          count\\n        }\\n      }            \\n    }\\n  }\";\n            _context4.next = 3;\n            return fetchFromServer(\"post\", meetingQuery);\n\n          case 3:\n            response = _context4.sent;\n            return _context4.abrupt(\"return\", response.data.data);\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _fetchKeyMeetingStats.apply(this, arguments);\n}\n\nfunction fetchKeyFinanceStats() {\n  return _fetchKeyFinanceStats.apply(this, arguments);\n}\n\nfunction _fetchKeyFinanceStats() {\n  _fetchKeyFinanceStats = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee5() {\n    var shareQuery, response;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            shareQuery = \"query {\\n    financeStats{\\n      shareStats {\\n        shareTotal\\n      }\\n    }\\n  }\";\n            _context5.next = 3;\n            return fetchFromServer(\"post\", shareQuery);\n\n          case 3:\n            response = _context5.sent;\n            return _context5.abrupt(\"return\", response.data.data);\n\n          case 5:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _fetchKeyFinanceStats.apply(this, arguments);\n}","map":{"version":3,"sources":["/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/src/redux/actions/kpi/KeyStatsAction.js"],"names":["fetchFromServer","KEY_STATS","fetchKeyStats","dispatch","keyStats","groupStats","userStats","shareStats","meetingStats","fetchKeyGroupStats","groupResponse","fetchKeyUserStats","userResponse","fetchKeyMeetingStats","meetingResponse","fetchKeyFinanceStats","shareResponse","financeStats","shareTotal","console","log","type","payload","groupQuery","response","userQuery","data","meetingQuery","shareQuery"],"mappings":";;AAAA,SAASA,eAAT,QAAgC,UAAhC;AACA,SAASC,SAAT,QAA0B,gBAA1B;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAM,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAC7BC,gBAAAA,QAD6B,GAClB;AACbC,kBAAAA,UAAU,EAAE,EADC;AAEbC,kBAAAA,SAAS,EAAE,EAFE;AAGbC,kBAAAA,UAAU,EAAE,EAHC;AAIbC,kBAAAA,YAAY,EAAE;AAJD,iBADkB;AAAA;AAAA,uBAQLC,kBAAkB,EARb;;AAAA;AAQ3BC,gBAAAA,aAR2B;AASjCN,gBAAAA,QAAQ,CAACC,UAAT,GAAsBK,aAAa,CAACL,UAApC;AATiC;AAAA,uBAWNM,iBAAiB,EAXX;;AAAA;AAW3BC,gBAAAA,YAX2B;AAYjCR,gBAAAA,QAAQ,CAACE,SAAT,GAAqBM,YAAY,CAACN,SAAlC;AAZiC;AAAA,uBAcHO,oBAAoB,EAdjB;;AAAA;AAc3BC,gBAAAA,eAd2B;AAejCV,gBAAAA,QAAQ,CAACI,YAAT,GAAwBM,eAAe,CAACN,YAAxC;AAfiC;AAAA,uBAiBLO,oBAAoB,EAjBf;;AAAA;AAiB3BC,gBAAAA,aAjB2B;AAmBjCZ,gBAAAA,QAAQ,CAACG,UAAT,GAAsBS,aAAa,CAACC,YAAd,CAA2BV,UAA3B,CAAsCW,UAA5D;AAEAC,gBAAAA,OAAO,CAACC,GAAR,CAAYhB,QAAZ;AAEAD,gBAAAA,QAAQ,CAAC;AACPkB,kBAAAA,IAAI,EAAEpB,SADC;AAEPqB,kBAAAA,OAAO,EAAElB;AAFF,iBAAD,CAAR;;AAvBiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;;SA6BQK,kB;;;;;;;2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACQc,YAAAA,UADR;AAAA;AAAA,mBAwByBvB,eAAe,CAAC,MAAD,EAASuB,UAAT,CAxBxC;;AAAA;AAwBQC,YAAAA,QAxBR;AAAA,8CA0BSA,QA1BT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SA6Beb,iB;;;;;;;2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACQc,YAAAA,SADR;AAAA;AAAA,mBAkByBzB,eAAe,CAAC,MAAD,EAASyB,SAAT,CAlBxC;;AAAA;AAkBQD,YAAAA,QAlBR;AAAA,8CAoBSA,QAAQ,CAACE,IAAT,CAAcA,IApBvB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAuBeb,oB;;;;;;;2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACQc,YAAAA,YADR;AAAA;AAAA,mBAayB3B,eAAe,CAAC,MAAD,EAAS2B,YAAT,CAbxC;;AAAA;AAaQH,YAAAA,QAbR;AAAA,8CAeSA,QAAQ,CAACE,IAAT,CAAcA,IAfvB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;SAkBeX,oB;;;;;;;2BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACQa,YAAAA,UADR;AAAA;AAAA,mBAQyB5B,eAAe,CAAC,MAAD,EAAS4B,UAAT,CARxC;;AAAA;AAQQJ,YAAAA,QARR;AAAA,8CAUSA,QAAQ,CAACE,IAAT,CAAcA,IAVvB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import { fetchFromServer } from \"../Fetch\";\nimport { KEY_STATS } from \"../ActionTypes\";\n\nexport const fetchKeyStats = () => async dispatch => {\n  let keyStats = {\n    groupStats: \"\",\n    userStats: \"\",\n    shareStats: \"\",\n    meetingStats: \"\"\n  };\n\n  const groupResponse = await fetchKeyGroupStats();\n  keyStats.groupStats = groupResponse.groupStats;\n\n  const userResponse = await fetchKeyUserStats();\n  keyStats.userStats = userResponse.userStats;\n\n  const meetingResponse = await fetchKeyMeetingStats();\n  keyStats.meetingStats = meetingResponse.meetingStats;\n\n  const shareResponse = await fetchKeyFinanceStats();\n\n  keyStats.shareStats = shareResponse.financeStats.shareStats.shareTotal;\n\n  console.log(keyStats);\n\n  dispatch({\n    type: KEY_STATS,\n    payload: keyStats\n  });\n};\n\nasync function fetchKeyGroupStats() {\n  const groupQuery = `query{\n    groupStats{\n      groupTotal    \n     groupsLastMonth{\n        data{\n          count\n          day{\n            year\n            month\n            day\n          }     \n        }\n    }\n    groupsLastYear{\n        data{\n          year\n          month\n          count  \n        }\n      }      \n    }\n    }`;\n\n  const response = await fetchFromServer(\"post\", groupQuery);\n\n  return response;\n}\n\nasync function fetchKeyUserStats() {\n  const userQuery = `query{\n    userStats{\n      userCount   \n      userGenderStats{\n        value\n        count\n       }\n      usersLastYear{\n        data{\n          year\n          month\n          count\n        }\n      }       \n    }\n    }`;\n\n  const response = await fetchFromServer(\"post\", userQuery);\n\n  return response.data.data;\n}\n\nasync function fetchKeyMeetingStats() {\n  const meetingQuery = `query {\n    meetingStats{\n      meetingTotal\n      meetingsLastYear{\n        data{\n          year\n          month\n          count\n        }\n      }            \n    }\n  }`;\n  const response = await fetchFromServer(\"post\", meetingQuery);\n\n  return response.data.data;\n}\n\nasync function fetchKeyFinanceStats() {\n  const shareQuery = `query {\n    financeStats{\n      shareStats {\n        shareTotal\n      }\n    }\n  }`;\n  const response = await fetchFromServer(\"post\", shareQuery);\n\n  return response.data.data;\n}\n"]},"metadata":{},"sourceType":"module"}