{"ast":null,"code":"var _jsxFileName = \"/home/nbryn/Desktop/JamiiPay/jamiipay-web-dashboard/src/components/dashboard/KPIView.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport { KPICard } from \"./KPICard.js\";\nimport UserLastMonth from \"./Graph/UserLastMonth\";\nimport MoneyTotal from \"./Graph/MoneyTotal\";\nimport UserTotal from \"./Graph/UserTotal\";\nimport { getUsersTotal } from \"../../redux/actions/KPI/UserTotalAction\";\n\nclass KPIView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      usersTotal: \"\",\n      usersTotalUpdate: \"\",\n      usersToday: \"\",\n      $Total: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    // Error handling when not authenticated?\n    const t = await this.props.getUsersTotal();\n    this.setState({\n      usersTotal: this.props.usersTotal.numberOfUsers\n    }); // Reload KPI data\n\n    setInterval(async () => {\n      // Error handling when not authenticated?\n      const m = await this.props.getUsersTotal();\n      let date = new Date();\n      let time = date.getHours;\n      let day = date.getDate();\n      let month = date.getMonth();\n      let lastUpdatedAt = day + \"/\" + month + \": \" + time;\n      this.setState({\n        usersTotal: this.props.usersTotal.numberOfUsers,\n        usersTotalUpdate: lastUpdatedAt\n      });\n    }, 100000);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: \"pe-7s-user text-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }),\n      statsText: \"Total Users\",\n      statsValue: this.state.usersTotal,\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-refresh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }),\n      statsIconText: \"Updated \".concat(this.state.usersTotalUpdate),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: \"pe-7s-wallet text-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }),\n      statsText: \"Amount Registered\",\n      statsValue: \"$5,345\",\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-calendar-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }),\n      statsIconText: \"Last day\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: \"pe-7s-graph1 text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }),\n      statsText: \"New Users Today\",\n      statsValue: \"23\",\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-clock-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }),\n      statsIconText: \"In the last hour\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: \"fa fa-twitter text-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }),\n      statsText: \"Social Media Followers\",\n      statsValue: \"+45\",\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-refresh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }),\n      statsIconText: \"Updated now\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(UserTotal, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(UserLastMonth, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(MoneyTotal, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    usersTotal: state.KPI.usersTotal\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getUsersTotal\n})(KPIView);","map":{"version":3,"sources":["/home/nbryn/Desktop/JamiiPay/jamiipay-web-dashboard/src/components/dashboard/KPIView.js"],"names":["React","Component","connect","Grid","Row","Col","KPICard","UserLastMonth","MoneyTotal","UserTotal","getUsersTotal","KPIView","constructor","props","state","usersTotal","usersTotalUpdate","usersToday","$Total","componentDidMount","t","setState","numberOfUsers","setInterval","m","date","Date","time","getHours","day","getDate","month","getMonth","lastUpdatedAt","render","mapStateToProps","KPI"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport { KPICard } from \"./KPICard.js\";\nimport UserLastMonth from \"./Graph/UserLastMonth\";\nimport MoneyTotal from \"./Graph/MoneyTotal\";\nimport UserTotal from \"./Graph/UserTotal\";\n\nimport { getUsersTotal } from \"../../redux/actions/KPI/UserTotalAction\";\n\nclass KPIView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      usersTotal: \"\",\n      usersTotalUpdate: \"\",\n      usersToday: \"\",\n      $Total: \"\"\n    };\n  }\n  async componentDidMount() {\n    // Error handling when not authenticated?\n    const t = await this.props.getUsersTotal();\n\n    this.setState({\n      usersTotal: this.props.usersTotal.numberOfUsers\n    });\n\n    // Reload KPI data\n    setInterval(async () => {\n      // Error handling when not authenticated?\n      const m = await this.props.getUsersTotal();\n\n      let date = new Date();\n      let time = date.getHours;\n      let day = date.getDate();\n      let month = date.getMonth();\n\n      let lastUpdatedAt = day + \"/\" + month + \": \" + time;\n\n      this.setState({\n        usersTotal: this.props.usersTotal.numberOfUsers,\n        usersTotalUpdate: lastUpdatedAt\n      });\n    }, 100000);\n  }\n\n  render() {\n    return (\n      <div className=\"content\">\n        <Grid fluid>\n          <Row>\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-user text-warning\" />}\n                statsText=\"Total Users\"\n                statsValue={this.state.usersTotal}\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText={`Updated ${this.state.usersTotalUpdate}`}\n              />\n            </Col>\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-wallet text-success\" />}\n                statsText=\"Amount Registered\"\n                statsValue=\"$5,345\"\n                statsIcon={<i className=\"fa fa-calendar-o\" />}\n                statsIconText=\"Last day\"\n              />\n            </Col>\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-graph1 text-danger\" />}\n                statsText=\"New Users Today\"\n                statsValue=\"23\"\n                statsIcon={<i className=\"fa fa-clock-o\" />}\n                statsIconText=\"In the last hour\"\n              />\n            </Col>\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"fa fa-twitter text-info\" />}\n                statsText=\"Social Media Followers\"\n                statsValue=\"+45\"\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText=\"Updated now\"\n              />\n            </Col>\n          </Row>\n\n          <Row>\n            <Col lg={4} sm={6}>\n              <UserTotal />\n            </Col>\n            <Col lg={4} sm={6}>\n              <UserLastMonth />\n            </Col>\n            <Col lg={4} sm={6}>\n              <MoneyTotal />\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    usersTotal: state.KPI.usersTotal\n  };\n};\n\nexport default connect(mapStateToProps, { getUsersTotal })(KPIView);\n"]},"metadata":{},"sourceType":"module"}