{"ast":null,"code":"import _regeneratorRuntime from \"/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { USERS_STATS } from \"../ActionTypes\";\nimport axios from \"axios\";\nimport { setTokenInHeader } from \"../../../security/Token\";\nvar url = \"/graphql\";\nexport var fetchUserStats = function fetchUserStats() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var data, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                data = \"query {\\n    userStats{\\n      userCount\\n      usersLastMonth{\\n        data{\\n          day{\\n            day\\n            month\\n            year\\n          }\\n          count\\n        }\\n      }\\n      usersLastYear{\\n        data{\\n          year\\n          month\\n          count\\n        }\\n      }\\n      userGenderStats{\\n        value\\n        count\\n      }\\n    }\\n  }\";\n                setTokenInHeader();\n                _context.prev = 2;\n                _context.next = 5;\n                return axios({\n                  url: url,\n                  method: \"post\",\n                  data: {\n                    query: data\n                  }\n                });\n\n              case 5:\n                response = _context.sent;\n                console.log(response);\n\n                if (!response.data.errors) {\n                  _context.next = 11;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", response.data.errors[0].extensions.code);\n\n              case 11:\n                dispatch({\n                  type: USERS_STATS,\n                  payload: response.data.data.userStats\n                });\n\n              case 12:\n                return _context.abrupt(\"return\", response.data.data.userStats);\n\n              case 15:\n                _context.prev = 15;\n                _context.t0 = _context[\"catch\"](2);\n                console.log(_context.t0);\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[2, 15]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n}; // export const fetchUsersLastYear = () => async dispatch => {\n//   const data = `query{\n//         usersLastYear{\n//           data{\n//             month\n//             count\n//           }\n//         }\n//       }`;\n//   let response;\n//   try {\n//     response = await axios({\n//       url,\n//       method: \"post\",\n//       data: {\n//         query: data\n//       }\n//     });\n//     dispatch({\n//       type: USERS_LAST_YEAR,\n//       payload: response.data.data.usersLastYear\n//     });\n//   } catch (err) {\n//     console.log(err);\n//   }\n// };\n// export const fetchUserGender = () => async dispatch => {\n//   const data = `query{\n//     userGender{\n//     value\n//     count\n//     }\n//   }`;\n//   let response;\n//   try {\n//     response = await axios({\n//       url,\n//       method: \"post\",\n//       data: {\n//         query: data\n//       }\n//     });\n//     dispatch({\n//       type: USERS_GENDER,\n//       payload: response.data.data.userGender\n//     });\n//   } catch (err) {\n//     console.log(err);\n//   }\n// };","map":{"version":3,"sources":["/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/src/redux/actions/kpi/UserStatsActions.js"],"names":["USERS_STATS","axios","setTokenInHeader","url","fetchUserStats","dispatch","data","method","query","response","console","log","errors","extensions","code","type","payload","userStats"],"mappings":";;AAAA,SAASA,WAAT,QAA2B,gBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,gBAAT,QAAiC,yBAAjC;AAEA,IAAMC,GAAG,GAAG,UAAZ;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAM,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5BC,gBAAAA,IAD4B;AA4BlCJ,gBAAAA,gBAAgB;AA5BkB;AAAA;AAAA,uBAiCfD,KAAK,CAAC;AACrBE,kBAAAA,GAAG,EAAHA,GADqB;AAErBI,kBAAAA,MAAM,EAAE,MAFa;AAGrBD,kBAAAA,IAAI,EAAE;AACJE,oBAAAA,KAAK,EAAEF;AADH;AAHe,iBAAD,CAjCU;;AAAA;AAiChCG,gBAAAA,QAjCgC;AAyChCC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AAzCgC,qBA2C5BA,QAAQ,CAACH,IAAT,CAAcM,MA3Cc;AAAA;AAAA;AAAA;;AAAA,iDA4CvBH,QAAQ,CAACH,IAAT,CAAcM,MAAd,CAAqB,CAArB,EAAwBC,UAAxB,CAAmCC,IA5CZ;;AAAA;AA8C9BT,gBAAAA,QAAQ,CAAC;AACPU,kBAAAA,IAAI,EAAEf,WADC;AAEPgB,kBAAAA,OAAO,EAAEP,QAAQ,CAACH,IAAT,CAAcA,IAAd,CAAmBW;AAFrB,iBAAD,CAAR;;AA9C8B;AAAA,iDAoDzBR,QAAQ,CAACH,IAAT,CAAcA,IAAd,CAAmBW,SApDM;;AAAA;AAAA;AAAA;AAsDhCP,gBAAAA,OAAO,CAACC,GAAR;;AAtDgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB,C,CA0DP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { USERS_STATS} from \"../ActionTypes\";\nimport axios from \"axios\";\n\nimport { setTokenInHeader } from \"../../../security/Token\";\n\nconst url = \"/graphql\";\n\nexport const fetchUserStats = () => async dispatch => {\n  const data = `query {\n    userStats{\n      userCount\n      usersLastMonth{\n        data{\n          day{\n            day\n            month\n            year\n          }\n          count\n        }\n      }\n      usersLastYear{\n        data{\n          year\n          month\n          count\n        }\n      }\n      userGenderStats{\n        value\n        count\n      }\n    }\n  }`;\n\n  setTokenInHeader();\n\n  let response;\n\n  try {\n    response = await axios({\n      url,\n      method: \"post\",\n      data: {\n        query: data\n      }\n    });\n\n    console.log(response);\n\n    if (response.data.errors) {\n      return response.data.errors[0].extensions.code;\n    } else {\n      dispatch({\n        type: USERS_STATS,\n        payload: response.data.data.userStats\n      });\n    }\n\n    return response.data.data.userStats;\n  } catch (err) {\n    console.log(err);\n  }\n};\n\n// export const fetchUsersLastYear = () => async dispatch => {\n//   const data = `query{\n//         usersLastYear{\n//           data{\n//             month\n//             count\n//           }\n//         }\n//       }`;\n\n//   let response;\n\n//   try {\n//     response = await axios({\n//       url,\n//       method: \"post\",\n//       data: {\n//         query: data\n//       }\n//     });\n\n//     dispatch({\n//       type: USERS_LAST_YEAR,\n//       payload: response.data.data.usersLastYear\n//     });\n//   } catch (err) {\n//     console.log(err);\n//   }\n// };\n\n// export const fetchUserGender = () => async dispatch => {\n//   const data = `query{\n//     userGender{\n//     value\n//     count\n//     }\n//   }`;\n\n//   let response;\n\n//   try {\n//     response = await axios({\n//       url,\n//       method: \"post\",\n//       data: {\n//         query: data\n//       }\n//     });\n\n//     dispatch({\n//       type: USERS_GENDER,\n//       payload: response.data.data.userGender\n//     });\n//   } catch (err) {\n//     console.log(err);\n//   }\n// };\n"]},"metadata":{},"sourceType":"module"}