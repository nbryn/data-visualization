{"ast":null,"code":"import _regeneratorRuntime from \"/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { GROUP_STATS } from \"../ActionTypes\";\nimport { fetchFromServer } from \"../Fetch\";\nvar url = \"/graphql\";\nexport var fetchGroupStats = function fetchGroupStats() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var data, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                data = \"query{\\n    groupStats{\\n      groupTotal\\n      groupSize{\\n        value\\n        count\\n      }\\n      groupsLastMonth{\\n        data{\\n          count\\n          day{\\n            year\\n            month\\n            day\\n          }\\n        }\\n      }\\n      groupsLastYear{\\n        data{\\n        year\\n        month\\n        count\\n        }\\n      }\\n      groupsCountry{\\n        name\\n        count\\n      }\\n      groupsNGO{\\n        name\\n        count\\n      }\\n    }\\n  }\";\n                _context.next = 3;\n                return fetchFromServer(\"post\", data);\n\n              case 3:\n                response = _context.sent;\n                dispatch({\n                  type: GROUP_STATS,\n                  payload: response.data.data.groupStats\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/src/redux/actions/kpi/GroupStatsAction.js"],"names":["GROUP_STATS","fetchFromServer","url","fetchGroupStats","dispatch","data","response","type","payload","groupStats"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,SAASC,eAAT,QAAgC,UAAhC;AAEA,IAAMC,GAAG,GAAG,UAAZ;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAM,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAC7BC,gBAAAA,IAD6B;AAAA;AAAA,uBAoCZJ,eAAe,CAAC,MAAD,EAASI,IAAT,CApCH;;AAAA;AAoC7BC,gBAAAA,QApC6B;AAsCnCF,gBAAAA,QAAQ,CAAC;AACPG,kBAAAA,IAAI,EAAEP,WADC;AAEPQ,kBAAAA,OAAO,EAAEF,QAAQ,CAACD,IAAT,CAAcA,IAAd,CAAmBI;AAFrB,iBAAD,CAAR;;AAtCmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB","sourcesContent":["import { GROUP_STATS } from \"../ActionTypes\";\nimport { fetchFromServer } from \"../Fetch\";\n\nconst url = \"/graphql\";\n\nexport const fetchGroupStats = () => async dispatch => {\n  const data = `query{\n    groupStats{\n      groupTotal\n      groupSize{\n        value\n        count\n      }\n      groupsLastMonth{\n        data{\n          count\n          day{\n            year\n            month\n            day\n          }\n        }\n      }\n      groupsLastYear{\n        data{\n        year\n        month\n        count\n        }\n      }\n      groupsCountry{\n        name\n        count\n      }\n      groupsNGO{\n        name\n        count\n      }\n    }\n  }`;\n\n  const response = await fetchFromServer(\"post\", data);\n\n  dispatch({\n    type: GROUP_STATS,\n    payload: response.data.data.groupStats\n  });\n};\n"]},"metadata":{},"sourceType":"module"}