{"ast":null,"code":"var _jsxFileName = \"/home/nbryn/Desktop/JamiiPay/jamiipay-web-dashboard/presentation/src/components/dashboard/charts/graph/TotalGraph.js\";\nimport React, { Component } from \"react\";\nimport GraphChart from \"./GraphChart.js\";\nimport { convertNumberToMonth } from \"../../../../util/Date\";\n\nclass TotalGraph extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (this.props.data !== prevProps.data) {\n      const data = this.props.data;\n      let total = 0;\n      let month;\n      const newState = data.map(element => {\n        total += element.count;\n        month = convertNumberToMonth(element.month);\n        console.log(month);\n        return {\n          name: month,\n          value: total\n        };\n      });\n      this.setState({\n        data: newState\n      });\n    }\n  }\n\n  render() {\n    const title = this.props.title;\n    const stroke = this.props.stroke;\n    const yLabel = {\n      value: \"Users\",\n      angle: -90,\n      position: \"insideLeft\"\n    };\n    const xLabel = {\n      value: \"Months\",\n      position: \"center\",\n      dy: 10\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(GraphChart, {\n      title: title,\n      data: this.state.data,\n      xLabel: xLabel,\n      yLabel: yLabel,\n      stroke: stroke,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default TotalGraph;","map":{"version":3,"sources":["/home/nbryn/Desktop/JamiiPay/jamiipay-web-dashboard/presentation/src/components/dashboard/charts/graph/TotalGraph.js"],"names":["React","Component","GraphChart","convertNumberToMonth","TotalGraph","constructor","props","state","data","componentDidUpdate","prevProps","total","month","newState","map","element","count","console","log","name","value","setState","render","title","stroke","yLabel","angle","position","xLabel","dy"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AAEA,SAASC,oBAAT,QAAqC,uBAArC;;AAEA,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AACjCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD;;AAED,QAAMC,kBAAN,CAAyBC,SAAzB,EAAoC;AAClC,QAAI,KAAKJ,KAAL,CAAWE,IAAX,KAAoBE,SAAS,CAACF,IAAlC,EAAwC;AACtC,YAAMA,IAAI,GAAG,KAAKF,KAAL,CAAWE,IAAxB;AAEA,UAAIG,KAAK,GAAG,CAAZ;AACA,UAAIC,KAAJ;AACA,YAAMC,QAAQ,GAAGL,IAAI,CAACM,GAAL,CAASC,OAAO,IAAI;AACnCJ,QAAAA,KAAK,IAAII,OAAO,CAACC,KAAjB;AACAJ,QAAAA,KAAK,GAAGT,oBAAoB,CAACY,OAAO,CAACH,KAAT,CAA5B;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACA,eAAO;AACLO,UAAAA,IAAI,EAAEP,KADD;AAELQ,UAAAA,KAAK,EAAET;AAFF,SAAP;AAID,OARgB,CAAjB;AAUA,WAAKU,QAAL,CAAc;AAAEb,QAAAA,IAAI,EAAEK;AAAR,OAAd;AACD;AACF;;AACDS,EAAAA,MAAM,GAAG;AACP,UAAMC,KAAK,GAAG,KAAKjB,KAAL,CAAWiB,KAAzB;AACA,UAAMC,MAAM,GAAG,KAAKlB,KAAL,CAAWkB,MAA1B;AACA,UAAMC,MAAM,GAAG;AAAEL,MAAAA,KAAK,EAAE,OAAT;AAAkBM,MAAAA,KAAK,EAAE,CAAC,EAA1B;AAA8BC,MAAAA,QAAQ,EAAE;AAAxC,KAAf;AACA,UAAMC,MAAM,GAAG;AAAER,MAAAA,KAAK,EAAE,QAAT;AAAmBO,MAAAA,QAAQ,EAAE,QAA7B;AAAuCE,MAAAA,EAAE,EAAE;AAA3C,KAAf;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AACE,MAAA,KAAK,EAAEN,KADT;AAEE,MAAA,IAAI,EAAE,KAAKhB,KAAL,CAAWC,IAFnB;AAGE,MAAA,MAAM,EAAEoB,MAHV;AAIE,MAAA,MAAM,EAAEH,MAJV;AAKE,MAAA,MAAM,EAAED,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAWD;;AA7CgC;;AAgDnC,eAAepB,UAAf","sourcesContent":["import React, { Component } from \"react\";\nimport GraphChart from \"./GraphChart.js\";\n\nimport { convertNumberToMonth } from \"../../../../util/Date\";\n\nclass TotalGraph extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: []\n    };\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (this.props.data !== prevProps.data) {\n      const data = this.props.data;\n\n      let total = 0;\n      let month;\n      const newState = data.map(element => {\n        total += element.count;\n        month = convertNumberToMonth(element.month);\n        console.log(month);\n        return {\n          name: month,\n          value: total\n        };\n      });\n\n      this.setState({ data: newState });\n    }\n  }\n  render() {\n    const title = this.props.title;\n    const stroke = this.props.stroke;\n    const yLabel = { value: \"Users\", angle: -90, position: \"insideLeft\" };\n    const xLabel = { value: \"Months\", position: \"center\", dy: 10 };\n\n    return (\n      <div>\n        <GraphChart\n          title={title}\n          data={this.state.data}\n          xLabel={xLabel}\n          yLabel={yLabel}\n          stroke={stroke}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TotalGraph;\n"]},"metadata":{},"sourceType":"module"}