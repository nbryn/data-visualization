{"ast":null,"code":"import { ENGAGEMENT_STATS } from \"../ActionTypes\";\nimport { fetchFromServer } from \"../Fetch\";\nexport const fetchEngagementStats = () => async dispatch => {\n  let engagementStats = {\n    groupEngagement: \"\",\n    userEngagement: \"\"\n  };\n  const groupResponse = await fetchGroupEngagementStats();\n  engagementStats.groupEngagement = groupResponse.groupEngagement;\n  const userResponse = await fetchUserEngagementStats();\n  engagementStats.userEngagement = userResponse.userStats.usersActive;\n  dispatch({\n    type: ENGAGEMENT_STATS,\n    payload: engagementStats\n  });\n};\n\nasync function fetchGroupEngagementStats() {\n  const groupQuery = `query{\n    groupEngagement{\n      groupsActive\n      groupMeetingFrequency{\n        value\n        count\n      }\n  \n    }\n  }`;\n  const response = await fetchFromServer(\"post\", groupQuery);\n  return response.data.data;\n}\n\nasync function fetchUserEngagementStats() {\n  const userQuery = `query{\n    userStats{\n      usersActive \n    }\n  }`;\n  const response = await fetchFromServer(\"post\", userQuery);\n  return response.data.data;\n}","map":{"version":3,"sources":["/home/nbryn/Desktop/jamiipay/Projects/Own-Dashboard/presentation/src/redux/actions/kpi/EngagementStatsAction.js"],"names":["ENGAGEMENT_STATS","fetchFromServer","fetchEngagementStats","dispatch","engagementStats","groupEngagement","userEngagement","groupResponse","fetchGroupEngagementStats","userResponse","fetchUserEngagementStats","userStats","usersActive","type","payload","groupQuery","response","data","userQuery"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,gBAAjC;AACA,SAASC,eAAT,QAAgC,UAAhC;AAEA,OAAO,MAAMC,oBAAoB,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC1D,MAAIC,eAAe,GAAG;AACpBC,IAAAA,eAAe,EAAE,EADG;AAEpBC,IAAAA,cAAc,EAAE;AAFI,GAAtB;AAMA,QAAMC,aAAa,GAAG,MAAMC,yBAAyB,EAArD;AACAJ,EAAAA,eAAe,CAACC,eAAhB,GAAkCE,aAAa,CAACF,eAAhD;AAGA,QAAMI,YAAY,GAAG,MAAMC,wBAAwB,EAAnD;AACAN,EAAAA,eAAe,CAACE,cAAhB,GAAiCG,YAAY,CAACE,SAAb,CAAuBC,WAAxD;AAEAT,EAAAA,QAAQ,CAAC;AACPU,IAAAA,IAAI,EAAEb,gBADC;AAEPc,IAAAA,OAAO,EAAEV;AAFF,GAAD,CAAR;AAID,CAlBM;;AAqBP,eAAeI,yBAAf,GAA2C;AACzC,QAAMO,UAAU,GAAI;;;;;;;;;IAApB;AAWA,QAAMC,QAAQ,GAAG,MAAMf,eAAe,CAAC,MAAD,EAASc,UAAT,CAAtC;AAEA,SAAOC,QAAQ,CAACC,IAAT,CAAcA,IAArB;AACD;;AAED,eAAeP,wBAAf,GAA0C;AACxC,QAAMQ,SAAS,GAAI;;;;IAAnB;AAMA,QAAMF,QAAQ,GAAG,MAAMf,eAAe,CAAC,MAAD,EAASiB,SAAT,CAAtC;AAEA,SAAOF,QAAQ,CAACC,IAAT,CAAcA,IAArB;AACD","sourcesContent":["import { ENGAGEMENT_STATS } from \"../ActionTypes\";\nimport { fetchFromServer } from \"../Fetch\";\n\nexport const fetchEngagementStats = () => async dispatch => {\n  let engagementStats = {\n    groupEngagement: \"\",\n    userEngagement: \"\"\n  };\n\n  \n  const groupResponse = await fetchGroupEngagementStats();\n  engagementStats.groupEngagement = groupResponse.groupEngagement;\n\n  \n  const userResponse = await fetchUserEngagementStats();\n  engagementStats.userEngagement = userResponse.userStats.usersActive;\n\n  dispatch({\n    type: ENGAGEMENT_STATS,\n    payload: engagementStats\n  });\n};\n\n\nasync function fetchGroupEngagementStats() {\n  const groupQuery = `query{\n    groupEngagement{\n      groupsActive\n      groupMeetingFrequency{\n        value\n        count\n      }\n  \n    }\n  }`;\n\n  const response = await fetchFromServer(\"post\", groupQuery);\n\n  return response.data.data;\n}\n\nasync function fetchUserEngagementStats() {\n  const userQuery = `query{\n    userStats{\n      usersActive \n    }\n  }`;\n\n  const response = await fetchFromServer(\"post\", userQuery);\n\n  return response.data.data;\n}\n\n"]},"metadata":{},"sourceType":"module"}