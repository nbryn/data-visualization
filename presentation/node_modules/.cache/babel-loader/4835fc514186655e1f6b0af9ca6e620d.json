{"ast":null,"code":"import _regeneratorRuntime from \"/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport { FINANCE_STATS } from \"../ActionTypes\";\nvar url = \"/graphql\";\nexport var fetchFinanceStats = function fetchFinanceStats() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var data, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                data = \"query{\\n    financeStats{\\n      currencyStats{\\n        numberOfCurrencies\\n        currency{\\n        name\\n        count\\n        }\\n      }\\n      loanTotal\\n      loansLastMonth{\\n        data{\\n          day{\\n            day\\n            month\\n            year\\n          }\\n          count\\n        }\\n      }\\n      loansLastYear{\\n        data {\\n          year\\n          month\\n          count\\n        }\\n      }\\n     shareStats{\\n      shareTotal\\n      groupShares{\\n        name\\n        count\\n      }\\n      mostShares{\\n      name\\n        count\\n      }\\n    }\\n      etbStats{\\n        etbOnLoan\\n        groupLoan{\\n          name\\n          count\\n        }\\n      }\\n   \\n    }\\n  }\";\n                _context.prev = 1;\n                _context.next = 4;\n                return axios({\n                  url: url,\n                  method: \"post\",\n                  data: {\n                    query: data\n                  }\n                });\n\n              case 4:\n                response = _context.sent;\n                dispatch({\n                  type: FINANCE_STATS,\n                  payload: response.data.data.financeStats\n                });\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](1);\n                console.log(_context.t0);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 8]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/src/redux/actions/kpi/FinanceStatsAction.js"],"names":["axios","FINANCE_STATS","url","fetchFinanceStats","dispatch","data","method","query","response","type","payload","financeStats","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,gBAA9B;AAEA,IAAMC,GAAG,GAAG,UAAZ;AAEA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAM,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAC/BC,gBAAAA,IAD+B;AAAA;AAAA;AAAA,uBAqDlBL,KAAK,CAAC;AACrBE,kBAAAA,GAAG,EAAHA,GADqB;AAErBI,kBAAAA,MAAM,EAAE,MAFa;AAGrBD,kBAAAA,IAAI,EAAE;AACJE,oBAAAA,KAAK,EAAEF;AADH;AAHe,iBAAD,CArDa;;AAAA;AAqDnCG,gBAAAA,QArDmC;AA6DnCJ,gBAAAA,QAAQ,CAAC;AACPK,kBAAAA,IAAI,EAAER,aADC;AAEPS,kBAAAA,OAAO,EAAEF,QAAQ,CAACH,IAAT,CAAcA,IAAd,CAAmBM;AAFrB,iBAAD,CAAR;AA7DmC;AAAA;;AAAA;AAAA;AAAA;AAkEnCC,gBAAAA,OAAO,CAACC,GAAR;;AAlEmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B","sourcesContent":["import axios from \"axios\";\nimport { FINANCE_STATS } from \"../ActionTypes\";\n\nconst url = \"/graphql\";\n\nexport const fetchFinanceStats = () => async dispatch => {\n  const data = `query{\n    financeStats{\n      currencyStats{\n        numberOfCurrencies\n        currency{\n        name\n        count\n        }\n      }\n      loanTotal\n      loansLastMonth{\n        data{\n          day{\n            day\n            month\n            year\n          }\n          count\n        }\n      }\n      loansLastYear{\n        data {\n          year\n          month\n          count\n        }\n      }\n     shareStats{\n      shareTotal\n      groupShares{\n        name\n        count\n      }\n      mostShares{\n      name\n        count\n      }\n    }\n      etbStats{\n        etbOnLoan\n        groupLoan{\n          name\n          count\n        }\n      }\n   \n    }\n  }`;\n\n  let response;\n\n  try {\n    response = await axios({\n      url,\n      method: \"post\",\n      data: {\n        query: data\n      }\n    });\n\n    dispatch({\n      type: FINANCE_STATS,\n      payload: response.data.data.financeStats\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}