{"ast":null,"code":"import _regeneratorRuntime from \"/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/src/components/dashboard/views/GroupView.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport { KPICard } from \"../util/KPICard\";\nimport TotalGraph from \"../charts/graph/TotalGraph\";\nimport SizeChart from \"../charts/circle/SizeChart\";\nimport TopBar from \"../charts/bar/TopBar\";\nimport LastMonthBar from \"../charts/bar/LastMonthBar\";\nimport LastYearBar from \"../charts/bar/LastYearBar\";\nimport { fetchGroupStats } from \"../../../redux/actions/KPI/GroupStatsAction\";\nimport { getCurrentTime } from \"../../../util/Date\";\n\nvar GroupView =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GroupView, _Component);\n\n  function GroupView(props) {\n    var _this;\n\n    _classCallCheck(this, GroupView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GroupView).call(this, props));\n    _this.state = {\n      groupTotal: \"\",\n      groupsToday: \"\",\n      groupsTodayText: \"\",\n      groupMonth: \"\",\n      groupYear: \"\",\n      groupSize: \"\",\n      groupsLastMonth: \"\",\n      groupsLastYear: \"\",\n      groupsPerCountry: \"\",\n      groupsPerNGO: \"\",\n      lastUpdate: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(GroupView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.fetchData();\n      setInterval(\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this2.fetchData();\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      })), 10000000);\n    }\n  }, {\n    key: \"fetchData\",\n    value: function () {\n      var _fetchData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var groupStats, lastMonth, lastUpdatedAt, groupMonthCount, groupYearCount;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.props.fetchGroupStats();\n\n              case 2:\n                groupStats = this.props.groupStats;\n                lastMonth = groupStats.groupsLastMonth.data;\n                lastUpdatedAt = getCurrentTime();\n                groupMonthCount = 0;\n                groupYearCount = 0;\n                lastMonth.forEach(function (element) {\n                  return groupMonthCount += element.count;\n                });\n                groupStats.groupsLastYear.data.forEach(function (element) {\n                  return groupYearCount += element.count;\n                });\n                this.setState({\n                  groupTotal: groupStats.groupTotal,\n                  groupsToday: lastMonth[lastMonth.length - 1].count,\n                  groupsTodayText: lastMonth[lastMonth.length - 1].day.day + \"/\" + lastMonth[lastMonth.length - 1].day.month,\n                  groupMonth: groupMonthCount,\n                  groupYear: groupYearCount,\n                  groupSize: groupStats.groupSize,\n                  groupsLastMonth: lastMonth,\n                  groupsLastYear: groupStats.groupsLastYear.data,\n                  groupsPerCountry: groupStats.groupsCountry,\n                  groupsPerNGO: groupStats.groupsNGO,\n                  lastUpdate: lastUpdatedAt\n                });\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function fetchData() {\n        return _fetchData.apply(this, arguments);\n      }\n\n      return fetchData;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: 3,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(KPICard, {\n        bigIcon: React.createElement(\"i\", {\n          className: \"pe-7s-graph1 text-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        }),\n        statsText: \"Total Groups\",\n        statsValue: this.state.groupTotal,\n        statsIcon: React.createElement(\"i\", {\n          className: \"fa fa-refresh\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85\n          },\n          __self: this\n        }),\n        statsIconText: \"Last Update: \".concat(this.state.lastUpdate),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      })), React.createElement(Col, {\n        lg: 3,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(KPICard, {\n        bigIcon: React.createElement(\"i\", {\n          className: \"pe-7s-users text-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }),\n        statsText: \"Groups \" + this.state.groupsTodayText,\n        statsValue: this.state.groupsToday,\n        statsIcon: React.createElement(\"i\", {\n          className: \"fa fa-clock-o\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }),\n        statsIconText: \"Last Update: \".concat(this.state.lastUpdate),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })), React.createElement(Col, {\n        lg: 3,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(KPICard, {\n        bigIcon: React.createElement(\"i\", {\n          className: \"pe-7s-users text-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }),\n        statsText: \"This Month\",\n        statsValue: this.state.groupMonth,\n        statsIcon: React.createElement(\"i\", {\n          className: \"fa fa-refresh\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104\n          },\n          __self: this\n        }),\n        statsIconText: \"Last Update: \".concat(this.state.lastUpdate),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })), React.createElement(Col, {\n        lg: 3,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(KPICard, {\n        bigIcon: React.createElement(\"i\", {\n          className: \"pe-7s-users text-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }),\n        statsText: \"Last Year\",\n        statsValue: this.state.groupYear,\n        statsIcon: React.createElement(\"i\", {\n          className: \"fa fa-refresh\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }),\n        statsIconText: \"Last Update: \".concat(this.state.lastUpdate),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: 4,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(TotalGraph, {\n        title: \"Total Groups\",\n        stroke: \"#228b22\",\n        data: this.state.groupsLastYear,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      })), React.createElement(Col, {\n        lg: 4,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(TopBar, {\n        title: \"Groups Per Country\",\n        xLabel: \"Countries\",\n        yLabel: \"Groups\",\n        color: \"#ff0000\",\n        data: this.state.groupsPerCountry,\n        css: \"card-graph card-stats\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })), React.createElement(Col, {\n        lg: 4,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(TopBar, {\n        title: \"Groups Per NGO\",\n        xLabel: \"NGOs\",\n        yLabel: \"Groups\",\n        color: \"#ff0000\",\n        data: this.state.groupsPerNGO,\n        css: \"card-graph card-stats\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: 4,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(LastMonthBar, {\n        title: \"Groups Last Month\",\n        color: \"#228b22\",\n        xLabel: \"Days\",\n        yLabel: \"Groups\",\n        data: this.state.groupsLastMonth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      })), React.createElement(Col, {\n        lg: 4,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(SizeChart, {\n        title: \"Group Size\",\n        colors: [\"#a4de6c\", \"#67b6ed\", \"#8884d8\", \"#ff0000\", \"#2196f3\", \"#228b22\"],\n        data: this.state.groupSize,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      })), React.createElement(Col, {\n        lg: 4,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(LastYearBar, {\n        title: \"Groups Last Year\",\n        color: \"#2196f3\",\n        xLabel: \"Months\",\n        yLabel: \"Groups\",\n        data: this.state.groupsLastYear,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return GroupView;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    groupStats: state.KPI.groupStats\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchGroupStats: fetchGroupStats\n})(GroupView);","map":{"version":3,"sources":["/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/src/components/dashboard/views/GroupView.js"],"names":["React","Component","connect","Grid","Row","Col","KPICard","TotalGraph","SizeChart","TopBar","LastMonthBar","LastYearBar","fetchGroupStats","getCurrentTime","GroupView","props","state","groupTotal","groupsToday","groupsTodayText","groupMonth","groupYear","groupSize","groupsLastMonth","groupsLastYear","groupsPerCountry","groupsPerNGO","lastUpdate","fetchData","setInterval","groupStats","lastMonth","data","lastUpdatedAt","groupMonthCount","groupYearCount","forEach","element","count","setState","length","day","month","groupsCountry","groupsNGO","mapStateToProps","KPI"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport { KPICard } from \"../util/KPICard\";\n\nimport TotalGraph from \"../charts/graph/TotalGraph\";\nimport SizeChart from \"../charts/circle/SizeChart\";\n\nimport TopBar from \"../charts/bar/TopBar\";\nimport LastMonthBar from \"../charts/bar/LastMonthBar\";\nimport LastYearBar from \"../charts/bar/LastYearBar\";\n\nimport { fetchGroupStats } from \"../../../redux/actions/KPI/GroupStatsAction\";\nimport { getCurrentTime } from \"../../../util/Date\";\n\nclass GroupView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      groupTotal: \"\",\n      groupsToday: \"\",\n      groupsTodayText: \"\",\n      groupMonth: \"\",\n      groupYear: \"\",\n      groupSize: \"\",\n      groupsLastMonth: \"\",\n      groupsLastYear: \"\",\n      groupsPerCountry: \"\",\n      groupsPerNGO: \"\",\n      lastUpdate: \"\"\n    };\n  }\n  componentDidMount() {\n    this.fetchData();\n\n    setInterval(async () => {\n      this.fetchData();\n    }, 10000000);\n  }\n\n  async fetchData() {\n    await this.props.fetchGroupStats();\n\n    const groupStats = this.props.groupStats;\n    const lastMonth = groupStats.groupsLastMonth.data;\n    let lastUpdatedAt = getCurrentTime();\n\n    let groupMonthCount = 0;\n    let groupYearCount = 0;\n\n    lastMonth.forEach(element => (groupMonthCount += element.count));\n    groupStats.groupsLastYear.data.forEach(\n      element => (groupYearCount += element.count)\n    );\n\n    this.setState({\n      groupTotal: groupStats.groupTotal,\n      groupsToday: lastMonth[lastMonth.length - 1].count,\n      groupsTodayText:\n        lastMonth[lastMonth.length - 1].day.day +\n        \"/\" +\n        lastMonth[lastMonth.length - 1].day.month,\n      groupMonth: groupMonthCount,\n      groupYear: groupYearCount,\n      groupSize: groupStats.groupSize,\n      groupsLastMonth: lastMonth,\n      groupsLastYear: groupStats.groupsLastYear.data,\n      groupsPerCountry: groupStats.groupsCountry,\n      groupsPerNGO: groupStats.groupsNGO,\n      lastUpdate: lastUpdatedAt\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"content\">\n        <Grid fluid>\n          <Row>\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-graph1 text-danger\" />}\n                statsText=\"Total Groups\"\n                statsValue={this.state.groupTotal}\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText={`Last Update: ${this.state.lastUpdate}`}\n              />\n            </Col>\n\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-users text-info\" />}\n                statsText={\"Groups \" + this.state.groupsTodayText}\n                statsValue={this.state.groupsToday}\n                statsIcon={<i className=\"fa fa-clock-o\" />}\n                statsIconText={`Last Update: ${this.state.lastUpdate}`}\n              />\n            </Col>\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-users text-info\" />}\n                statsText=\"This Month\"\n                statsValue={this.state.groupMonth}\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText={`Last Update: ${this.state.lastUpdate}`}\n              />\n            </Col>\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-users text-info\" />}\n                statsText=\"Last Year\"\n                statsValue={this.state.groupYear}\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText={`Last Update: ${this.state.lastUpdate}`}\n              />\n            </Col>\n          </Row>\n\n          <Row>\n            <Col lg={4} sm={6}>\n              <TotalGraph\n                title=\"Total Groups\"\n                stroke=\"#228b22\"\n                data={this.state.groupsLastYear}\n              />\n            </Col>\n            <Col lg={4} sm={6}>\n              <TopBar\n                title=\"Groups Per Country\"\n                xLabel=\"Countries\"\n                yLabel=\"Groups\"\n                color=\"#ff0000\"\n                data={this.state.groupsPerCountry}\n                css=\"card-graph card-stats\"\n              />\n            </Col>\n            <Col lg={4} sm={6}>\n              <TopBar\n                title=\"Groups Per NGO\"\n                xLabel=\"NGOs\"\n                yLabel=\"Groups\"\n                color=\"#ff0000\"\n                data={this.state.groupsPerNGO}\n                css=\"card-graph card-stats\"\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col lg={4} sm={6}>\n              <LastMonthBar\n                title=\"Groups Last Month\"\n                color=\"#228b22\"\n                xLabel=\"Days\"\n                yLabel=\"Groups\"\n                data={this.state.groupsLastMonth}\n              />\n            </Col>\n            <Col lg={4} sm={6}>\n              <SizeChart\n                title=\"Group Size\"\n                colors={[\n                  \"#a4de6c\",\n                  \"#67b6ed\",\n                  \"#8884d8\",\n                  \"#ff0000\",\n                  \"#2196f3\",\n                  \"#228b22\"\n                ]}\n                data={this.state.groupSize}\n              />\n            </Col>\n            <Col lg={4} sm={6}>\n              <LastYearBar\n                title=\"Groups Last Year\"\n                color=\"#2196f3\"\n                xLabel=\"Months\"\n                yLabel=\"Groups\"\n                data={this.state.groupsLastYear}\n              />\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    groupStats: state.KPI.groupStats\n  };\n};\n\nexport default connect(mapStateToProps, { fetchGroupStats })(GroupView);\n"]},"metadata":{},"sourceType":"module"}