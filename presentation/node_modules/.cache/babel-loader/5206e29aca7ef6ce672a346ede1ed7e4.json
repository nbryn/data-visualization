{"ast":null,"code":"import { LOGIN } from \"./ActionTypes\";\nimport axios from \"axios\";\nconst url = \"https://anpjwd4bz4.execute-api.eu-central-1.amazonaws.com/dev/graphql\";\nexport const login = (username, password, history) => async dispatch => {\n  const data = \"mutation {\\n        signin(input: {\\n          channel: ANDROID\\n          username: \\\"\".concat(username, \"\\\"\\n          password: \\\"\").concat(password, \"\\\"\\n        }) {\\n          ... on ValidationError {\\n            result {\\n              field\\n              errors\\n            }\\n          }\\n    \\n          ... on Login {\\n            token\\n            refreshToken\\n            deviceId\\n            user {\\n              email\\n              phoneCode\\n              phoneNumber\\n              username\\n              firstName\\n              lastName\\n              image\\n              gender\\n              language\\n              active\\n              verified\\n            }  \\n          }\\n        }\\n      }\");\n  let result;\n\n  try {\n    result = await axios({\n      url,\n      method: \"post\",\n      data: {\n        query: data\n      }\n    });\n  } catch (err) {\n    console.log(err);\n  } // Flag for error in DB?\n\n\n  if (Array.isArray(result.data.data.signin.result)) {\n    console.log(result);\n    return result.data.data.signin.result[0].errors;\n  } else {\n    dispatch({\n      type: LOGIN,\n      payload: result.data.data.signin.user\n    });\n    history.push(\"/dashboard\");\n  }\n};","map":{"version":3,"sources":["/home/nbryn/Desktop/JamiiPay/jamiipay-web-dashboard/src/redux/actions/UserActions.js"],"names":["LOGIN","axios","url","login","username","password","history","dispatch","data","result","method","query","err","console","log","Array","isArray","signin","errors","type","payload","user","push"],"mappings":"AAAA,SAASA,KAAT,QAAsB,eAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GACP,uEADF;AAGA,OAAO,MAAMC,KAAK,GAAG,CAACC,QAAD,EAAWC,QAAX,EAAqBC,OAArB,KAAiC,MAAMC,QAAN,IAAkB;AACtE,QAAMC,IAAI,oGAGWJ,QAHX,uCAIWC,QAJX,kkBAAV;AAkCA,MAAII,MAAJ;;AAEA,MAAI;AACFA,IAAAA,MAAM,GAAG,MAAMR,KAAK,CAAC;AACnBC,MAAAA,GADmB;AAEnBQ,MAAAA,MAAM,EAAE,MAFW;AAGnBF,MAAAA,IAAI,EAAE;AACJG,QAAAA,KAAK,EAAEH;AADH;AAHa,KAAD,CAApB;AAOD,GARD,CAQE,OAAOI,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,GA/CqE,CAiDtE;;;AACA,MAAIG,KAAK,CAACC,OAAN,CAAcP,MAAM,CAACD,IAAP,CAAYA,IAAZ,CAAiBS,MAAjB,CAAwBR,MAAtC,CAAJ,EAAmD;AACjDI,IAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACA,WAAOA,MAAM,CAACD,IAAP,CAAYA,IAAZ,CAAiBS,MAAjB,CAAwBR,MAAxB,CAA+B,CAA/B,EAAkCS,MAAzC;AACD,GAHD,MAGO;AACLX,IAAAA,QAAQ,CAAC;AACPY,MAAAA,IAAI,EAAEnB,KADC;AAEPoB,MAAAA,OAAO,EAAEX,MAAM,CAACD,IAAP,CAAYA,IAAZ,CAAiBS,MAAjB,CAAwBI;AAF1B,KAAD,CAAR;AAKAf,IAAAA,OAAO,CAACgB,IAAR,CAAa,YAAb;AACD;AACF,CA7DM","sourcesContent":["import { LOGIN } from \"./ActionTypes\";\nimport axios from \"axios\";\n\nconst url =\n  \"https://anpjwd4bz4.execute-api.eu-central-1.amazonaws.com/dev/graphql\";\n\nexport const login = (username, password, history) => async dispatch => {\n  const data = `mutation {\n        signin(input: {\n          channel: ANDROID\n          username: \"${username}\"\n          password: \"${password}\"\n        }) {\n          ... on ValidationError {\n            result {\n              field\n              errors\n            }\n          }\n    \n          ... on Login {\n            token\n            refreshToken\n            deviceId\n            user {\n              email\n              phoneCode\n              phoneNumber\n              username\n              firstName\n              lastName\n              image\n              gender\n              language\n              active\n              verified\n            }  \n          }\n        }\n      }`;\n\n  let result;\n\n  try {\n    result = await axios({\n      url,\n      method: \"post\",\n      data: {\n        query: data\n      }\n    });\n  } catch (err) { \n    console.log(err);\n  }\n\n  // Flag for error in DB?\n  if (Array.isArray(result.data.data.signin.result)) {\n    console.log(result)\n    return result.data.data.signin.result[0].errors;\n  } else {\n    dispatch({\n      type: LOGIN,\n      payload: result.data.data.signin.user\n    });\n\n    history.push(\"/dashboard\");\n  }\n};\n"]},"metadata":{},"sourceType":"module"}