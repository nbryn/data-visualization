{"ast":null,"code":"var _jsxFileName = \"/home/nbryn/Desktop/jamiipay/Projects/jamiipay-web-dashboard/presentation/src/components/dashboard/views/UserView.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport { KPICard } from \"../util/KPICard\";\nimport Sidebar from \"../../navigation/Sidebar\";\nimport Header from \"../../navigation/Header\";\nimport TotalGraph from \"../charts/graph/TotalGraph\";\nimport SizeChart from \"../charts/circle/SizeChart\";\nimport LastMonthBar from \"../charts/bar/LastMonthBar\";\nimport LastYearBar from \"../charts/bar/LastYearBar\";\nimport { fetchUserStats } from \"../../../redux/actions/kpi/UserStatsAction\";\nimport { getCurrentTime } from \"../../../util/Date\";\n\nclass KPIView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  async componentDidMount() {\n    this.fetchData();\n    setInterval(async () => {\n      this.fetchData();\n    }, 1000000);\n  }\n\n  async fetchData() {\n    await this.props.fetchUserStats();\n    const userStats = this.props.userStats;\n    let lastUpdatedAt = getCurrentTime();\n    let userMonthCount = 0;\n    let userYearCount = 0;\n    userStats.usersLastMonth.data.forEach(element => userMonthCount += element.count);\n    userStats.usersLastYear.data.forEach(element => userYearCount += element.count);\n    this.setState({\n      userTotal: userStats.userCount,\n      usersToday: userStats.usersLastMonth.data[userStats.usersLastMonth.data.length - 1].count,\n      usersTodayText: userStats.usersLastMonth.data[userStats.usersLastMonth.data.length - 1].day.day + \"/\" + userStats.usersLastMonth.data[userStats.usersLastMonth.data.length - 1].day.month,\n      userMonth: userMonthCount,\n      userYear: userYearCount,\n      usersLastMonth: userStats.usersLastMonth.data,\n      usersLastYear: userStats.usersLastYear.data,\n      userGender: userStats.userGenderStats,\n      lastUpdate: lastUpdatedAt\n    });\n  }\n\n  render() {\n    const KPICards = {\n      userTotal: {\n        text: \"Total Users\",\n        icon: \"pe-7s-user text-warning\"\n      },\n      usersToday: {\n        text: `Users ${this.state.usersTodayText}`,\n        icon: \"pe-7s-users text-info\"\n      },\n      userMonth: {\n        text: \"Last Month\",\n        icon: \"pe-7s-graph1 text-danger\"\n      },\n      userYear: {\n        text: \"Last Year\",\n        icon: \"pe-7s-wallet text-success\"\n      }\n    };\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"main-panel\",\n      className: \"main-panel\",\n      ref: \"mainPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Header, {\n      title: \"Users\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, Object.keys(KPICards).map((element, index => React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: KPICards[element].text,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }),\n      statsText: KPICards[element].icon,\n      statsValue: this.state[element],\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-refresh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }),\n      statsIconText: `Last Update: ${this.state.lastUpdate}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }))))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(TotalGraph, {\n      title: \"Total Users\",\n      stroke: \"#ff0000\",\n      data: this.state.usersLastYear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(LastMonthBar, {\n      title: \"Users Per Day\",\n      color: \"#228b22\",\n      data: this.state.usersLastMonth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(SizeChart, {\n      title: \"Gender Distribution\",\n      colors: [\"#1828E8\", \"#228b22\"],\n      data: this.state.userGender,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, React.createElement(LastYearBar, {\n      title: \"Users Per Month\",\n      color: \"#ff0000\",\n      data: this.state.usersLastYear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userStats: state.KPI.userStats\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchUserStats\n})(KPIView);","map":{"version":3,"sources":["/home/nbryn/Desktop/jamiipay/Projects/jamiipay-web-dashboard/presentation/src/components/dashboard/views/UserView.js"],"names":["React","Component","connect","Grid","Row","Col","KPICard","Sidebar","Header","TotalGraph","SizeChart","LastMonthBar","LastYearBar","fetchUserStats","getCurrentTime","KPIView","constructor","props","state","componentDidMount","fetchData","setInterval","userStats","lastUpdatedAt","userMonthCount","userYearCount","usersLastMonth","data","forEach","element","count","usersLastYear","setState","userTotal","userCount","usersToday","length","usersTodayText","day","month","userMonth","userYear","userGender","userGenderStats","lastUpdate","render","KPICards","text","icon","Object","keys","map","index","mapStateToProps","KPI"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport { KPICard } from \"../util/KPICard\";\n\nimport Sidebar from \"../../navigation/Sidebar\";\nimport Header from \"../../navigation/Header\";\n\nimport TotalGraph from \"../charts/graph/TotalGraph\";\nimport SizeChart from \"../charts/circle/SizeChart\";\nimport LastMonthBar from \"../charts/bar/LastMonthBar\";\nimport LastYearBar from \"../charts/bar/LastYearBar\";\n\nimport { fetchUserStats } from \"../../../redux/actions/kpi/UserStatsAction\";\nimport { getCurrentTime } from \"../../../util/Date\";\n\nclass KPIView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n  async componentDidMount() {\n    this.fetchData();\n\n    setInterval(async () => {\n      this.fetchData();\n    }, 1000000);\n  }\n\n  async fetchData() {\n    await this.props.fetchUserStats();\n\n    const userStats = this.props.userStats;\n\n    let lastUpdatedAt = getCurrentTime();\n\n    let userMonthCount = 0;\n    let userYearCount = 0;\n\n    userStats.usersLastMonth.data.forEach(\n      element => (userMonthCount += element.count)\n    );\n    userStats.usersLastYear.data.forEach(\n      element => (userYearCount += element.count)\n    );\n\n    this.setState({\n      userTotal: userStats.userCount,\n      usersToday:\n        userStats.usersLastMonth.data[userStats.usersLastMonth.data.length - 1]\n          .count,\n      usersTodayText:\n        userStats.usersLastMonth.data[userStats.usersLastMonth.data.length - 1]\n          .day.day +\n        \"/\" +\n        userStats.usersLastMonth.data[userStats.usersLastMonth.data.length - 1]\n          .day.month,\n      userMonth: userMonthCount,\n      userYear: userYearCount,\n      usersLastMonth: userStats.usersLastMonth.data,\n      usersLastYear: userStats.usersLastYear.data,\n      userGender: userStats.userGenderStats,\n      lastUpdate: lastUpdatedAt\n    });\n  }\n\n  render() {\n    const KPICards = {\n      userTotal: { text: \"Total Users\", icon: \"pe-7s-user text-warning\" },\n      usersToday: {\n        text: `Users ${this.state.usersTodayText}`,\n        icon: \"pe-7s-users text-info\"\n      },\n      userMonth: {\n        text: \"Last Month\",\n        icon: \"pe-7s-graph1 text-danger\"\n      },\n      userYear: { text: \"Last Year\", icon: \"pe-7s-wallet text-success\" }\n    };\n    return (\n      <div className=\"wrapper\">\n        <Sidebar />\n        <div id=\"main-panel\" className=\"main-panel\" ref=\"mainPanel\">\n          <Header title=\"Users\" />\n          <div className=\"content\">\n            <Grid fluid>\n              <Row>\n                {Object.keys(KPICards).map((element, index => (\n                  <Col lg={3} sm={6}>\n                  <KPICard\n                    bigIcon={<i className={KPICards[element].text} />}\n                    statsText={KPICards[element].icon}\n                    statsValue={this.state[element]}\n                    statsIcon={<i className=\"fa fa-refresh\" />}\n                    statsIconText={`Last Update: ${this.state.lastUpdate}`}\n                  />\n                  </Col>\n                )))}\n                {/* <Col lg={3} sm={6}>\n                  <KPICard\n                    bigIcon={<i className=\"pe-7s-user text-warning\" />}\n                    statsText=\"Total Users\"\n                    statsValue={this.state.userTotal}\n                    statsIcon={<i className=\"fa fa-refresh\" />}\n                    statsIconText={`Last Update: ${this.state.lastUpdate}`}\n                  />\n                </Col>\n                <Col lg={3} sm={6}>\n                  <KPICard\n                    bigIcon={<i className=\"pe-7s-user text-warning\" />}\n                    statsText={\"Users \" + this.state.usersTodayText}\n                    statsValue={this.state.usersToday}\n                    statsIcon={<i className=\"fa fa-refresh\" />}\n                    statsIconText={`Last Update: ${this.state.lastUpdate}`}\n                  />\n                </Col>\n\n                <Col lg={3} sm={6}>\n                  <KPICard\n                    bigIcon={<i className=\"pe-7s-user text-warning\" />}\n                    statsText=\"Last Month\"\n                    statsValue={this.state.userMonth}\n                    statsIcon={<i className=\"fa fa-calendar-o\" />}\n                    statsIconText={`Last Update: ${this.state.lastUpdate}`}\n                  />\n                </Col>\n                <Col lg={3} sm={6}>\n                  <KPICard\n                    bigIcon={<i className=\"pe-7s-user text-warning\" />}\n                    statsText=\"Last Year\"\n                    statsValue={this.state.userTotal}\n                    statsIcon={<i className=\"fa fa-clock-o\" />}\n                    statsIconText={`Last Update: ${this.state.lastUpdate}`}\n                  />\n                </Col> */}\n              </Row>\n\n              <Row>\n                <Col lg={4} sm={6}>\n                  <TotalGraph\n                    title=\"Total Users\"\n                    stroke=\"#ff0000\"\n                    data={this.state.usersLastYear}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col lg={4} sm={6}>\n                  <LastMonthBar\n                    title=\"Users Per Day\"\n                    color=\"#228b22\"\n                    data={this.state.usersLastMonth}\n                  />\n                </Col>\n                <Col lg={4} sm={6}>\n                  <SizeChart\n                    title=\"Gender Distribution\"\n                    colors={[\"#1828E8\", \"#228b22\"]}\n                    data={this.state.userGender}\n                  />\n                </Col>\n\n                <Col lg={4} sm={6}>\n                  <LastYearBar\n                    title=\"Users Per Month\"\n                    color=\"#ff0000\"\n                    data={this.state.usersLastYear}\n                  />\n                </Col>\n              </Row>\n            </Grid>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userStats: state.KPI.userStats\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchUserStats\n})(KPIView);\n"]},"metadata":{},"sourceType":"module"}