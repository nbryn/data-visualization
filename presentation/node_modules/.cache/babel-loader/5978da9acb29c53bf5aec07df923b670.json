{"ast":null,"code":"var _jsxFileName = \"/home/nbryn/Desktop/JamiiPay/jamiipay-web-dashboard/presentation/src/components/dashboard/views/GroupView.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport { KPICard } from \"../util/KPICard\";\nimport TotalGraph from \"../charts/graph/TotalGraph\";\nimport SizeChart from \"../charts/circle/SizeChart\";\nimport TopBar from \"../charts/bar/TopBar\";\nimport LastMonthBar from \"../charts/bar/LastMonthBar\";\nimport LastYearBar from \"../charts/bar/LastYearBar\";\nimport { fetchGroupStats } from \"../../../redux/actions/KPI/GroupStatsAction\";\nimport { getCurrentTime } from \"../../../util/Date\";\n\nclass GroupView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      groupTotal: \"\",\n      groupsToday: \"\",\n      groupsTodayText: \"\",\n      groupMonth: \"\",\n      groupYear: \"\",\n      groupSize: \"\",\n      groupsLastMonth: \"\",\n      groupsLastYear: \"\",\n      groupsPerCountry: \"\",\n      groupsPerNGO: \"\",\n      lastUpdate: \"\"\n    };\n    this.fetchData = this.fetchData.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchData();\n    setInterval(async () => {\n      this.fetchData();\n    }, 10000000);\n  }\n\n  async fetchData() {\n    await this.props.fetchGroupStats();\n    const groupStats = this.props.groupStats;\n    const lastMonth = groupStats.groupsLastMonth.data;\n    let lastUpdatedAt = getCurrentTime();\n    let groupMonthCount = 0;\n    let groupYearCount = 0;\n    lastMonth.forEach(element => groupMonthCount += element.count);\n    groupStats.groupsLastYear.data.forEach(element => groupYearCount += element.count);\n    this.setState({\n      groupTotal: groupStats.groupTotal,\n      groupsToday: lastMonth[lastMonth.length - 1].count,\n      groupsTodayText: lastMonth[lastMonth.length - 1].day.day + \"/\" + lastMonth[lastMonth.length - 1].day.month,\n      groupMonth: groupMonthCount,\n      groupYear: groupYearCount,\n      groupSize: groupStats.groupSize,\n      groupsLastMonth: lastMonth,\n      groupsLastYear: groupStats.groupsLastYear.data,\n      groupsPerCountry: groupStats.groupsCountry,\n      groupsPerNGO: groupStats.groupsNGO,\n      lastUpdate: lastUpdatedAt\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: \"pe-7s-graph1 text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }),\n      statsText: \"Total Groups\",\n      statsValue: this.state.groupTotal,\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-refresh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }),\n      statsIconText: \"Last Update: \".concat(this.state.lastUpdate),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: \"pe-7s-users text-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }),\n      statsText: \"Groups \" + this.state.groupsTodayText,\n      statsValue: this.state.groupsToday,\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-clock-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }),\n      statsIconText: \"Last Update: \".concat(this.state.lastUpdate),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: \"pe-7s-users text-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }),\n      statsText: \"This Month\",\n      statsValue: this.state.groupMonth,\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-refresh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }),\n      statsIconText: \"Last Update: \".concat(this.state.lastUpdate),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: \"pe-7s-users text-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }),\n      statsText: \"This Year\",\n      statsValue: this.state.groupYear,\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-refresh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }),\n      statsIconText: \"Last Update: \".concat(this.state.lastUpdate),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 5,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(TotalGraph, {\n      title: \"Total Groups\",\n      stroke: \"#228b22\",\n      data: this.state.groupsLastYear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(TopBar, {\n      title: \"Groups Per Country\",\n      xLabel: \"Countries\",\n      yLabel: \"Groups\",\n      color: \"#ff0000\",\n      data: this.state.groupsPerCountry,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(TopBar, {\n      title: \"Groups Per NGO\",\n      xLabel: \"NGOs\",\n      yLabel: \"Groups\",\n      color: \"#ff0000\",\n      data: this.state.groupsPerNGO,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(LastMonthBar, {\n      title: \"Groups Last Month\",\n      color: \"#228b22\",\n      xLabel: \"Days\",\n      yLabel: \"Groups\",\n      data: this.state.groupsLastMonth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(SizeChart, {\n      title: \"Group Size\",\n      colors: [\"#a4de6c\", \"#67b6ed\", \"#8884d8\", \"#ff0000\", \"#2196f3\", \"#228b22\"],\n      data: this.state.groupSize,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(LastYearBar, {\n      title: \"Groups Last Year\",\n      color: \"#2196f3\",\n      xLabel: \"Months\",\n      yLabel: \"Groups\",\n      data: this.state.groupsLastYear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    groupStats: state.KPI.groupStats\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchGroupStats\n})(GroupView);","map":{"version":3,"sources":["/home/nbryn/Desktop/JamiiPay/jamiipay-web-dashboard/presentation/src/components/dashboard/views/GroupView.js"],"names":["React","Component","connect","Grid","Row","Col","KPICard","TotalGraph","SizeChart","TopBar","LastMonthBar","LastYearBar","fetchGroupStats","getCurrentTime","GroupView","constructor","props","state","groupTotal","groupsToday","groupsTodayText","groupMonth","groupYear","groupSize","groupsLastMonth","groupsLastYear","groupsPerCountry","groupsPerNGO","lastUpdate","fetchData","bind","componentDidMount","setInterval","groupStats","lastMonth","data","lastUpdatedAt","groupMonthCount","groupYearCount","forEach","element","count","setState","length","day","month","groupsCountry","groupsNGO","render","mapStateToProps","KPI"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport { KPICard } from \"../util/KPICard\";\n\nimport TotalGraph from \"../charts/graph/TotalGraph\";\nimport SizeChart from \"../charts/circle/SizeChart\";\n\nimport TopBar from \"../charts/bar/TopBar\";\nimport LastMonthBar from \"../charts/bar/LastMonthBar\";\nimport LastYearBar from \"../charts/bar/LastYearBar\";\n\nimport { fetchGroupStats } from \"../../../redux/actions/KPI/GroupStatsAction\";\nimport { getCurrentTime } from \"../../../util/Date\";\n\nclass GroupView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      groupTotal: \"\",\n      groupsToday: \"\",\n      groupsTodayText: \"\",\n      groupMonth: \"\",\n      groupYear: \"\",\n      groupSize: \"\",\n      groupsLastMonth: \"\",\n      groupsLastYear: \"\",\n      groupsPerCountry: \"\",\n      groupsPerNGO: \"\",\n      lastUpdate: \"\"\n    };\n    this.fetchData = this.fetchData.bind(this);\n  }\n  componentDidMount() {\n    this.fetchData();\n\n    setInterval(async () => {\n      this.fetchData();\n    }, 10000000);\n  }\n\n  async fetchData() {\n    await this.props.fetchGroupStats();\n\n    const groupStats = this.props.groupStats;\n    const lastMonth = groupStats.groupsLastMonth.data;\n    let lastUpdatedAt = getCurrentTime();\n\n    let groupMonthCount = 0;\n    let groupYearCount = 0;\n\n    lastMonth.forEach(element => (groupMonthCount += element.count));\n    groupStats.groupsLastYear.data.forEach(\n      element => (groupYearCount += element.count)\n    );\n\n    this.setState({\n      groupTotal: groupStats.groupTotal,\n      groupsToday: lastMonth[lastMonth.length - 1].count,\n      groupsTodayText:\n        lastMonth[lastMonth.length - 1].day.day +\n        \"/\" +\n        lastMonth[lastMonth.length - 1].day.month,\n      groupMonth: groupMonthCount,\n      groupYear: groupYearCount,\n      groupSize: groupStats.groupSize,\n      groupsLastMonth: lastMonth,\n      groupsLastYear: groupStats.groupsLastYear.data,\n      groupsPerCountry: groupStats.groupsCountry,\n      groupsPerNGO: groupStats.groupsNGO,\n      lastUpdate: lastUpdatedAt\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"content\">\n        <Grid fluid>\n          <Row>\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-graph1 text-danger\" />}\n                statsText=\"Total Groups\"\n                statsValue={this.state.groupTotal}\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText={`Last Update: ${this.state.lastUpdate}`}\n              />\n            </Col>\n\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-users text-info\" />}\n                statsText={\"Groups \" + this.state.groupsTodayText}\n                statsValue={this.state.groupsToday}\n                statsIcon={<i className=\"fa fa-clock-o\" />}\n                statsIconText={`Last Update: ${this.state.lastUpdate}`}\n              />\n            </Col>\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-users text-info\" />}\n                statsText=\"This Month\"\n                statsValue={this.state.groupMonth}\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText={`Last Update: ${this.state.lastUpdate}`}\n              />\n            </Col>\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-users text-info\" />}\n                statsText=\"This Year\"\n                statsValue={this.state.groupYear}\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText={`Last Update: ${this.state.lastUpdate}`}\n              />\n            </Col>\n          </Row>\n\n          <Row>\n            <Col lg={5} sm={6}>\n            <TotalGraph\n              title=\"Total Groups\"\n              stroke=\"#228b22\"\n              data={this.state.groupsLastYear}\n            />\n            </Col>\n            <Col lg={4} sm={6}>\n              <TopBar\n                title=\"Groups Per Country\"\n                xLabel=\"Countries\"\n                yLabel=\"Groups\"\n                color=\"#ff0000\"\n                data={this.state.groupsPerCountry}\n              />\n            </Col>\n            <Col lg={4} sm={6}>\n              <TopBar\n                title=\"Groups Per NGO\"\n                xLabel=\"NGOs\"\n                yLabel=\"Groups\"\n                color=\"#ff0000\"\n                data={this.state.groupsPerNGO}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col lg={4} sm={6}>\n              <LastMonthBar\n                title=\"Groups Last Month\"\n                color=\"#228b22\"\n                xLabel=\"Days\"\n                yLabel=\"Groups\"\n                data={this.state.groupsLastMonth}\n              />\n            </Col>\n            <Col lg={4} sm={6}>\n            <SizeChart\n                title=\"Group Size\"\n                colors={[\n                  \"#a4de6c\",\n                  \"#67b6ed\",           \n                  \"#8884d8\",\n                  \"#ff0000\",\n                  \"#2196f3\",\n                  \"#228b22\"\n                ]}\n                data={this.state.groupSize}\n              />\n            </Col>\n            <Col lg={4} sm={6}>\n              <LastYearBar\n                title=\"Groups Last Year\"\n                color=\"#2196f3\"\n                xLabel=\"Months\"\n                yLabel=\"Groups\"\n                data={this.state.groupsLastYear}\n              />\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    groupStats: state.KPI.groupStats\n  };\n};\n\nexport default connect(mapStateToProps, { fetchGroupStats })(GroupView);\n"]},"metadata":{},"sourceType":"module"}