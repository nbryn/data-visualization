{"ast":null,"code":"import _regeneratorRuntime from \"/home/nbryn/Desktop/jamiipay/Projects/jamiipay-web-dashboard/presentation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/nbryn/Desktop/jamiipay/Projects/jamiipay-web-dashboard/presentation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { MEETING_STATS } from \"../ActionTypes\";\nimport { fetchFromServer } from \"../Fetch\";\nexport var fetchMeetingStats = function fetchMeetingStats() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var data, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                data = \"query{\\n    meetingStats{\\n      meetingTotal\\n      meetingsLastMonth{\\n        data{\\n          count\\n          day{\\n            year\\n            month\\n            day\\n          }\\n        }\\n      }\\n      meetingsLastYear{\\n        data{\\n          year\\n          month\\n          count\\n          \\n        }\\n      }\\n    }\\n  }\";\n                _context.next = 3;\n                return fetchFromServer(\"post\", data);\n\n              case 3:\n                response = _context.sent;\n                console.log(response);\n                dispatch({\n                  type: MEETING_STATS,\n                  payload: response.data.data.meetingStats\n                });\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/home/nbryn/Desktop/jamiipay/Projects/jamiipay-web-dashboard/presentation/src/redux/actions/kpi/MeetingStatsAction.js"],"names":["MEETING_STATS","fetchFromServer","fetchMeetingStats","dispatch","data","response","console","log","type","payload","meetingStats"],"mappings":";;AAAA,SAASA,aAAT,QAA8B,gBAA9B;AACA,SAASC,eAAT,QAAgC,UAAhC;AAEA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAM,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAC/BC,gBAAAA,IAD+B;AAAA;AAAA,uBAyBdH,eAAe,CAAC,MAAD,EAASG,IAAT,CAzBD;;AAAA;AAyB/BC,gBAAAA,QAzB+B;AA2BrCC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAEAF,gBAAAA,QAAQ,CAAC;AACPK,kBAAAA,IAAI,EAAER,aADC;AAEPS,kBAAAA,OAAO,EAAEJ,QAAQ,CAACD,IAAT,CAAcA,IAAd,CAAmBM;AAFrB,iBAAD,CAAR;;AA7BqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA1B","sourcesContent":["import { MEETING_STATS } from \"../ActionTypes\";\nimport { fetchFromServer } from \"../Fetch\";\n\nexport const fetchMeetingStats = () => async dispatch => {\n  const data = `query{\n    meetingStats{\n      meetingTotal\n      meetingsLastMonth{\n        data{\n          count\n          day{\n            year\n            month\n            day\n          }\n        }\n      }\n      meetingsLastYear{\n        data{\n          year\n          month\n          count\n          \n        }\n      }\n    }\n  }`;\n\n  const response = await fetchFromServer(\"post\", data);\n\n  console.log(response);\n\n  dispatch({\n    type: MEETING_STATS,\n    payload: response.data.data.meetingStats\n  });\n};\n"]},"metadata":{},"sourceType":"module"}