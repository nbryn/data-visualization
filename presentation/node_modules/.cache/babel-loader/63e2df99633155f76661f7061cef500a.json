{"ast":null,"code":"var _jsxFileName = \"/home/nbryn/Desktop/jamiipay/Projects/jamiipay-web-dashboard/presentation/src/components/ngo/NGOView.js\";\nimport React, { Component } from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport ToolkitProvider, { Search, ColumnToggle } from \"react-bootstrap-table2-toolkit\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport NGOGroupView from \"./NGOGroupView\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport Sidebar from \"../navigation/Sidebar\";\nimport Header from \"../navigation/Header\";\nimport { fetchGroupsByNGO } from \"../../redux/actions/ngo/NGOGroupsAction\";\n\nclass NGOView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      newPage: false,\n      groupID: \"\",\n      data: {}\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n    setInterval(async () => {\n      this.fetchData();\n    }, 10000000);\n  }\n\n  async fetchData() {\n    await this.props.fetchGroupsByNGO('\"FHIDO\"');\n    const newState = this.props.groups.groupData.map(element => {\n      return {\n        id: element.id,\n        name: element.name,\n        cycle: element.cycle,\n        meetings: element.meetings,\n        shares: element.shares,\n        loans: element.loans,\n        admin: element.admin,\n        owner: element.owner\n      };\n    });\n    this.setState({\n      data: newState\n    });\n  }\n\n  render() {\n    let groupData;\n    let id = 0;\n\n    if (Array.isArray(this.state.data)) {\n      groupData = this.state.data.map(group => {\n        return {\n          id: id++,\n          objectID: group.id,\n          name: group.name,\n          cycle: group.cycle,\n          meetings: group.meetings,\n          shares: group.shares,\n          loans: group.loans,\n          admin: group.admin,\n          owner: group.owner\n        };\n      });\n    }\n\n    const SearchBar = Search.SearchBar,\n          ClearSearchButton = Search.ClearSearchButton;\n    const selectRow = {\n      mode: \"radio\",\n      clickToSelect: true,\n      style: {\n        backgroundColor: \"#c8e6c9\"\n      },\n      onSelect: (row, isSelect, rowIndex, e) => {\n        console.log(row);\n        this.setState({\n          newPage: true,\n          groupdID: row.objectID\n        });\n      }\n    };\n    const ToggleList = ColumnToggle.ToggleList;\n    const columns = [{\n      dataField: \"name\",\n      text: \"Name\"\n    }, {\n      dataField: \"cycle\",\n      text: \"Cycle\"\n    }, {\n      dataField: \"meetings\",\n      text: \"Meetings\"\n    }, {\n      dataField: \"shares\",\n      text: \"Shares\"\n    }, {\n      dataField: \"loans\",\n      text: \"Loans\"\n    }, {\n      dataField: \"admin\",\n      text: \"Admin\"\n    }, {\n      dataField: \"owner\",\n      text: \"Owner\"\n    }];\n    return this.state.newPage ? React.createElement(NGOGroupView, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }) : React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"main-panel\",\n      className: \"main-panel\",\n      ref: \"mainPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Header, {\n      title: \"NGOView \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(ToolkitProvider, {\n      keyField: \"name\",\n      data: groupData,\n      columns: columns,\n      search: true,\n      columnToggle: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, props => React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Search\"), React.createElement(SearchBar, Object.assign({}, props.searchProps, {\n      placeholder: \"Group Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    })), React.createElement(ClearSearchButton, Object.assign({}, props.searchProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }), React.createElement(ToggleList, Object.assign({}, props.columnToggleProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(BootstrapTable, Object.assign({}, props.baseProps, {\n      keyField: \"id\",\n      data: groupData ? groupData : [],\n      columns: columns,\n      selectRow: selectRow,\n      pagination: paginationFactory(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    })))))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    groups: state.NGO.groups\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchGroupsByNGO\n})(NGOView);","map":{"version":3,"sources":["/home/nbryn/Desktop/jamiipay/Projects/jamiipay-web-dashboard/presentation/src/components/ngo/NGOView.js"],"names":["React","Component","BootstrapTable","ToolkitProvider","Search","ColumnToggle","paginationFactory","NGOGroupView","Grid","Row","Col","connect","Sidebar","Header","fetchGroupsByNGO","NGOView","constructor","props","state","newPage","groupID","data","componentDidMount","fetchData","setInterval","newState","groups","groupData","map","element","id","name","cycle","meetings","shares","loans","admin","owner","setState","render","Array","isArray","group","objectID","SearchBar","ClearSearchButton","selectRow","mode","clickToSelect","style","backgroundColor","onSelect","row","isSelect","rowIndex","e","console","log","groupdID","ToggleList","columns","dataField","text","searchProps","columnToggleProps","baseProps","mapStateToProps","NGO"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport ToolkitProvider, {\n  Search,\n  ColumnToggle\n} from \"react-bootstrap-table2-toolkit\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\n\nimport NGOGroupView from \"./NGOGroupView\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\n\nimport Sidebar from \"../navigation/Sidebar\";\nimport Header from \"../navigation/Header\";\n\nimport { fetchGroupsByNGO } from \"../../redux/actions/ngo/NGOGroupsAction\";\n\nclass NGOView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      newPage: false,\n      groupID: \"\",\n      data: {}\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n\n    setInterval(async () => {\n      this.fetchData();\n    }, 10000000);\n  }\n\n  async fetchData() {\n    await this.props.fetchGroupsByNGO('\"FHIDO\"');\n\n    const newState = this.props.groups.groupData.map(element => {\n      return {\n        id: element.id,\n        name: element.name,\n        cycle: element.cycle,\n        meetings: element.meetings,\n        shares: element.shares,\n        loans: element.loans,\n        admin: element.admin,\n        owner: element.owner\n      };\n    });\n\n    this.setState({\n      data: newState\n    });\n  }\n  render() {\n    let groupData;\n    let id = 0;\n\n    if (Array.isArray(this.state.data)) {\n      groupData = this.state.data.map(group => {\n        return {\n          id: id++,\n          objectID: group.id,\n          name: group.name,\n          cycle: group.cycle,\n          meetings: group.meetings,\n          shares: group.shares,\n          loans: group.loans,\n          admin: group.admin,\n          owner: group.owner\n        };\n      });\n    }\n\n    const { SearchBar, ClearSearchButton } = Search;\n\n    const selectRow = {\n      mode: \"radio\",\n      clickToSelect: true,\n      style: { backgroundColor: \"#c8e6c9\" },\n      onSelect: (row, isSelect, rowIndex, e) => {\n        console.log(row);\n        this.setState({\n          newPage: true,\n          groupdID: row.objectID\n        });\n      }\n    };\n\n    const { ToggleList } = ColumnToggle;\n\n    const columns = [\n      {\n        dataField: \"name\",\n        text: \"Name\"\n      },\n      {\n        dataField: \"cycle\",\n        text: \"Cycle\"\n      },\n      {\n        dataField: \"meetings\",\n        text: \"Meetings\"\n      },\n      {\n        dataField: \"shares\",\n        text: \"Shares\"\n      },\n      {\n        dataField: \"loans\",\n        text: \"Loans\"\n      },\n      {\n        dataField: \"admin\",\n        text: \"Admin\"\n      },\n      {\n        dataField: \"owner\",\n        text: \"Owner\"\n      }\n    ];\n\n    return this.state.newPage ? (\n      <NGOGroupView />\n    ) : (\n      <div className=\"wrapper\">\n        <Sidebar />\n\n        <div id=\"main-panel\" className=\"main-panel\" ref=\"mainPanel\">\n          <Header\n            title=\"NGOView\n          \"\n          />\n          <ToolkitProvider\n            keyField=\"name\"\n            data={groupData}\n            columns={columns}\n            search\n            columnToggle\n          >\n            {props => (\n              <div>\n                <h4>Search</h4>\n                <SearchBar {...props.searchProps} placeholder=\"Group Name\" />\n                <ClearSearchButton {...props.searchProps} />\n\n                <hr />\n                <ToggleList {...props.columnToggleProps} />\n                <div className=\"content\">\n                  <Grid fluid>\n                    <Row>\n                      <BootstrapTable\n                        {...props.baseProps}\n                        keyField=\"id\"\n                        data={groupData ? groupData : []}\n                        columns={columns}\n                        selectRow={selectRow}\n                        pagination={paginationFactory()}\n                      />\n                    </Row>\n                  </Grid>\n                </div>\n              </div>\n            )}\n          </ToolkitProvider>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    groups: state.NGO.groups\n  };\n};\n\nexport default connect(mapStateToProps, { fetchGroupsByNGO })(NGOView);\n"]},"metadata":{},"sourceType":"module"}