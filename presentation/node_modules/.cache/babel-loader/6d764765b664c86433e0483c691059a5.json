{"ast":null,"code":"import axios from \"axios\";\nimport { KEY_STATS } from \"../ActionTypes\";\nconst url = \"/graphql\";\nexport const fetchKeyStats = () => async dispatch => {\n  let groupResponse, userResponse, meetingResponse, shareResponse;\n\n  try {\n    let keyStats = {\n      groupStats: \"\",\n      userStats: \"\",\n      shareStats: \"\",\n      meetingStats: \"\"\n    };\n    const groupQuery = `query{\n    groupStats{\n      groupTotal    \n     groupsLastMonth{\n        data{\n          count\n          day{\n            year\n            month\n            day\n          }     \n        }\n    }\n    groupsLastYear{\n        data{\n          year\n          month\n          count  \n        }\n      }\n      \n    }\n    }`;\n    groupResponse = await axios({\n      url,\n      method: \"post\",\n      data: {\n        query: groupQuery\n      }\n    });\n    keyStats.groupStats = groupResponse.data.data.groupStats;\n    const userQuery = `query{\n      userStats{\n        userCount   \n        userGenderStats{\n          value\n          count\n         }\n        usersLastYear{\n          data{\n            year\n            month\n            count\n          }\n        }       \n      }\n      }`;\n    userResponse = await axios({\n      url,\n      method: \"post\",\n      data: {\n        query: userQuery\n      }\n    });\n    keyStats.userStats = userResponse.data.data.userStats;\n    const meetingQuery = `query {\n      meetingStats{\n        meetingTotal\n        meetingsLastYear{\n          data{\n            year\n            month\n            count\n          }\n        }            \n      }\n    }`;\n    meetingResponse = await axios({\n      url,\n      method: \"post\",\n      data: {\n        query: meetingQuery\n      }\n    });\n    keyStats.meetingStats = meetingResponse.data.data.meetingStats;\n    const shareQuery = `query {\n      financeStats{\n        shareStats {\n          shareTotal\n        }\n\n      }\n    }`;\n    shareResponse = await axios({\n      url,\n      method: \"post\",\n      data: {\n        query: shareQuery\n      }\n    });\n    keyStats.shareStats = shareResponse.data.data.financeStats.shareStats.shareTotal;\n    dispatch({\n      type: KEY_STATS,\n      payload: keyStats\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};","map":{"version":3,"sources":["/home/nbryn/Desktop/jamiipay/Projects/jamiipay-web-dashboard/presentation/src/redux/actions/kpi/KeyStatsAction.js"],"names":["axios","KEY_STATS","url","fetchKeyStats","dispatch","groupResponse","userResponse","meetingResponse","shareResponse","keyStats","groupStats","userStats","shareStats","meetingStats","groupQuery","method","data","query","userQuery","meetingQuery","shareQuery","financeStats","shareTotal","type","payload","err","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,gBAA1B;AAEA,MAAMC,GAAG,GAAG,UAAZ;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM,MAAMC,QAAN,IAAkB;AACnD,MAAIC,aAAJ,EAAmBC,YAAnB,EAAiCC,eAAjC,EAAkDC,aAAlD;;AAEA,MAAI;AACF,QAAIC,QAAQ,GAAG;AACbC,MAAAA,UAAU,EAAE,EADC;AAEbC,MAAAA,SAAS,EAAE,EAFE;AAGbC,MAAAA,UAAU,EAAE,EAHC;AAIbC,MAAAA,YAAY,EAAE;AAJD,KAAf;AAOA,UAAMC,UAAU,GAAI;;;;;;;;;;;;;;;;;;;;;;MAApB;AAwBAT,IAAAA,aAAa,GAAG,MAAML,KAAK,CAAC;AAC1BE,MAAAA,GAD0B;AAE1Ba,MAAAA,MAAM,EAAE,MAFkB;AAG1BC,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAEH;AADH;AAHoB,KAAD,CAA3B;AAQAL,IAAAA,QAAQ,CAACC,UAAT,GAAsBL,aAAa,CAACW,IAAd,CAAmBA,IAAnB,CAAwBN,UAA9C;AAEA,UAAMQ,SAAS,GAAI;;;;;;;;;;;;;;;QAAnB;AAiBAZ,IAAAA,YAAY,GAAG,MAAMN,KAAK,CAAC;AACzBE,MAAAA,GADyB;AAEzBa,MAAAA,MAAM,EAAE,MAFiB;AAGzBC,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAEC;AADH;AAHmB,KAAD,CAA1B;AAQAT,IAAAA,QAAQ,CAACE,SAAT,GAAqBL,YAAY,CAACU,IAAb,CAAkBA,IAAlB,CAAuBL,SAA5C;AAEA,UAAMQ,YAAY,GAAI;;;;;;;;;;;MAAtB;AAaAZ,IAAAA,eAAe,GAAG,MAAMP,KAAK,CAAC;AAC5BE,MAAAA,GAD4B;AAE5Ba,MAAAA,MAAM,EAAE,MAFoB;AAG5BC,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAEE;AADH;AAHsB,KAAD,CAA7B;AAQAV,IAAAA,QAAQ,CAACI,YAAT,GAAwBN,eAAe,CAACS,IAAhB,CAAqBA,IAArB,CAA0BH,YAAlD;AAEA,UAAMO,UAAU,GAAI;;;;;;;MAApB;AASAZ,IAAAA,aAAa,GAAG,MAAMR,KAAK,CAAC;AAC1BE,MAAAA,GAD0B;AAE1Ba,MAAAA,MAAM,EAAE,MAFkB;AAG1BC,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAEG;AADH;AAHoB,KAAD,CAA3B;AAQAX,IAAAA,QAAQ,CAACG,UAAT,GAAsBJ,aAAa,CAACQ,IAAd,CAAmBA,IAAnB,CAAwBK,YAAxB,CAAqCT,UAArC,CAAgDU,UAAtE;AAEAlB,IAAAA,QAAQ,CAAC;AACPmB,MAAAA,IAAI,EAAEtB,SADC;AAEPuB,MAAAA,OAAO,EAAEf;AAFF,KAAD,CAAR;AAID,GAnHD,CAmHE,OAAOgB,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,CAzHM","sourcesContent":["import axios from \"axios\";\nimport { KEY_STATS } from \"../ActionTypes\";\n\nconst url = \"/graphql\";\n\nexport const fetchKeyStats = () => async dispatch => {\n  let groupResponse, userResponse, meetingResponse, shareResponse;\n\n  try {\n    let keyStats = {\n      groupStats: \"\",\n      userStats: \"\",\n      shareStats: \"\",\n      meetingStats: \"\"\n    };\n\n    const groupQuery = `query{\n    groupStats{\n      groupTotal    \n     groupsLastMonth{\n        data{\n          count\n          day{\n            year\n            month\n            day\n          }     \n        }\n    }\n    groupsLastYear{\n        data{\n          year\n          month\n          count  \n        }\n      }\n      \n    }\n    }`;\n\n    groupResponse = await axios({\n      url,\n      method: \"post\",\n      data: {\n        query: groupQuery\n      }\n    });\n\n    keyStats.groupStats = groupResponse.data.data.groupStats;\n\n    const userQuery = `query{\n      userStats{\n        userCount   \n        userGenderStats{\n          value\n          count\n         }\n        usersLastYear{\n          data{\n            year\n            month\n            count\n          }\n        }       \n      }\n      }`;\n\n    userResponse = await axios({\n      url,\n      method: \"post\",\n      data: {\n        query: userQuery\n      }\n    });\n\n    keyStats.userStats = userResponse.data.data.userStats;\n\n    const meetingQuery = `query {\n      meetingStats{\n        meetingTotal\n        meetingsLastYear{\n          data{\n            year\n            month\n            count\n          }\n        }            \n      }\n    }`;\n\n    meetingResponse = await axios({\n      url,\n      method: \"post\",\n      data: {\n        query: meetingQuery\n      }\n    });\n\n    keyStats.meetingStats = meetingResponse.data.data.meetingStats;\n\n    const shareQuery = `query {\n      financeStats{\n        shareStats {\n          shareTotal\n        }\n\n      }\n    }`;\n\n    shareResponse = await axios({\n      url,\n      method: \"post\",\n      data: {\n        query: shareQuery\n      }\n    });\n\n    keyStats.shareStats = shareResponse.data.data.financeStats.shareStats.shareTotal;\n\n    dispatch({\n      type: KEY_STATS,\n      payload: keyStats\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}