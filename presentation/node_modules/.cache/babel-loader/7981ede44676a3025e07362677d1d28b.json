{"ast":null,"code":"import _regeneratorRuntime from \"/home/nbryn/Desktop/JamiiPay/jamiipay-web-dashboard/presentation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/nbryn/Desktop/JamiiPay/jamiipay-web-dashboard/presentation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport { setTokenInLocalStorage } from \"../../../security/Token\";\nvar url = \"http://localhost:4000/graphql\";\nexport var login = function login(username, password, history) {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var data, response, error;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                data = \"mutation signin {\\n    data:\\n     signin(input: {\\n       username: \\\"\".concat(username, \"\\\"\\n       password: \\\"\").concat(password, \"\\\"\\n     })  \\n     }\");\n                _context.prev = 1;\n                _context.next = 4;\n                return axios({\n                  url: url,\n                  method: \"post\",\n                  data: {\n                    query: data\n                  }\n                });\n\n              case 4:\n                response = _context.sent;\n                error = response.data.data.data.error;\n\n                if (!error) {\n                  _context.next = 10;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", \"Wrong Email/Username\");\n\n              case 10:\n                setTokenInLocalStorage(response);\n                history.push(\"/dashboard\");\n\n              case 12:\n                _context.next = 18;\n                break;\n\n              case 14:\n                _context.prev = 14;\n                _context.t0 = _context[\"catch\"](1);\n                console.log(_context.t0);\n                return _context.abrupt(\"return\", \"Connection problem\");\n\n              case 18:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 14]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/home/nbryn/Desktop/JamiiPay/jamiipay-web-dashboard/presentation/src/redux/actions/User/LoginAction.js"],"names":["axios","setTokenInLocalStorage","url","login","username","password","history","dispatch","data","method","query","response","error","push","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,sBAAT,QAAuC,yBAAvC;AAEA,IAAMC,GAAG,GAAG,+BAAZ;AAEA,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,QAAD,EAAWC,QAAX,EAAqBC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAiC,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAC9CC,gBAAAA,IAD8C,oFAIlCJ,QAJkC,oCAKlCC,QALkC;AAAA;AAAA;AAAA,uBAYjCL,KAAK,CAAC;AACrBE,kBAAAA,GAAG,EAAHA,GADqB;AAErBO,kBAAAA,MAAM,EAAE,MAFa;AAGrBD,kBAAAA,IAAI,EAAE;AACJE,oBAAAA,KAAK,EAAEF;AADH;AAHe,iBAAD,CAZ4B;;AAAA;AAYlDG,gBAAAA,QAZkD;AAoB5CC,gBAAAA,KApB4C,GAoBpCD,QAAQ,CAACH,IAAT,CAAcA,IAAd,CAAmBA,IAAnB,CAAwBI,KApBY;;AAAA,qBAsB9CA,KAtB8C;AAAA;AAAA;AAAA;;AAAA,iDAuBzC,sBAvByC;;AAAA;AAyBhDX,gBAAAA,sBAAsB,CAACU,QAAD,CAAtB;AAGAL,gBAAAA,OAAO,CAACO,IAAR,CAAa,YAAb;;AA5BgD;AAAA;AAAA;;AAAA;AAAA;AAAA;AAiClDC,gBAAAA,OAAO,CAACC,GAAR;AAjCkD,iDAkC3C,oBAlC2C;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAjC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAd","sourcesContent":["import axios from \"axios\";\n\nimport { setTokenInLocalStorage } from \"../../../security/Token\";\n\nconst url = \"http://localhost:4000/graphql\";\n\nexport const login = (username, password, history) => async dispatch => {\n  const data = `mutation signin {\n    data:\n     signin(input: {\n       username: \"${username}\"\n       password: \"${password}\"\n     })  \n     }`;\n\n  let response;\n\n  try {\n    response = await axios({\n      url,\n      method: \"post\",\n      data: {\n        query: data\n      }\n    });\n\n    const error = response.data.data.data.error;\n\n    if (error) {\n      return \"Wrong Email/Username\";\n    } else {\n      setTokenInLocalStorage(response);\n\n\n      history.push(\"/dashboard\");\n    }\n\n    // Need better handling of network errors here\n  } catch (err) {\n    console.log(err);\n    return \"Connection problem\";\n  }\n};\n"]},"metadata":{},"sourceType":"module"}