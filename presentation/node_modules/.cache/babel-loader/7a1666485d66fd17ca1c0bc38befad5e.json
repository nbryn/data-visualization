{"ast":null,"code":"var _jsxFileName = \"/home/nbryn/Desktop/JamiiPay/jamiipay-web-dashboard/presentation/src/components/dashboard/charts/graph/TotalGraph.js\";\nimport React, { Component } from \"react\";\nimport GraphChart from \"./GraphChart.js\";\n\nclass TotalGraph extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      list: [{\n        name: \"\",\n        value: \"\"\n      }, {\n        name: \"\",\n        value: \"\"\n      }, {\n        name: \"\",\n        value: \"\"\n      }, {\n        name: \"\",\n        value: \"\"\n      }, {\n        name: \"\",\n        value: \"\"\n      }, {\n        name: \"\",\n        value: \"\"\n      }, {\n        name: \"\",\n        value: \"\"\n      }, {\n        name: \"\",\n        value: \"\"\n      }, {\n        name: \"\",\n        value: \"\"\n      }]\n    };\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (this.props.data !== prevProps.data) {\n      const data = this.props.data;\n      const newState = data.map(element => {\n        return {\n          name: element.month,\n          value: element.count\n        };\n      });\n      console.log(newState);\n      this.setState({\n        newState\n      }); // for (let i = 1; i <= 12; i++) {\n      //   total += data[i].count;\n      //   this.setState({\n      //     [i]: [data[i] ? data[i].month : \"\", data[i] ? data[i].count : \"\"]\n      //   });\n      // }\n      // // this.setState({\n      // //   one: [\n      // //     data[0] ? data[0].month : \"\",\n      // //     data[0] ? data[0].count : \"\"\n      // //   ],\n      // //   two: [\n      // //     data[1] ? data[1].month : \"\",\n      // //     data[1] ? data[1].count : \"\"\n      // //   ],\n      // //   three: [\n      // //     data[2] ? data[2].month : \"\",\n      // //     data[2] ? data[2].count : \"\"\n      // //   ],\n      // //   four: [\n      // //     data[3] ? data[3].month : \"\",\n      // //     data[3] ? data[3].count : \"\"\n      // //   ],\n      // //  state.five: [\n      // //     data[4] ? data[4].month : \"\",\n      // //     data[4] ? data[4].count : \"\"\n      // //   ],\n      // //   six: [\n      // //     data[5] ? data[5].month : \"\",\n      // //     data[5] ? data[5].count : \"\"\n      // //   ],\n      // //   seven: [\n      // //     data[6] ? data[6].month : \"\",\n      // //     data[6] ? data[6].count : \"\"\n      // //   ],\n      // //   eight: [\n      // //     data[7] ? data[7].month : \"\",\n      // //     data[7] ? data[7].count : \"\"\n      // //   ],\n      // //   nine: [\n      // //     data[8] ? data[8].month : \"\",\n      // //     data[8] ? data[8].count : \"\"\n      // //   ],\n      // //   ten: [\n      // //     data[9] ? data[9].month : \"\",\n      // //     data[9] ? data[9].count : \"\"\n      // //   ],\n      // //   l: [\n      // //     data[10] ? data[10].month : \"\",\n      // //     data[10] ? data[10].count : \"\"\n      // //   ],\n      // //   twelve: [\n      // //     data[11] ? data[11].month : \"\",\n      // //     data[11] ? data[11].count : \"\"\n      // //   ]\n      // });\n    }\n  }\n\n  render() {\n    const title = this.props.title;\n    const stroke = this.props.stroke;\n    const state = this.state;\n    const yLabel = {\n      value: \"Users\",\n      angle: -90,\n      position: \"insideLeft\"\n    };\n    const xLabel = {\n      value: \"Months\",\n      position: \"center\",\n      dy: 10\n    };\n    let total = 0;\n    const data = this.state.list.map(element => {\n      total += element.count;\n      return {\n        name: element.name,\n        value: total\n      };\n    }); // const data = [\n    //   {\n    //     name: state.one[0],\n    //     value: state.one[1]\n    //   },\n    //   {\n    //     name: state.two[0],\n    //     value: state.one[1] + state.two[1]\n    //   },\n    //   {\n    //     name: state.three[0],\n    //     value: state.one[1] + state.two[1] + state.three[1]\n    //   },\n    //   {\n    //     name: state.four[0],\n    //     value:\n    //       state.one[1] + state.two[1] + state.three[1] + state.four[1]\n    //   },\n    //   {\n    //     name: state.five[0],\n    //     value:\n    //       state.one[1] +\n    //       state.two[1] +\n    //       state.three[1] +\n    //       state.four[1] +\n    //       state.five[1]\n    //   },\n    //   {\n    //     name: state.six[0],\n    //     value:\n    //       state.one[1] +\n    //       state.two[1] +\n    //       state.three[1] +\n    //       state.four[1] +\n    //       state.five[1] +\n    //       state.six[1]\n    //   },\n    //   {\n    //     name: state.seven[0],\n    //     value:\n    //       state.one[1] +\n    //       state.two[1] +\n    //       state.three[1] +\n    //       state.four[1] +\n    //       state.five[1] +\n    //       state.six[1] +\n    //       state.seven[1]\n    //   },\n    //   {\n    //     name: state.eight[0],\n    //     value:\n    //       state.one[1] +\n    //       state.two[1] +\n    //       state.three[1] +\n    //       state.four[1] +\n    //       state.five[1] +\n    //       state.six[1] +\n    //       state.seven[1] +\n    //       state.eight[1]\n    //   },\n    //   {\n    //     name: state.nine[0] ? state.nine[0] : \"\",\n    //     value:\n    //       state.one[1] +\n    //       state.two[1] +\n    //       state.three[1] +\n    //       state.four[1] +\n    //       state.five[1] +\n    //       state.six[1] +\n    //       state.seven[1] +\n    //       state.eight[1] +\n    //       state.nine[1]\n    //   },\n    //   {\n    //     name: state.ten[0],\n    //     value:\n    //       state.one[1] +\n    //       state.two[1] +\n    //       state.three[1] +\n    //       state.four[1] +\n    //       state.five[1] +\n    //       state.six[1] +\n    //       state.seven[1] +\n    //       state.eight[1] +\n    //       state.nine[1] +\n    //       state.ten[1]\n    //   },\n    //   {\n    //     name: state.elleven[0],\n    //     value:\n    //       state.one[1] +\n    //       state.two[1] +\n    //       state.three[1] +\n    //       state.four[1] +\n    //       state.five[1] +\n    //       state.six[1] +\n    //       state.seven[1] +\n    //       state.eight[1] +\n    //       state.nine[1] +\n    //       state.ten[1] +\n    //       state.elleven[1]\n    //   },\n    //   {\n    //     name: state.twelve[0],\n    //     value:\n    //       state.one[1] +\n    //       state.two[1] +\n    //       state.three[1] +\n    //       state.four[1] +\n    //       state.five[1] +\n    //       state.six[1] +\n    //       state.seven[1] +\n    //       state.eight[1] +\n    //       state.nine[1] +\n    //       state.ten[1] +\n    //       state.elleven[1] +\n    //       state.twelve[1]\n    //   }\n    // ];\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(GraphChart, {\n      title: title,\n      data: data,\n      xLabel: xLabel,\n      yLabel: yLabel,\n      stroke: stroke,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default TotalGraph;","map":{"version":3,"sources":["/home/nbryn/Desktop/JamiiPay/jamiipay-web-dashboard/presentation/src/components/dashboard/charts/graph/TotalGraph.js"],"names":["React","Component","GraphChart","TotalGraph","constructor","props","state","list","name","value","componentDidUpdate","prevProps","data","newState","map","element","month","count","console","log","setState","render","title","stroke","yLabel","angle","position","xLabel","dy","total"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport GraphChart from \"./GraphChart.js\";\n\nclass TotalGraph extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      list: [\n        {\n          name: \"\",\n          value: \"\"\n        },\n        {\n          name: \"\",\n          value: \"\"\n        },\n        {\n          name: \"\",\n          value: \"\"\n        },\n        {\n          name: \"\",\n          value: \"\"\n        },\n        {\n          name: \"\",\n          value: \"\"\n        },\n        {\n          name: \"\",\n          value: \"\"\n        },\n        {\n          name: \"\",\n          value: \"\"\n        },\n        {\n          name: \"\",\n          value: \"\"\n        },\n        {\n          name: \"\",\n          value: \"\"\n        }\n      ]\n    };\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (this.props.data !== prevProps.data) {\n      const data = this.props.data;\n\n      const newState = data.map(element => {\n        return {\n          name: element.month,\n          value: element.count\n        };\n      });\n\n      console.log(newState);\n\n      this.setState({ newState });\n\n      // for (let i = 1; i <= 12; i++) {\n      //   total += data[i].count;\n      //   this.setState({\n      //     [i]: [data[i] ? data[i].month : \"\", data[i] ? data[i].count : \"\"]\n      //   });\n      // }\n\n      // // this.setState({\n      // //   one: [\n      // //     data[0] ? data[0].month : \"\",\n      // //     data[0] ? data[0].count : \"\"\n      // //   ],\n      // //   two: [\n      // //     data[1] ? data[1].month : \"\",\n      // //     data[1] ? data[1].count : \"\"\n      // //   ],\n      // //   three: [\n      // //     data[2] ? data[2].month : \"\",\n      // //     data[2] ? data[2].count : \"\"\n      // //   ],\n      // //   four: [\n      // //     data[3] ? data[3].month : \"\",\n      // //     data[3] ? data[3].count : \"\"\n      // //   ],\n      // //  state.five: [\n      // //     data[4] ? data[4].month : \"\",\n      // //     data[4] ? data[4].count : \"\"\n      // //   ],\n      // //   six: [\n      // //     data[5] ? data[5].month : \"\",\n      // //     data[5] ? data[5].count : \"\"\n      // //   ],\n      // //   seven: [\n      // //     data[6] ? data[6].month : \"\",\n      // //     data[6] ? data[6].count : \"\"\n      // //   ],\n      // //   eight: [\n      // //     data[7] ? data[7].month : \"\",\n      // //     data[7] ? data[7].count : \"\"\n      // //   ],\n      // //   nine: [\n      // //     data[8] ? data[8].month : \"\",\n      // //     data[8] ? data[8].count : \"\"\n      // //   ],\n      // //   ten: [\n      // //     data[9] ? data[9].month : \"\",\n      // //     data[9] ? data[9].count : \"\"\n      // //   ],\n      // //   l: [\n      // //     data[10] ? data[10].month : \"\",\n      // //     data[10] ? data[10].count : \"\"\n      // //   ],\n      // //   twelve: [\n      // //     data[11] ? data[11].month : \"\",\n      // //     data[11] ? data[11].count : \"\"\n      // //   ]\n      // });\n    }\n  }\n  render() {\n    const title = this.props.title;\n    const stroke = this.props.stroke;\n    const state = this.state;\n    const yLabel = { value: \"Users\", angle: -90, position: \"insideLeft\" };\n    const xLabel = { value: \"Months\", position: \"center\", dy: 10 };\n\n    let total = 0;\n\n    const data = this.state.list.map(element => {\n      total += element.count;\n      return {\n        name: element.name,\n        value: total\n      };\n    });\n    // const data = [\n    //   {\n    //     name: state.one[0],\n    //     value: state.one[1]\n    //   },\n    //   {\n    //     name: state.two[0],\n    //     value: state.one[1] + state.two[1]\n    //   },\n    //   {\n    //     name: state.three[0],\n    //     value: state.one[1] + state.two[1] + state.three[1]\n    //   },\n    //   {\n    //     name: state.four[0],\n    //     value:\n    //       state.one[1] + state.two[1] + state.three[1] + state.four[1]\n    //   },\n    //   {\n    //     name: state.five[0],\n    //     value:\n    //       state.one[1] +\n    //       state.two[1] +\n    //       state.three[1] +\n    //       state.four[1] +\n    //       state.five[1]\n    //   },\n    //   {\n    //     name: state.six[0],\n    //     value:\n    //       state.one[1] +\n    //       state.two[1] +\n    //       state.three[1] +\n    //       state.four[1] +\n    //       state.five[1] +\n    //       state.six[1]\n    //   },\n    //   {\n    //     name: state.seven[0],\n    //     value:\n    //       state.one[1] +\n    //       state.two[1] +\n    //       state.three[1] +\n    //       state.four[1] +\n    //       state.five[1] +\n    //       state.six[1] +\n    //       state.seven[1]\n    //   },\n    //   {\n    //     name: state.eight[0],\n    //     value:\n    //       state.one[1] +\n    //       state.two[1] +\n    //       state.three[1] +\n    //       state.four[1] +\n    //       state.five[1] +\n    //       state.six[1] +\n    //       state.seven[1] +\n    //       state.eight[1]\n    //   },\n    //   {\n    //     name: state.nine[0] ? state.nine[0] : \"\",\n    //     value:\n    //       state.one[1] +\n    //       state.two[1] +\n    //       state.three[1] +\n    //       state.four[1] +\n    //       state.five[1] +\n    //       state.six[1] +\n    //       state.seven[1] +\n    //       state.eight[1] +\n    //       state.nine[1]\n    //   },\n    //   {\n    //     name: state.ten[0],\n    //     value:\n    //       state.one[1] +\n    //       state.two[1] +\n    //       state.three[1] +\n    //       state.four[1] +\n    //       state.five[1] +\n    //       state.six[1] +\n    //       state.seven[1] +\n    //       state.eight[1] +\n    //       state.nine[1] +\n    //       state.ten[1]\n    //   },\n    //   {\n    //     name: state.elleven[0],\n    //     value:\n    //       state.one[1] +\n    //       state.two[1] +\n    //       state.three[1] +\n    //       state.four[1] +\n    //       state.five[1] +\n    //       state.six[1] +\n    //       state.seven[1] +\n    //       state.eight[1] +\n    //       state.nine[1] +\n    //       state.ten[1] +\n    //       state.elleven[1]\n    //   },\n    //   {\n    //     name: state.twelve[0],\n    //     value:\n    //       state.one[1] +\n    //       state.two[1] +\n    //       state.three[1] +\n    //       state.four[1] +\n    //       state.five[1] +\n    //       state.six[1] +\n    //       state.seven[1] +\n    //       state.eight[1] +\n    //       state.nine[1] +\n    //       state.ten[1] +\n    //       state.elleven[1] +\n    //       state.twelve[1]\n    //   }\n    // ];\n    return (\n      <div>\n        <GraphChart\n          title={title}\n          data={data}\n          xLabel={xLabel}\n          yLabel={yLabel}\n          stroke={stroke}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TotalGraph;\n"]},"metadata":{},"sourceType":"module"}