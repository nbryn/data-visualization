{"ast":null,"code":"import { isJsonValue, maybeDeepFreeze, argumentsObjectFromField } from \"apollo-utilities\";\nimport { fromBytesBE } from \"long\";\nimport { makeRemoteExecutableSchema } from \"graphql-tools\";\nimport { applyRequestTransforms } from \"graphql-tools/dist/transforms/transforms\";\nimport { O_CREAT } from \"constants\";\nexport const getCurrentTime = () => {\n  let date = new Date();\n  let minutes = date.getMinutes();\n  let hours = date.getHours();\n  let day = date.getDate();\n  let month = getMonth(true);\n\n  if (minutes < 10) {\n    minutes = \"0\" + minutes;\n  }\n\n  if (hours < 10) {\n    hours = \"0\" + hours;\n  }\n\n  if (day < 10) {\n    day = \"0\" + day;\n  }\n\n  if (month < 10) {\n    month = \"0\" + month;\n  }\n\n  let currentTime = day + \"/\" + month + \" at \" + hours + \":\" + minutes;\n  return currentTime;\n};\nexport const getMonth = number => {\n  const months = [\"Januar\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  let date = new Date();\n  let month = date.getMonth() + 1;\n\n  if (month < 10) {\n    month = \"0\" + month;\n  }\n\n  if (number) {\n    return month;\n  } else {\n    return months[month - 1];\n  }\n};\nexport const convertNumberToMonth = monthNumber => {\n  let result;\n  const months = {\n    \"1\": \"jan\",\n    \"2\": \"feb\",\n    \"3\": \"mar\",\n    \"4\": \"apr\",\n    \"5\": \"may\",\n    \"6\": \"jun\",\n    \"7\": \"jul\",\n    \"8\": \"aug\",\n    \"9\": \"sep\",\n    \"10\": \"oct\",\n    \"11\": \"nov\",\n    \"12\": \"dec\"\n  };\n\n  for (let key in months) {\n    if (monthNumber === key) {\n      console.log(monthNumber);\n      console.log(key);\n      result = months[key];\n    }\n  }\n\n  return result;\n};","map":{"version":3,"sources":["/home/nbryn/Desktop/JamiiPay/jamiipay-web-dashboard/presentation/src/util/Date.js"],"names":["isJsonValue","maybeDeepFreeze","argumentsObjectFromField","fromBytesBE","makeRemoteExecutableSchema","applyRequestTransforms","O_CREAT","getCurrentTime","date","Date","minutes","getMinutes","hours","getHours","day","getDate","month","getMonth","currentTime","number","months","convertNumberToMonth","monthNumber","result","key","console","log"],"mappings":"AAAA,SACEA,WADF,EAEEC,eAFF,EAGEC,wBAHF,QAIO,kBAJP;AAKA,SAASC,WAAT,QAA4B,MAA5B;AACA,SAASC,0BAAT,QAA2C,eAA3C;AACA,SAASC,sBAAT,QAAuC,0CAAvC;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAClC,MAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACA,MAAIC,OAAO,GAAGF,IAAI,CAACG,UAAL,EAAd;AACA,MAAIC,KAAK,GAAGJ,IAAI,CAACK,QAAL,EAAZ;AACA,MAAIC,GAAG,GAAGN,IAAI,CAACO,OAAL,EAAV;AACA,MAAIC,KAAK,GAAGC,QAAQ,CAAC,IAAD,CAApB;;AAEA,MAAIP,OAAO,GAAG,EAAd,EAAkB;AAChBA,IAAAA,OAAO,GAAG,MAAMA,OAAhB;AACD;;AAED,MAAIE,KAAK,GAAG,EAAZ,EAAgB;AACdA,IAAAA,KAAK,GAAG,MAAMA,KAAd;AACD;;AAED,MAAIE,GAAG,GAAG,EAAV,EAAc;AACZA,IAAAA,GAAG,GAAG,MAAMA,GAAZ;AACD;;AAED,MAAIE,KAAK,GAAG,EAAZ,EAAgB;AACdA,IAAAA,KAAK,GAAG,MAAMA,KAAd;AACD;;AAED,MAAIE,WAAW,GAAGJ,GAAG,GAAG,GAAN,GAAYE,KAAZ,GAAoB,MAApB,GAA6BJ,KAA7B,GAAqC,GAArC,GAA2CF,OAA7D;AAEA,SAAOQ,WAAP;AACD,CA1BM;AA4BP,OAAO,MAAMD,QAAQ,GAAGE,MAAM,IAAI;AAChC,QAAMC,MAAM,GAAG,CACb,QADa,EAEb,UAFa,EAGb,OAHa,EAIb,OAJa,EAKb,KALa,EAMb,MANa,EAOb,MAPa,EAQb,QARa,EASb,WATa,EAUb,SAVa,EAWb,UAXa,EAYb,UAZa,CAAf;AAcA,MAAIZ,IAAI,GAAG,IAAIC,IAAJ,EAAX;AAEA,MAAIO,KAAK,GAAGR,IAAI,CAACS,QAAL,KAAkB,CAA9B;;AAEA,MAAID,KAAK,GAAG,EAAZ,EAAgB;AACdA,IAAAA,KAAK,GAAG,MAAMA,KAAd;AACD;;AAED,MAAIG,MAAJ,EAAY;AACV,WAAOH,KAAP;AACD,GAFD,MAEO;AACL,WAAOI,MAAM,CAACJ,KAAK,GAAG,CAAT,CAAb;AACD;AACF,CA5BM;AA8BP,OAAO,MAAMK,oBAAoB,GAAGC,WAAW,IAAI;AACjD,MAAIC,MAAJ;AAEA,QAAMH,MAAM,GAAG;AACb,SAAK,KADQ;AAEb,SAAK,KAFQ;AAGb,SAAK,KAHQ;AAIb,SAAK,KAJQ;AAKb,SAAK,KALQ;AAMb,SAAK,KANQ;AAOb,SAAK,KAPQ;AAQb,SAAK,KARQ;AASb,SAAK,KATQ;AAUb,UAAM,KAVO;AAWb,UAAM,KAXO;AAYb,UAAM;AAZO,GAAf;;AAeA,OAAK,IAAII,GAAT,IAAgBJ,MAAhB,EAAwB;AACtB,QAAIE,WAAW,KAAKE,GAApB,EAAyB;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAD,MAAAA,MAAM,GAAGH,MAAM,CAACI,GAAD,CAAf;AACD;AACF;;AAED,SAAOD,MAAP;AACD,CA3BM","sourcesContent":["import {\n  isJsonValue,\n  maybeDeepFreeze,\n  argumentsObjectFromField\n} from \"apollo-utilities\";\nimport { fromBytesBE } from \"long\";\nimport { makeRemoteExecutableSchema } from \"graphql-tools\";\nimport { applyRequestTransforms } from \"graphql-tools/dist/transforms/transforms\";\nimport { O_CREAT } from \"constants\";\n\nexport const getCurrentTime = () => {\n  let date = new Date();\n  let minutes = date.getMinutes();\n  let hours = date.getHours();\n  let day = date.getDate();\n  let month = getMonth(true);\n\n  if (minutes < 10) {\n    minutes = \"0\" + minutes;\n  }\n\n  if (hours < 10) {\n    hours = \"0\" + hours;\n  }\n\n  if (day < 10) {\n    day = \"0\" + day;\n  }\n\n  if (month < 10) {\n    month = \"0\" + month;\n  }\n\n  let currentTime = day + \"/\" + month + \" at \" + hours + \":\" + minutes;\n\n  return currentTime;\n};\n\nexport const getMonth = number => {\n  const months = [\n    \"Januar\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\"\n  ];\n  let date = new Date();\n\n  let month = date.getMonth() + 1;\n\n  if (month < 10) {\n    month = \"0\" + month;\n  }\n\n  if (number) {\n    return month;\n  } else {\n    return months[month - 1];\n  }\n};\n\nexport const convertNumberToMonth = monthNumber => {\n  let result;\n\n  const months = {\n    \"1\": \"jan\",\n    \"2\": \"feb\",\n    \"3\": \"mar\",\n    \"4\": \"apr\",\n    \"5\": \"may\",\n    \"6\": \"jun\",\n    \"7\": \"jul\",\n    \"8\": \"aug\",\n    \"9\": \"sep\",\n    \"10\": \"oct\",\n    \"11\": \"nov\",\n    \"12\": \"dec\"\n  };\n\n  for (let key in months) {\n    if (monthNumber === key) {\n      console.log(monthNumber);\n      console.log(key);\n      result = months[key];\n    }\n  }\n\n  return result;\n};\n"]},"metadata":{},"sourceType":"module"}