{"ast":null,"code":"var _jsxFileName = \"/home/nbryn/Desktop/JamiiPay/jamiipay-web-dashboard/presentation/src/components/dashboard/views/FinanceView.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport { KPICard } from \"../util/KPICard\";\nimport TotalGraph from \"../charts/graph/TotalGraph\";\nimport LastYearBar from \"../charts/bar/LastYearBar\";\nimport TopBar from \"../charts/bar/TopBar\";\nimport { fetchFinanceStats } from \"../../../redux/actions/KPI/FinanceStatsAction\";\nimport { getCurrentTime } from \"../../../util/Date\";\n\nclass FinanceView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shareTotal: \"\",\n      mostShares: \"\",\n      shareStats: \"\",\n      currencyTotal: \"\",\n      currencyStats: \"\",\n      loanTotal: \"\",\n      loansLastMonth: \"\",\n      loansLastYear: \"\",\n      lastUpdate: \"\"\n    };\n    this.fetchData = this.fetchData.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchData();\n    setInterval(async () => {\n      this.fetchData();\n    }, 10000000);\n  }\n\n  async fetchData() {\n    await this.props.fetchFinanceStats();\n    const financeStats = this.props.financeStats;\n    let lastUpdatedAt = getCurrentTime();\n    this.setState({\n      shareTotal: financeStats.shareTotal,\n      mostShares: financeStats.mostShares.count,\n      shareStats: financeStats.shareStats,\n      currencyTotal: financeStats.currencyTotal,\n      currencyStats: financeStats.currencyStats,\n      loanTotal: financeStats.loanTotal,\n      loansLastMonth: financeStats.loansLastMonth.data,\n      loansLastYear: financeStats.loansLastYear.data,\n      lastUpdate: lastUpdatedAt\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: \"pe-7s-graph1 text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }),\n      statsText: \"Total Shares\",\n      statsValue: this.state.shareTotal,\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-refresh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }),\n      statsIconText: \"Last Update: \".concat(this.state.lastUpdate),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: \"pe-7s-users text-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }),\n      statsText: \"Total Loans\",\n      statsValue: this.state.loanTotal,\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-refresh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }),\n      statsIconText: \"Last Update: \".concat(this.state.lastUpdate),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: \"pe-7s-users text-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }),\n      statsText: \"Most Shares In Group\",\n      statsValue: this.state.mostShares,\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-refresh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }),\n      statsIconText: \"Last Update: \".concat(this.state.lastUpdate),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: \"pe-7s-users text-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }),\n      statsText: \"Total Currencies\",\n      statsValue: this.state.currencyTotal,\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-clock-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }),\n      statsIconText: \"Last Update: \".concat(this.state.lastUpdate),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(TotalGraph, {\n      title: \"Total Loans\",\n      xLabel: \"Months\",\n      yLabel: \"Loans\",\n      stroke: \"#228b22\",\n      data: this.state.loansLastYear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(TopBar, {\n      title: \"Most Shares\",\n      color: \"#1828E8\",\n      xLabel: \"Group Name\",\n      yLabel: \"Shares\",\n      data: this.state.shareStats,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(LastYearBar, {\n      title: \"Loans Last Year\",\n      color: \"#ff0000\",\n      xLabel: \"Months\",\n      yLabel: \"Loans\",\n      data: this.state.loansLastYear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(TopBar, {\n      title: \"Currencies\",\n      color: \"#2196f3\",\n      xLabel: \"Currency\",\n      yLabel: \"Amount\",\n      data: this.state.currencyStats,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    financeStats: state.KPI.financeStats\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchFinanceStats\n})(FinanceView);","map":{"version":3,"sources":["/home/nbryn/Desktop/JamiiPay/jamiipay-web-dashboard/presentation/src/components/dashboard/views/FinanceView.js"],"names":["React","Component","connect","Grid","Row","Col","KPICard","TotalGraph","LastYearBar","TopBar","fetchFinanceStats","getCurrentTime","FinanceView","constructor","props","state","shareTotal","mostShares","shareStats","currencyTotal","currencyStats","loanTotal","loansLastMonth","loansLastYear","lastUpdate","fetchData","bind","componentDidMount","setInterval","financeStats","lastUpdatedAt","setState","count","data","render","mapStateToProps","KPI"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport { KPICard } from \"../util/KPICard\";\n\nimport TotalGraph from \"../charts/graph/TotalGraph\";\nimport LastYearBar from \"../charts/bar/LastYearBar\";\nimport  TopBar from \"../charts/bar/TopBar\";\n\nimport { fetchFinanceStats } from \"../../../redux/actions/KPI/FinanceStatsAction\";\nimport { getCurrentTime } from \"../../../util/Date\";\n\nclass FinanceView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      shareTotal: \"\",\n      mostShares: \"\",\n      shareStats: \"\",\n      currencyTotal: \"\",\n      currencyStats: \"\",\n      loanTotal: \"\",\n      loansLastMonth: \"\",\n      loansLastYear: \"\",\n      lastUpdate: \"\"\n    };\n    this.fetchData = this.fetchData.bind(this);\n  }\n  componentDidMount() {\n    this.fetchData();\n\n    setInterval(async () => {\n      this.fetchData();\n    }, 10000000);\n  }\n\n  async fetchData() {\n    await this.props.fetchFinanceStats();\n\n    const financeStats = this.props.financeStats;\n    let lastUpdatedAt = getCurrentTime();\n\n    \n    this.setState({\n      shareTotal: financeStats.shareTotal,\n      mostShares: financeStats.mostShares.count,\n      shareStats: financeStats.shareStats,\n      currencyTotal: financeStats.currencyTotal,\n      currencyStats: financeStats.currencyStats,\n      loanTotal: financeStats.loanTotal,\n      loansLastMonth: financeStats.loansLastMonth.data,\n      loansLastYear: financeStats.loansLastYear.data,\n      lastUpdate: lastUpdatedAt\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"content\">\n        <Grid fluid>\n          <Row>\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-graph1 text-danger\" />}\n                statsText=\"Total Shares\"\n                statsValue={this.state.shareTotal}\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText={`Last Update: ${this.state.lastUpdate}`}\n              />\n            </Col>\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-users text-info\" />}\n                statsText=\"Total Loans\"\n                statsValue={this.state.loanTotal}\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText={`Last Update: ${this.state.lastUpdate}`}\n              />\n            </Col>\n            \n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-users text-info\" />}\n                statsText=\"Most Shares In Group\"\n                statsValue={this.state.mostShares}\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText={`Last Update: ${this.state.lastUpdate}`}\n              />\n            </Col>\n            \n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-users text-info\" />}\n                statsText=\"Total Currencies\"\n                statsValue={this.state.currencyTotal}\n                statsIcon={<i className=\"fa fa-clock-o\" />}\n                statsIconText={`Last Update: ${this.state.lastUpdate}`}\n              />\n            </Col>\n          </Row>\n          <Row>\n          <Col lg={4} sm={6}>\n          <TotalGraph\n              title=\"Total Loans\"\n              xLabel=\"Months\"\n              yLabel=\"Loans\"\n              stroke=\"#228b22\"\n              data={this.state.loansLastYear}\n            />\n            </Col>\n            <Col lg={3} sm={6}>\n          <TopBar\n            title=\"Most Shares\"\n            color=\"#1828E8\"\n            xLabel=\"Group Name\"\n            yLabel=\"Shares\"\n            data={this.state.shareStats}\n          />\n          </Col>\n            </Row>\n          <Row>\n          \n          <Col lg={4} sm={6}>\n           <LastYearBar\n            title=\"Loans Last Year\"\n            color=\"#ff0000\"\n            xLabel=\"Months\"\n            yLabel=\"Loans\"\n            data={this.state.loansLastYear}\n          />\n          </Col>\n          <Col lg={4} sm={6}>\n           <TopBar\n            title=\"Currencies\"\n            color=\"#2196f3\"\n            xLabel=\"Currency\"\n            yLabel=\"Amount\"\n            data={this.state.currencyStats}\n          />\n          </Col>\n          \n          </Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    financeStats: state.KPI.financeStats\n  };\n};\n\nexport default connect(mapStateToProps, { fetchFinanceStats })(FinanceView);\n"]},"metadata":{},"sourceType":"module"}