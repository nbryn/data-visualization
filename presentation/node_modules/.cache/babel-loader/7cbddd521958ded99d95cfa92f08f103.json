{"ast":null,"code":"var _jsxFileName = \"/home/nbryn/Desktop/JamiiPay/jamiipay-web-dashboard/presentation/src/components/dashboard/KPIView.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport { KPICard } from \"./KPICard.js\";\nimport TotalGroupsGraph from \"./charts/graph/TotalGroupsGraph\";\nimport MoneyTotalGraph from \"./charts/graph/MoneyTotalGraph\";\nimport UsersTotalGraph from \"./charts/graph/UsersTotalGraph\";\nimport SoMeCircleChart from \"./charts/circle/SoMeCircleChart\";\nimport GroupSizeChart from \"./charts/circle/GroupSizeChart\";\nimport UsersLastMonthBarChart from \"./charts/bar/UsersLastMonthBarChart\";\nimport { getUserStats } from \"../../redux/actions/KPI/UserStatsAction\";\nimport { getCurrentTime } from \"../../util/Date\";\n\nclass KPIView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      usersTotal: \"\",\n      usersTotalLastUpdate: \"\",\n      usersToday: \"\",\n      $Total: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    // Error handling when not authenticated?\n    const temp = await this.props.getUserStats();\n    let lastUpdatedAt = getCurrentTime();\n    this.setState({\n      usersTotal: this.props.userStats.numberOfUsers,\n      usersTotalLastUpdate: lastUpdatedAt\n    }); // Reload KPI data\n\n    setInterval(async () => {\n      // Error handling when not authenticated?\n      const m = await this.props.getUserStats();\n      let lastUpdatedAt = getCurrentTime();\n      this.setState({\n        usersTotal: this.props.userStats.numberOfUsers,\n        usersTotalUpdate: lastUpdatedAt\n      });\n    }, 100000);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: \"pe-7s-user text-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }),\n      statsText: \"Total Users\",\n      statsValue: this.state.usersTotal,\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-refresh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }),\n      statsIconText: \"Last Update: \".concat(this.state.usersTotalLastUpdate),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: \"pe-7s-wallet text-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }),\n      statsText: \"Amount Registered\",\n      statsValue: \"$5,345\",\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-calendar-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }),\n      statsIconText: \"Last day\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: \"pe-7s-graph1 text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }),\n      statsText: \"New Users Today\",\n      statsValue: \"23\",\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-clock-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }),\n      statsIconText: \"In the last hour\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: \"fa fa-twitter text-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }),\n      statsText: \"Social Media Followers\",\n      statsValue: \"+45\",\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-refresh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }),\n      statsIconText: \"Updated now\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(UsersTotalGraph, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(TotalGroupsGraph, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(MoneyTotalGraph, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(SoMeCircleChart, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(UsersLastMonthBarChart, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(GroupSizeChart, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userStats: state.KPI.userStats\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getUsersTotal\n})(KPIView);","map":{"version":3,"sources":["/home/nbryn/Desktop/JamiiPay/jamiipay-web-dashboard/presentation/src/components/dashboard/KPIView.js"],"names":["React","Component","connect","Grid","Row","Col","KPICard","TotalGroupsGraph","MoneyTotalGraph","UsersTotalGraph","SoMeCircleChart","GroupSizeChart","UsersLastMonthBarChart","getUserStats","getCurrentTime","KPIView","constructor","props","state","usersTotal","usersTotalLastUpdate","usersToday","$Total","componentDidMount","temp","lastUpdatedAt","setState","userStats","numberOfUsers","setInterval","m","usersTotalUpdate","render","mapStateToProps","KPI","getUsersTotal"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\n\nimport { KPICard } from \"./KPICard.js\";\n\nimport TotalGroupsGraph from \"./charts/graph/TotalGroupsGraph\";\nimport MoneyTotalGraph from \"./charts/graph/MoneyTotalGraph\";\nimport UsersTotalGraph from \"./charts/graph/UsersTotalGraph\";\n\nimport SoMeCircleChart from \"./charts/circle/SoMeCircleChart\";\nimport GroupSizeChart from \"./charts/circle/GroupSizeChart\";\n\nimport UsersLastMonthBarChart from \"./charts/bar/UsersLastMonthBarChart\";\n\nimport { getUserStats } from \"../../redux/actions/KPI/UserStatsAction\";\nimport { getCurrentTime } from \"../../util/Date\";\n\nclass KPIView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      usersTotal: \"\",\n      usersTotalLastUpdate: \"\",\n      usersToday: \"\",\n      $Total: \"\"\n    };\n  }\n  async componentDidMount() {\n    // Error handling when not authenticated?\n    const temp = await this.props.getUserStats();\n\n    let lastUpdatedAt = getCurrentTime();\n\n    this.setState({\n      usersTotal: this.props.userStats.numberOfUsers,\n      usersTotalLastUpdate: lastUpdatedAt\n    });\n\n    // Reload KPI data\n    setInterval(async () => {\n      // Error handling when not authenticated?\n      const m = await this.props.getUserStats();\n\n      let lastUpdatedAt = getCurrentTime();\n\n      this.setState({\n        usersTotal: this.props.userStats.numberOfUsers,\n        usersTotalUpdate: lastUpdatedAt\n      });\n    }, 100000);\n  }\n\n  render() {\n    return (\n      <div className=\"content\">\n        <Grid fluid>\n          <Row>\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-user text-warning\" />}\n                statsText=\"Total Users\"\n                statsValue={this.state.usersTotal}\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText={`Last Update: ${this.state.usersTotalLastUpdate}`}\n              />\n            </Col>\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-wallet text-success\" />}\n                statsText=\"Amount Registered\"\n                statsValue=\"$5,345\"\n                statsIcon={<i className=\"fa fa-calendar-o\" />}\n                statsIconText=\"Last day\"\n              />\n            </Col>\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-graph1 text-danger\" />}\n                statsText=\"New Users Today\"\n                statsValue=\"23\"\n                statsIcon={<i className=\"fa fa-clock-o\" />}\n                statsIconText=\"In the last hour\"\n              />\n            </Col>\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"fa fa-twitter text-info\" />}\n                statsText=\"Social Media Followers\"\n                statsValue=\"+45\"\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText=\"Updated now\"\n              />\n            </Col>\n          </Row>\n\n          <Row>\n            <Col lg={4} sm={6}>\n              <UsersTotalGraph />\n            </Col>\n            <Col lg={4} sm={6}>\n              <TotalGroupsGraph  />\n            </Col>\n            <Col lg={4} sm={6}>\n              <MoneyTotalGraph />\n            </Col>\n          </Row>\n          <Row>\n            <Col lg={4} sm={6}>\n              <SoMeCircleChart />\n            </Col>\n            <Col lg={4} sm={6}>\n              <UsersLastMonthBarChart  />\n            </Col>\n            \n            <Col lg={4} sm={6}>\n              <GroupSizeChart />\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userStats: state.KPI.userStats\n  };\n};\n\nexport default connect(mapStateToProps, { getUsersTotal })(KPIView);\n"]},"metadata":{},"sourceType":"module"}