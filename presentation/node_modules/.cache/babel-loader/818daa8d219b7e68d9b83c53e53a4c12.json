{"ast":null,"code":"var _jsxFileName = \"/home/nbryn/Desktop/JamiiPay/jamiipay-web-dashboard/presentation/src/components/dashboard/views/GroupView.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport { KPICard } from \"../util/KPICard\";\nimport GroupTotalGraph from \"../charts/graph/GroupTotalGraph\";\nimport GroupSizeChart from \"../charts/circle/GroupSizeChart\";\nimport LastMonthBar from \"../charts/bar/LastMonthBar\";\nimport LastYearBar from \"../charts/bar/LastYearBar\";\nimport { fetchGroupStats } from \"../../../redux/actions/KPI/GroupStatsAction\";\nimport { getCurrentTime } from \"../../../util/Date\";\n\nclass KPIView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      groupTotal: \"\",\n      groupTotalLastUpdate: \"\",\n      groupsToday: \"\",\n      groupTodayLastUpdate: \"\",\n      groupsLastMonth: \"\",\n      groupsLastYear: \"\"\n    };\n    this.fetchData = this.fetchData.bind(this);\n  }\n\n  componentDidMount() {\n    // Error handling when not authenticated?\n    this.fetchData(); // Reload KPI data\n\n    setInterval(async () => {\n      // Error handling when not authenticated?\n      this.fetchData();\n    }, 10000000);\n  }\n\n  async fetchData() {\n    await this.props.fetchGroupStats();\n    const groupStats = this.props.groupStats;\n    let lastUpdatedAt = getCurrentTime();\n    this.setState({\n      groupTotal: groupStats.groupTotal,\n      groupTotalLastUpdate: lastUpdatedAt,\n      groupsToday: groupStats.groupsLastMonth.data[groupStats.groupsLastMonth.data - 1].count,\n      groupTodayLastUpdate: lastUpdatedAt,\n      groupsLastMonth: groupStats.groupsLastMonth.data,\n      groupsLastYear: groupStats.groupsLastYear.data\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: \"pe-7s-graph1 text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }),\n      statsText: \"Total Groups\",\n      statsValue: this.state.groupTotal,\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-refresh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }),\n      statsIconText: \"Last Update: \".concat(this.state.groupTotalLastUpdate),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: \"pe-7s-users text-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }),\n      statsText: \"Groups Today\",\n      statsValue: this.state.groupsToday,\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-clock-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }),\n      statsIconText: \"Last Update: \".concat(this.state.groupTodayLastUpdate),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: \"pe-7s-users text-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }),\n      statsText: \"This Month\",\n      statsValue: this.state.groupTotal,\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-refresh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }),\n      statsIconText: \"Last Update: \".concat(this.state.groupTotalLastUpdate),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: \"pe-7s-users text-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }),\n      statsText: \"This Year\",\n      statsValue: this.state.groupTotal,\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-refresh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }),\n      statsIconText: \"Last Update: \".concat(this.state.groupTotalLastUpdate),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(GroupTotalGraph, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(LastMonthBar, {\n      signups: this.state.groupsLastMonth,\n      title: \"Groups Last Month\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(GroupSizeChart, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(LastYearBar, {\n      signups: this.state.groupsLastYear,\n      title: \"Groups Last Year\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    groupStats: state.KPI.groupStats\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchGroupStats\n})(KPIView);","map":{"version":3,"sources":["/home/nbryn/Desktop/JamiiPay/jamiipay-web-dashboard/presentation/src/components/dashboard/views/GroupView.js"],"names":["React","Component","connect","Grid","Row","Col","KPICard","GroupTotalGraph","GroupSizeChart","LastMonthBar","LastYearBar","fetchGroupStats","getCurrentTime","KPIView","constructor","props","state","groupTotal","groupTotalLastUpdate","groupsToday","groupTodayLastUpdate","groupsLastMonth","groupsLastYear","fetchData","bind","componentDidMount","setInterval","groupStats","lastUpdatedAt","setState","data","count","render","mapStateToProps","KPI"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport { KPICard } from \"../util/KPICard\";\n\nimport GroupTotalGraph from \"../charts/graph/GroupTotalGraph\";\nimport GroupSizeChart from \"../charts/circle/GroupSizeChart\";\n\nimport LastMonthBar from \"../charts/bar/LastMonthBar\";\nimport LastYearBar from \"../charts/bar/LastYearBar\";\n\nimport { fetchGroupStats } from \"../../../redux/actions/KPI/GroupStatsAction\";\nimport { getCurrentTime } from \"../../../util/Date\";\n\nclass KPIView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      groupTotal: \"\",\n      groupTotalLastUpdate: \"\",\n      groupsToday: \"\",\n      groupTodayLastUpdate: \"\",\n      groupsLastMonth: \"\",\n      groupsLastYear: \"\"\n    };\n    this.fetchData = this.fetchData.bind(this);\n  }\n  componentDidMount() {\n    // Error handling when not authenticated?\n    this.fetchData();\n\n    // Reload KPI data\n    setInterval(async () => {\n      // Error handling when not authenticated?\n      this.fetchData();\n    }, 10000000);\n  }\n\n  async fetchData() {\n    await this.props.fetchGroupStats();\n\n    const groupStats= this.props.groupStats;\n    let lastUpdatedAt = getCurrentTime();\n\n    this.setState({\n      groupTotal: groupStats.groupTotal,\n      groupTotalLastUpdate: lastUpdatedAt,\n      groupsToday: groupStats.groupsLastMonth.data[groupStats.groupsLastMonth.data - 1].count,\n      groupTodayLastUpdate: lastUpdatedAt,\n      groupsLastMonth: groupStats.groupsLastMonth.data,\n      groupsLastYear: groupStats.groupsLastYear.data\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"content\">\n        <Grid fluid>\n          <Row>\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-graph1 text-danger\" />}\n                statsText=\"Total Groups\"\n                statsValue={this.state.groupTotal}\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText={`Last Update: ${this.state.groupTotalLastUpdate}`}\n              />\n            </Col>\n\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-users text-info\" />}\n                statsText=\"Groups Today\"\n                statsValue={this.state.groupsToday}\n                statsIcon={<i className=\"fa fa-clock-o\" />}\n                statsIconText={`Last Update: ${this.state.groupTodayLastUpdate}`}\n              />\n            </Col>\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-users text-info\" />}\n                statsText=\"This Month\"\n                statsValue={this.state.groupTotal}\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText={`Last Update: ${this.state.groupTotalLastUpdate}`}\n              />\n            </Col>\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-users text-info\" />}\n                statsText=\"This Year\"\n                statsValue={this.state.groupTotal}\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText={`Last Update: ${this.state.groupTotalLastUpdate}`}\n              />\n            </Col>\n          </Row>\n\n          <Row>\n            <Col lg={4} sm={6}></Col>\n            <GroupTotalGraph />\n            <Col lg={4} sm={6}></Col>\n          </Row>\n          <Row>\n            <Col lg={4} sm={6}>\n              <LastMonthBar\n                signups={this.state.groupsLastMonth}\n                title=\"Groups Last Month\"\n              />\n            </Col>\n            <Col lg={4} sm={6}>\n              <GroupSizeChart />\n            </Col>\n            <Col lg={4} sm={6}>\n              <LastYearBar\n                signups={this.state.groupsLastYear}\n                title=\"Groups Last Year\"\n              />\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    groupStats: state.KPI.groupStats\n  };\n};\n\nexport default connect(mapStateToProps, { fetchGroupStats })(KPIView);\n"]},"metadata":{},"sourceType":"module"}