{"ast":null,"code":"var _jsxFileName = \"/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/src/components/dashboard/views/FinanceView.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport { KPICard } from \"../util/KPICard\";\nimport Sidebar from \"../../navigation/Sidebar\";\nimport Header from \"../../navigation/Header\";\nimport TotalGraph from \"../charts/graph/TotalGraph\";\nimport LastYearBar from \"../charts/bar/LastYearBar\";\nimport LastMonthBar from \"../charts/bar/LastMonthBar\";\nimport TopBar from \"../charts/bar/TopBar\";\nimport { fetchFinanceStats } from \"../../../redux/actions/kpi/FinanceStatsAction\";\nimport { getCurrentTime } from \"../../../util/Date\";\n\nclass FinanceView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      shareTotal: \"\",\n      mostShares: \"\",\n      sharesPerGroup: \"\",\n      currencyTotal: \"\",\n      currencyStats: \"\",\n      loanTotal: \"\",\n      loansLastMonth: \"\",\n      loansLastYear: \"\",\n      etbOnLoan: \"\",\n      onLoanPerGroup: \"\",\n      lastUpdate: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n    setInterval(async () => {\n      this.fetchData();\n    }, 10000000);\n  }\n\n  async fetchData() {\n    await this.props.fetchFinanceStats();\n    const financeStats = this.props.financeStats;\n    let lastUpdatedAt = getCurrentTime(); // Move to backend?\n\n    const loanPerGroup = financeStats.etbStats.groupLoan.map(element => {\n      return {\n        name: element.name.substring(0, 5),\n        count: element.count\n      };\n    });\n    loanPerGroup.sort((ele1, ele2) => {\n      return ele2.count - ele1.count;\n    });\n    this.setState({\n      shareTotal: financeStats.shareStats.shareTotal,\n      mostShares: financeStats.shareStats.mostShares.count,\n      sharesPerGroup: financeStats.shareStats.groupShares,\n      currencyTotal: financeStats.currencyStats.numberOfCurrencies,\n      currencyStats: financeStats.currencyStats.currency,\n      loanTotal: financeStats.loanTotal,\n      loansLastMonth: financeStats.loansLastMonth.data,\n      loansLastYear: financeStats.loansLastYear.data,\n      etbOnLoan: financeStats.etbStats.etbOnLoan,\n      onLoanPerGroup: loanPerGroup.splice(0, 10),\n      lastUpdate: lastUpdatedAt\n    });\n  }\n\n  render() {\n    const KPICards = {\n      shareTotall: {\n        text: \"Total Shares\",\n        icon: \"pe-7s-graph1 text-danger\"\n      },\n      loanTotal: {\n        text: \"Total Loans\",\n        icon: \"pe-7s-users text-info\"\n      },\n      etbOnLoan: {\n        text: \"ETB On Loan\",\n        icon: \"pe-7s-wallet text-success\"\n      },\n      mostShares: {\n        text: \"Most Shares In Group\",\n        icon: \"pe-7s-wallet text-success\"\n      }\n    };\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"main-panel\",\n      className: \"main-panel\",\n      ref: \"mainPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Header, {\n      title: \"Finance\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, Object.keys(KPICards).map((kpi, index) => React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: KPICards[kpi].icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }),\n      statsText: KPICards[kpi].text,\n      statsValue: this.state[kpi],\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-refresh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }),\n      statsIconText: `Last Update: ${this.state.lastUpdate}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(TotalGraph, {\n      title: \"Total Loans\",\n      xLabel: \"Months\",\n      yLabel: \"Loans\",\n      stroke: \"#228b22\",\n      data: this.state.loansLastYear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, React.createElement(TopBar, {\n      title: \"Most Shares\",\n      color: \"#1828E8\",\n      xLabel: \"Group Name\",\n      yLabel: \"Shares\",\n      data: this.state.sharesPerGroup,\n      css: \"card-graph card-stats\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(TopBar, {\n      title: \"ETB On Loan\",\n      color: \"#2196f3\",\n      xLabel: \"Group Name\",\n      yLabel: \"Amount\",\n      data: this.state.onLoanPerGroup,\n      css: \"card-graph card-stats\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(LastYearBar, {\n      title: \"Loans Per Month\",\n      color: \"#8918E8\",\n      xLabel: \"Month\",\n      yLabel: \"Loans\",\n      data: this.state.loansLastYear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, React.createElement(LastMonthBar, {\n      title: \"Loans Per Day\",\n      color: \"#ff0000\",\n      xLabel: \"Day\",\n      yLabel: \"Loans\",\n      data: this.state.loansLastMonth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, React.createElement(TopBar, {\n      title: \"Currencies\",\n      color: \"#2196f3\",\n      xLabel: \"Currency\",\n      yLabel: \"Amount\",\n      data: this.state.currencyStats,\n      css: \"card-circle card-stats\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    financeStats: state.KPI.financeStats\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchFinanceStats\n})(FinanceView);","map":{"version":3,"sources":["/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/src/components/dashboard/views/FinanceView.js"],"names":["React","Component","connect","Grid","Row","Col","KPICard","Sidebar","Header","TotalGraph","LastYearBar","LastMonthBar","TopBar","fetchFinanceStats","getCurrentTime","FinanceView","constructor","props","state","shareTotal","mostShares","sharesPerGroup","currencyTotal","currencyStats","loanTotal","loansLastMonth","loansLastYear","etbOnLoan","onLoanPerGroup","lastUpdate","componentDidMount","fetchData","setInterval","financeStats","lastUpdatedAt","loanPerGroup","etbStats","groupLoan","map","element","name","substring","count","sort","ele1","ele2","setState","shareStats","groupShares","numberOfCurrencies","currency","data","splice","render","KPICards","shareTotall","text","icon","Object","keys","kpi","index","mapStateToProps","KPI"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport { KPICard } from \"../util/KPICard\";\n\nimport Sidebar from \"../../navigation/Sidebar\";\nimport Header from \"../../navigation/Header\";\n\nimport TotalGraph from \"../charts/graph/TotalGraph\";\nimport LastYearBar from \"../charts/bar/LastYearBar\";\nimport LastMonthBar from \"../charts/bar/LastMonthBar\";\nimport TopBar from \"../charts/bar/TopBar\";\n\nimport { fetchFinanceStats } from \"../../../redux/actions/kpi/FinanceStatsAction\";\nimport { getCurrentTime } from \"../../../util/Date\";\n\nclass FinanceView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      shareTotal: \"\",\n      mostShares: \"\",\n      sharesPerGroup: \"\",\n      currencyTotal: \"\",\n      currencyStats: \"\",\n      loanTotal: \"\",\n      loansLastMonth: \"\",\n      loansLastYear: \"\",\n      etbOnLoan: \"\",\n      onLoanPerGroup: \"\",\n      lastUpdate: \"\"\n    };\n  }\n  componentDidMount() {\n    this.fetchData();\n\n    setInterval(async () => {\n      this.fetchData();\n    }, 10000000);\n  }\n\n  async fetchData() {\n    await this.props.fetchFinanceStats();\n\n    const financeStats = this.props.financeStats;\n    let lastUpdatedAt = getCurrentTime();\n\n    // Move to backend?\n    const loanPerGroup = financeStats.etbStats.groupLoan.map(element => {\n      return {\n        name: element.name.substring(0, 5),\n        count: element.count\n      };\n    });\n\n    loanPerGroup.sort((ele1, ele2) => {\n      return ele2.count - ele1.count;\n    });\n\n    this.setState({\n      shareTotal: financeStats.shareStats.shareTotal,\n      mostShares: financeStats.shareStats.mostShares.count,\n      sharesPerGroup: financeStats.shareStats.groupShares,\n      currencyTotal: financeStats.currencyStats.numberOfCurrencies,\n      currencyStats: financeStats.currencyStats.currency,\n      loanTotal: financeStats.loanTotal,\n      loansLastMonth: financeStats.loansLastMonth.data,\n      loansLastYear: financeStats.loansLastYear.data,\n      etbOnLoan: financeStats.etbStats.etbOnLoan,\n      onLoanPerGroup: loanPerGroup.splice(0, 10),\n      lastUpdate: lastUpdatedAt\n    });\n  }\n\n  render() {\n    const KPICards = {\n      shareTotall: { text: \"Total Shares\", icon: \"pe-7s-graph1 text-danger\" },\n      loanTotal: { text: \"Total Loans\", icon: \"pe-7s-users text-info\" },\n      etbOnLoan: {\n        text: \"ETB On Loan\",\n        icon: \"pe-7s-wallet text-success\"\n      },\n      mostShares: {\n        text: \"Most Shares In Group\",\n        icon: \"pe-7s-wallet text-success\"\n      }\n    };\n\n    return (\n      <div className=\"wrapper\">\n        <Sidebar />\n\n        <div id=\"main-panel\" className=\"main-panel\" ref=\"mainPanel\">\n          <Header title=\"Finance\" />\n          <div className=\"content\">\n            <Grid fluid>\n              <Row>\n                {Object.keys(KPICards).map((kpi, index) => (\n                  <Col lg={3} sm={6}>\n                    <KPICard\n                      bigIcon={<i className={KPICards[kpi].icon} />}\n                      statsText={KPICards[kpi].text}\n                      statsValue={this.state[kpi]}\n                      statsIcon={<i className=\"fa fa-refresh\" />}\n                      statsIconText={`Last Update: ${this.state.lastUpdate}`}\n                    />\n                  </Col>\n                ))}\n                {/* <Col lg={3} sm={6}>\n                  <KPICard\n                    bigIcon={<i className=\"pe-7s-graph1 text-danger\" />}\n                    statsText=\"Total Shares\"\n                    statsValue={this.state.shareTotal}\n                    statsIcon={<i className=\"fa fa-refresh\" />}\n                    statsIconText={`Last Update: ${this.state.lastUpdate}`}\n                  />\n                </Col>\n                <Col lg={3} sm={6}>\n                  <KPICard\n                    bigIcon={<i className=\"pe-7s-users text-info\" />}\n                    statsText=\"Total Loans\"\n                    statsValue={this.state.loanTotal}\n                    statsIcon={<i className=\"fa fa-refresh\" />}\n                    statsIconText={`Last Update: ${this.state.lastUpdate}`}\n                  />\n                </Col>\n\n                <Col lg={3} sm={6}>\n                  <KPICard\n                    bigIcon={<i className=\"pe-7s-users text-info\" />}\n                    statsText=\"ETB On Loan\"\n                    statsValue={this.state.etbOnLoan}\n                    statsIcon={<i className=\"fa fa-clock-o\" />}\n                    statsIconText={`Last Update: ${this.state.lastUpdate}`}\n                  />\n                </Col>\n\n                <Col lg={3} sm={6}>\n                  <KPICard\n                    bigIcon={<i className=\"pe-7s-users text-info\" />}\n                    statsText=\"Most Shares In Group\"\n                    statsValue={this.state.mostShares}\n                    statsIcon={<i className=\"fa fa-refresh\" />}\n                    statsIconText={`Last Update: ${this.state.lastUpdate}`}\n                  />\n                </Col> */}\n              </Row>\n              <Row>\n                <Col lg={4} sm={6}>\n                  <TotalGraph\n                    title=\"Total Loans\"\n                    xLabel=\"Months\"\n                    yLabel=\"Loans\"\n                    stroke=\"#228b22\"\n                    data={this.state.loansLastYear}\n                  />\n                </Col>\n                <Col lg={4} sm={6}>\n                  <TopBar\n                    title=\"Most Shares\"\n                    color=\"#1828E8\"\n                    xLabel=\"Group Name\"\n                    yLabel=\"Shares\"\n                    data={this.state.sharesPerGroup}\n                    css=\"card-graph card-stats\"\n                  />\n                </Col>\n                <Col lg={4} sm={6}>\n                  <TopBar\n                    title=\"ETB On Loan\"\n                    color=\"#2196f3\"\n                    xLabel=\"Group Name\"\n                    yLabel=\"Amount\"\n                    data={this.state.onLoanPerGroup}\n                    css=\"card-graph card-stats\"\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col lg={4} sm={6}>\n                  <LastYearBar\n                    title=\"Loans Per Month\"\n                    color=\"#8918E8\"\n                    xLabel=\"Month\"\n                    yLabel=\"Loans\"\n                    data={this.state.loansLastYear}\n                  />\n                </Col>\n                <Col lg={4} sm={6}>\n                  <LastMonthBar\n                    title=\"Loans Per Day\"\n                    color=\"#ff0000\"\n                    xLabel=\"Day\"\n                    yLabel=\"Loans\"\n                    data={this.state.loansLastMonth}\n                  />\n                </Col>\n                <Col lg={4} sm={6}>\n                  <TopBar\n                    title=\"Currencies\"\n                    color=\"#2196f3\"\n                    xLabel=\"Currency\"\n                    yLabel=\"Amount\"\n                    data={this.state.currencyStats}\n                    css=\"card-circle card-stats\"\n                  />\n                </Col>\n              </Row>\n            </Grid>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    financeStats: state.KPI.financeStats\n  };\n};\n\nexport default connect(mapStateToProps, { fetchFinanceStats })(FinanceView);\n"]},"metadata":{},"sourceType":"module"}