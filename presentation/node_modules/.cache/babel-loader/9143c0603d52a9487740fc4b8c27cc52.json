{"ast":null,"code":"var _jsxFileName = \"/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/src/components/dashboard/views/MainView.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport { KPICard } from \"../util/KPICard\";\nimport Sidebar from \"../../navigation/Sidebar\";\nimport Header from \"../../navigation/Header\";\nimport TotalGraph from \"../charts/graph/TotalGraph\";\nimport LastYearBar from \"../charts/bar/LastYearBar\";\nimport LastMonthBar from \"../charts/bar/LastMonthBar\";\nimport SizeChart from \"../charts/circle/SizeChart\";\nimport { fetchKeyStats } from \"../../../redux/actions/kpi/KeyStatsAction\";\nimport { getCurrentTime } from \"../../../util/Date\";\n\nclass MainView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userTotal: \"\",\n      usersToday: \"\",\n      usersLastYear: \"\",\n      userGender: \"\",\n      groupTotal: \"\",\n      groupsLastMonth: \"\",\n      groupsLastYear: \"\",\n      meetingTotal: \"\",\n      meetingsLastYear: \"\",\n      shareTotal: \"\",\n      lastUpdate: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n    setInterval(async () => {\n      this.fetchData();\n    }, 10000000);\n  }\n\n  async fetchData() {\n    await this.props.fetchKeyStats();\n    const stats = this.props.keyStats;\n    let lastUpdatedAt = getCurrentTime();\n    this.setState({\n      userTotal: stats.userStats.userCount,\n      usersLastYear: stats.userStats.usersLastYear.data,\n      userGender: stats.userStats.userGenderStats,\n      groupTotal: stats.groupStats.groupTotal,\n      groupsLastMonth: stats.groupStats.groupsLastMonth.data,\n      groupsLastYear: stats.groupStats.groupsLastYear.data,\n      meetingTotal: stats.meetingStats.meetingTotal,\n      meetingsLastYear: stats.meetingStats.meetingsLastYear.data,\n      shareTotal: stats.shareStats,\n      lastUpdate: lastUpdatedAt\n    });\n  }\n\n  render() {\n    const KPICards = {\n      userTotal: {\n        text: \"Total Users\",\n        icon: \"pe-7s-user text-warning\"\n      },\n      groupTotal: {\n        text: \"Total Groups\",\n        icon: \"pe-7s-users text-info\"\n      },\n      meetingTotal: {\n        text: \"Total Meetings\",\n        icon: \"pe-7s-graph1 text-danger\"\n      },\n      shareTotal: {\n        text: \"Total Shares\",\n        icon: \"pe-7s-wallet text-success\"\n      }\n    }; // const icon = \"icon\";\n    // const text = \"text\";\n\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"main-panel\",\n      className: \"main-panel\",\n      ref: \"mainPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(Header, {\n      title: \"Dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, Object.keys(KPICards).map((kpi, index) => React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: KPICards[kpi].icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }),\n      statsText: KPICards[kpi].text,\n      statsValue: this.state[kpi],\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-refresh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }),\n      statsIconText: `Last Update: ${this.state.lastUpdate}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(TotalGraph, {\n      title: \"Total Users\",\n      xLabel: \"Months\",\n      yLabel: \"Users\",\n      stroke: \"#ff0000\",\n      data: this.state.usersLastYear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(TotalGraph, {\n      title: \"Total Groups\",\n      xLabel: \"Months\",\n      yLabel: \"Groups\",\n      stroke: \"#228b22\",\n      data: this.state.groupsLastYear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(TotalGraph, {\n      title: \"Total Meetings\",\n      xLabel: \"Months\",\n      yLabel: \"Meetings\",\n      stroke: \"#2196f3\",\n      data: this.state.meetingsLastYear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(LastMonthBar, {\n      title: \"Groups Last Month\",\n      xLabel: \"Months\",\n      yLabel: \"Groups\",\n      color: \"#228b22\",\n      data: this.state.groupsLastMonth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, React.createElement(SizeChart, {\n      title: \"Gender Distribution\",\n      colors: [\"#1828E8\", \"#228b22\"],\n      data: this.state.userGender,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(LastYearBar, {\n      title: \"Users Last Year\",\n      xLabel: \"Months\",\n      yLabel: \"Users\",\n      color: \"#ff0000\",\n      data: this.state.usersLastYear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    keyStats: state.KPI.keyStats\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchKeyStats\n})(MainView);","map":{"version":3,"sources":["/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/src/components/dashboard/views/MainView.js"],"names":["React","Component","connect","Grid","Row","Col","KPICard","Sidebar","Header","TotalGraph","LastYearBar","LastMonthBar","SizeChart","fetchKeyStats","getCurrentTime","MainView","constructor","props","state","userTotal","usersToday","usersLastYear","userGender","groupTotal","groupsLastMonth","groupsLastYear","meetingTotal","meetingsLastYear","shareTotal","lastUpdate","componentDidMount","fetchData","setInterval","stats","keyStats","lastUpdatedAt","setState","userStats","userCount","data","userGenderStats","groupStats","meetingStats","shareStats","render","KPICards","text","icon","Object","keys","map","kpi","index","mapStateToProps","KPI"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport { KPICard } from \"../util/KPICard\";\n\nimport Sidebar from \"../../navigation/Sidebar\";\nimport Header from \"../../navigation/Header\";\n\nimport TotalGraph from \"../charts/graph/TotalGraph\";\nimport LastYearBar from \"../charts/bar/LastYearBar\";\nimport LastMonthBar from \"../charts/bar/LastMonthBar\";\nimport SizeChart from \"../charts/circle/SizeChart\";\n\nimport { fetchKeyStats } from \"../../../redux/actions/kpi/KeyStatsAction\";\n\nimport { getCurrentTime } from \"../../../util/Date\";\n\nclass MainView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userTotal: \"\",\n      usersToday: \"\",\n      usersLastYear: \"\",\n      userGender: \"\",\n      groupTotal: \"\",\n      groupsLastMonth: \"\",\n      groupsLastYear: \"\",\n      meetingTotal: \"\",\n      meetingsLastYear: \"\",\n      shareTotal: \"\",\n      lastUpdate: \"\"\n    };\n  }\n  componentDidMount() {\n    this.fetchData();\n\n    setInterval(async () => {\n      this.fetchData();\n    }, 10000000);\n  }\n\n  async fetchData() {\n    await this.props.fetchKeyStats();\n\n    const stats = this.props.keyStats;\n\n    let lastUpdatedAt = getCurrentTime();\n\n    this.setState({\n      userTotal: stats.userStats.userCount,\n      usersLastYear: stats.userStats.usersLastYear.data,\n      userGender: stats.userStats.userGenderStats,\n      groupTotal: stats.groupStats.groupTotal,\n      groupsLastMonth: stats.groupStats.groupsLastMonth.data,\n      groupsLastYear: stats.groupStats.groupsLastYear.data,\n      meetingTotal: stats.meetingStats.meetingTotal,\n      meetingsLastYear: stats.meetingStats.meetingsLastYear.data,\n      shareTotal: stats.shareStats,\n      lastUpdate: lastUpdatedAt\n    });\n  }\n\n  render() {\n    const KPICards = {\n      userTotal: { text: \"Total Users\", icon: \"pe-7s-user text-warning\" },\n      groupTotal: { text: \"Total Groups\", icon: \"pe-7s-users text-info\" },\n      meetingTotal: {\n        text: \"Total Meetings\",\n        icon: \"pe-7s-graph1 text-danger\"\n      },\n      shareTotal: { text: \"Total Shares\", icon: \"pe-7s-wallet text-success\" }\n    };\n    // const icon = \"icon\";\n    // const text = \"text\";\n    return (\n      <div className=\"wrapper\">\n        <Sidebar />\n\n        <div id=\"main-panel\" className=\"main-panel\" ref=\"mainPanel\">\n          <Header title=\"Dashboard\" />\n          <div className=\"content\">\n            <Grid fluid>\n              <Row>\n                {Object.keys(KPICards).map((kpi, index) => (\n                  <Col lg={3} sm={6}>\n                    <KPICard\n                      bigIcon={<i className={KPICards[kpi].icon} />}\n                      statsText={KPICards[kpi].text}\n                      statsValue={this.state[kpi]}\n                      statsIcon={<i className=\"fa fa-refresh\" />}\n                      statsIconText={`Last Update: ${this.state.lastUpdate}`}\n                    />\n                  </Col>\n                ))}\n                {/* <Col lg={3} sm={6}>\n                  <KPICard\n                    bigIcon={<i className=\"pe-7s-user text-warning\" />}\n                    statsText=\"Total Users\"\n                    statsValue={this.state.userTotal}\n                    statsIcon={<i className=\"fa fa-refresh\" />}\n                    statsIconText={`Last Update: ${this.state.lastUpdate}`}\n                  />\n                </Col>\n                <Col lg={3} sm={6}>\n                  <KPICard\n                    bigIcon={<i className=\"pe-7s-users text-info\" />}\n                    statsText=\"Total Groups\"\n                    statsValue={this.state.groupTotal}\n                    statsIcon={<i className=\"fa fa-refresh\" />}\n                    statsIconText={`Last Update: ${this.state.lastUpdate}`}\n                  />\n                </Col>\n\n                <Col lg={3} sm={6}>\n                  <KPICard\n                    bigIcon={<i className=\"pe-7s-graph1 text-danger\" />}\n                    statsText=\"Total Meetings\"\n                    statsValue={this.state.meetingTotal}\n                    statsIcon={<i className=\"fa fa-clock-o\" />}\n                    statsIconText={`Last Update: ${this.state.lastUpdate}`}\n                  />\n                </Col>\n\n                <Col lg={3} sm={6}>\n                  <KPICard\n                    bigIcon={<i className=\"pe-7s-wallet text-success\" />}\n                    statsText=\"Total Shares\"\n                    statsValue={this.state.shareTotal}\n                    statsIcon={<i className=\"fa fa-calendar-o\" />}\n                    statsIconText={`Last Update: ${this.state.lastUpdate}`}\n                  />\n                </Col> */}\n              </Row>\n\n              <Row>\n                <Col lg={4} sm={6}>\n                  <TotalGraph\n                    title=\"Total Users\"\n                    xLabel=\"Months\"\n                    yLabel=\"Users\"\n                    stroke=\"#ff0000\"\n                    data={this.state.usersLastYear}\n                  />\n                </Col>\n                <Col lg={4} sm={6}>\n                  <TotalGraph\n                    title=\"Total Groups\"\n                    xLabel=\"Months\"\n                    yLabel=\"Groups\"\n                    stroke=\"#228b22\"\n                    data={this.state.groupsLastYear}\n                  />\n                </Col>\n                <Col lg={4} sm={6}>\n                  <TotalGraph\n                    title=\"Total Meetings\"\n                    xLabel=\"Months\"\n                    yLabel=\"Meetings\"\n                    stroke=\"#2196f3\"\n                    data={this.state.meetingsLastYear}\n                  />\n                </Col>\n              </Row>\n              <Row>\n                <Col lg={4} sm={6}>\n                  <LastMonthBar\n                    title=\"Groups Last Month\"\n                    xLabel=\"Months\"\n                    yLabel=\"Groups\"\n                    color=\"#228b22\"\n                    data={this.state.groupsLastMonth}\n                  />\n                </Col>\n                <Col lg={4} sm={6}>\n                  <SizeChart\n                    title=\"Gender Distribution\"\n                    colors={[\"#1828E8\", \"#228b22\"]}\n                    data={this.state.userGender}\n                  />\n                </Col>\n\n                <Col lg={4} sm={6}>\n                  <LastYearBar\n                    title=\"Users Last Year\"\n                    xLabel=\"Months\"\n                    yLabel=\"Users\"\n                    color=\"#ff0000\"\n                    data={this.state.usersLastYear}\n                  />\n                </Col>\n              </Row>\n            </Grid>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    keyStats: state.KPI.keyStats\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchKeyStats\n})(MainView);\n"]},"metadata":{},"sourceType":"module"}