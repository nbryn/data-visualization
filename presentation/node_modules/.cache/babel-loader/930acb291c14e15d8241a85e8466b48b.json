{"ast":null,"code":"import _regeneratorRuntime from \"/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/src/components/ngo/NGOView.js\";\nimport React, { Component } from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport ToolkitProvider, { Search, ColumnToggle } from \"react-bootstrap-table2-toolkit\";\nimport paginationFactory from 'react-bootstrap-table2-paginator';\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport Sidebar from \"../navigation/Sidebar\";\nimport Header from \"../navigation/Header\";\nimport { fetchGroupsByNGO } from \"../../redux/actions/ngo/NGOGroupsAction\";\n\nvar NGOView =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(NGOView, _Component);\n\n  function NGOView(props) {\n    var _this;\n\n    _classCallCheck(this, NGOView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(NGOView).call(this, props));\n    _this.state = {\n      data: {}\n    };\n    return _this;\n  }\n\n  _createClass(NGOView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.fetchData();\n      setInterval(\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this2.fetchData();\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      })), 10000000);\n    }\n  }, {\n    key: \"fetchData\",\n    value: function () {\n      var _fetchData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var newState;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.props.fetchGroupsByNGO('\"FHIDO\"');\n\n              case 2:\n                newState = this.props.groups.groupData.map(function (element) {\n                  return {\n                    name: element.name,\n                    cycle: element.cycle,\n                    meetings: element.meetings,\n                    shares: element.shares,\n                    loans: element.loans,\n                    admin: element.admin,\n                    owner: element.owner\n                  };\n                });\n                this.setState({\n                  data: newState\n                });\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function fetchData() {\n        return _fetchData.apply(this, arguments);\n      }\n\n      return fetchData;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var groupData;\n      var id = 0;\n\n      if (Array.isArray(this.state.data)) {\n        groupData = this.state.data.map(function (group) {\n          console.log(_this3.state.data);\n          return {\n            id: id++,\n            name: group.name,\n            cycle: group.cycle,\n            meetings: group.meetings,\n            shares: group.shares,\n            loans: group.loans,\n            admin: group.admin,\n            owner: group.owner\n          };\n        });\n      }\n\n      var SearchBar = Search.SearchBar,\n          ClearSearchButton = Search.ClearSearchButton;\n      var selectRow = {\n        mode: \"button\",\n        clickToSelect: true,\n        style: {\n          backgroundColor: \"#c8e6c9\"\n        }\n      };\n      var ToggleList = ColumnToggle.ToggleList;\n      var columns = [{\n        dataField: \"name\",\n        text: \"Name\"\n      }, {\n        dataField: \"cycle\",\n        text: \"Cycle\"\n      }, {\n        dataField: \"meetings\",\n        text: \"Meetings\"\n      }, {\n        dataField: \"shares\",\n        text: \"Shares\"\n      }, {\n        dataField: \"loans\",\n        text: \"Loans\"\n      }, {\n        dataField: \"admin\",\n        text: \"Admin\"\n      }, {\n        dataField: \"owner\",\n        text: \"Owner\"\n      }];\n      return React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(Sidebar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"main-panel\",\n        className: \"main-panel\",\n        ref: \"mainPanel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Header, {\n        title: \"NGOView \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(ToolkitProvider, {\n        keyField: \"name\",\n        data: groupData,\n        columns: columns,\n        search: true,\n        columnToggle: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, function (props) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, \"Search\"), React.createElement(SearchBar, Object.assign({}, props.searchProps, {\n          placeholder: \"Group Name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130\n          },\n          __self: this\n        })), React.createElement(ClearSearchButton, Object.assign({}, props.searchProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        })), React.createElement(\"hr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }), React.createElement(ToggleList, Object.assign({}, props.columnToggleProps, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"content\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, React.createElement(Grid, {\n          fluid: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, React.createElement(Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, React.createElement(BootstrapTable, Object.assign({}, props.baseProps, {\n          keyField: \"id\",\n          data: groupData ? groupData : [],\n          columns: columns,\n          selectRow: selectRow,\n          pagination: paginationFactory(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }))))));\n      })));\n    }\n  }]);\n\n  return NGOView;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    groups: state.NGO.groups\n  };\n};\n\nconnect(mapStateToProps);\nexport default connect(mapStateToProps, {\n  fetchGroupsByNGO: fetchGroupsByNGO\n})(NGOView);","map":{"version":3,"sources":["/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/src/components/ngo/NGOView.js"],"names":["React","Component","BootstrapTable","ToolkitProvider","Search","ColumnToggle","paginationFactory","Grid","Row","Col","connect","Sidebar","Header","fetchGroupsByNGO","NGOView","props","state","data","fetchData","setInterval","newState","groups","groupData","map","element","name","cycle","meetings","shares","loans","admin","owner","setState","id","Array","isArray","group","console","log","SearchBar","ClearSearchButton","selectRow","mode","clickToSelect","style","backgroundColor","ToggleList","columns","dataField","text","searchProps","columnToggleProps","baseProps","mapStateToProps","NGO"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport ToolkitProvider, { Search, ColumnToggle } from \"react-bootstrap-table2-toolkit\";\nimport paginationFactory from 'react-bootstrap-table2-paginator';\n\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport Sidebar from \"../navigation/Sidebar\";\nimport Header from \"../navigation/Header\";\n\nimport { fetchGroupsByNGO } from \"../../redux/actions/ngo/NGOGroupsAction\";\n\nclass NGOView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: {}\n    };\n  }\n\n  componentDidMount() {\n    this.fetchData();\n\n    setInterval(async () => {\n      this.fetchData();\n    }, 10000000);\n  }\n\n  async fetchData() {\n    await this.props.fetchGroupsByNGO('\"FHIDO\"');\n\n    const newState = this.props.groups.groupData.map(element => {\n      return {\n        name: element.name,\n        cycle: element.cycle,\n        meetings: element.meetings,\n        shares: element.shares,\n        loans: element.loans,\n        admin: element.admin,\n        owner: element.owner\n      };\n    });\n\n    this.setState({\n      data: newState\n    });\n  }\n  render() {\n    let groupData;\n    let id = 0;\n\n    if (Array.isArray(this.state.data)) {\n      groupData = this.state.data.map(group => {\n        console.log(this.state.data);\n        return {\n          id: id++,\n          name: group.name,\n          cycle: group.cycle,\n          meetings: group.meetings,\n          shares: group.shares,\n          loans: group.loans,\n          admin: group.admin,\n          owner: group.owner\n        };\n      });\n    }\n\n    const { SearchBar, ClearSearchButton } = Search;\n\n    const selectRow = {\n      mode: \"button\",\n      clickToSelect: true,\n      style: { backgroundColor: \"#c8e6c9\" }\n    };\n\n    const { ToggleList } = ColumnToggle;\n\n    const columns = [\n      {\n        dataField: \"name\",\n        text: \"Name\"\n      },\n      {\n        dataField: \"cycle\",\n        text: \"Cycle\"\n      },\n      {\n        dataField: \"meetings\",\n        text: \"Meetings\"\n      },\n      {\n        dataField: \"shares\",\n        text: \"Shares\"\n      },\n      {\n        dataField: \"loans\",\n        text: \"Loans\"\n      },\n      {\n        dataField: \"admin\",\n        text: \"Admin\"\n      },\n      {\n        dataField: \"owner\",\n        text: \"Owner\"\n      }\n    ];\n\n    return (\n      <div className=\"wrapper\">\n        <Sidebar />\n\n        <div id=\"main-panel\" className=\"main-panel\" ref=\"mainPanel\">\n          <Header\n            title=\"NGOView\n          \"\n          />\n          <ToolkitProvider\n            keyField=\"name\"\n            data={groupData}\n            columns={columns}\n            search\n            columnToggle\n          >\n            {props => (\n              <div>\n                \n                <h4>Search</h4>\n                <SearchBar \n                {...props.searchProps} \n                placeholder=\"Group Name\"/>\n                <ClearSearchButton {...props.searchProps} />\n                \n                <hr />\n                <ToggleList { ...props.columnToggleProps } />\n                <div className=\"content\">\n                  <Grid fluid>\n                    <Row>\n                      <BootstrapTable\n                        {...props.baseProps}\n                        keyField=\"id\"\n                        data={groupData ? groupData : []}\n                        columns={columns}\n                        selectRow={selectRow}\n                        pagination={ paginationFactory()}\n                        \n                      />\n                    </Row>\n                  </Grid>\n                </div>\n              </div>\n            )}\n          </ToolkitProvider>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    groups: state.NGO.groups\n  };\n};\nconnect(mapStateToProps);\n\nexport default connect(mapStateToProps, { fetchGroupsByNGO })(NGOView);\n"]},"metadata":{},"sourceType":"module"}