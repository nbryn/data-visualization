{"ast":null,"code":"var _jsxFileName = \"/home/nbryn/Desktop/jamiipay/Projects/jamiipay-web-dashboard/presentation/src/components/dashboard/charts/graph/TotalGraph.js\";\nimport React, { Component } from \"react\";\nimport GraphChart from \"./GraphChart.js\";\nimport { convertNumberToMonth } from \"../../../../util/Date\";\n\nclass TotalGraph extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.data !== prevProps.data) {\n      const data = this.props.data;\n      let total = 0;\n      let month, year;\n      console.log(data);\n      const newState = data.map(element => {\n        total += element.count;\n        year = element.year.toString().substring(2);\n        month = convertNumberToMonth(element.month);\n        return {\n          name: month + \" '\" + year,\n          value: total\n        };\n      });\n      this.setState({\n        data: newState\n      });\n    }\n  }\n\n  render() {\n    const title = this.props.title;\n    const stroke = this.props.stroke;\n    const yLabel = {\n      value: this.props.yLabel,\n      angle: -90,\n      position: \"insideLeft\"\n    };\n    const xLabel = {\n      value: this.props.xLabel,\n      position: \"center\",\n      dy: 10\n    };\n    return React.createElement(\"div\", {\n      className: \"card-graph card-stats\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(GraphChart, {\n      title: title,\n      data: this.state.data,\n      xLabel: xLabel,\n      yLabel: yLabel,\n      stroke: stroke,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default TotalGraph;","map":{"version":3,"sources":["/home/nbryn/Desktop/jamiipay/Projects/jamiipay-web-dashboard/presentation/src/components/dashboard/charts/graph/TotalGraph.js"],"names":["React","Component","GraphChart","convertNumberToMonth","TotalGraph","constructor","props","state","data","componentDidUpdate","prevProps","total","month","year","console","log","newState","map","element","count","toString","substring","name","value","setState","render","title","stroke","yLabel","angle","position","xLabel","dy"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,iBAAvB;AAEA,SAASC,oBAAT,QAAqC,uBAArC;;AAEA,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AACjCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAGD;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAI,KAAKJ,KAAL,CAAWE,IAAX,KAAoBE,SAAS,CAACF,IAAlC,EAAwC;AACtC,YAAMA,IAAI,GAAG,KAAKF,KAAL,CAAWE,IAAxB;AAEA,UAAIG,KAAK,GAAG,CAAZ;AACA,UAAIC,KAAJ,EAAWC,IAAX;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AACA,YAAMQ,QAAQ,GAAGR,IAAI,CAACS,GAAL,CAASC,OAAO,IAAI;AACnCP,QAAAA,KAAK,IAAIO,OAAO,CAACC,KAAjB;AACAN,QAAAA,IAAI,GAAGK,OAAO,CAACL,IAAR,CAAaO,QAAb,GAAwBC,SAAxB,CAAkC,CAAlC,CAAP;AACAT,QAAAA,KAAK,GAAGT,oBAAoB,CAACe,OAAO,CAACN,KAAT,CAA5B;AAEA,eAAO;AACLU,UAAAA,IAAI,EAAEV,KAAK,GAAG,IAAR,GAAeC,IADhB;AAELU,UAAAA,KAAK,EAAEZ;AAFF,SAAP;AAID,OATgB,CAAjB;AAWA,WAAKa,QAAL,CAAc;AAAEhB,QAAAA,IAAI,EAAEQ;AAAR,OAAd;AACD;AACF;;AACDS,EAAAA,MAAM,GAAG;AACP,UAAMC,KAAK,GAAG,KAAKpB,KAAL,CAAWoB,KAAzB;AACA,UAAMC,MAAM,GAAG,KAAKrB,KAAL,CAAWqB,MAA1B;AACA,UAAMC,MAAM,GAAG;AACbL,MAAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWsB,MADL;AAEbC,MAAAA,KAAK,EAAE,CAAC,EAFK;AAGbC,MAAAA,QAAQ,EAAE;AAHG,KAAf;AAKA,UAAMC,MAAM,GAAG;AAAER,MAAAA,KAAK,EAAE,KAAKjB,KAAL,CAAWyB,MAApB;AAA4BD,MAAAA,QAAQ,EAAE,QAAtC;AAAgDE,MAAAA,EAAE,EAAE;AAApD,KAAf;AAEA,WACE;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AACE,MAAA,KAAK,EAAEN,KADT;AAEE,MAAA,IAAI,EAAE,KAAKnB,KAAL,CAAWC,IAFnB;AAGE,MAAA,MAAM,EAAEuB,MAHV;AAIE,MAAA,MAAM,EAAEH,MAJV;AAKE,MAAA,MAAM,EAAED,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAWD;;AAnDgC;;AAsDnC,eAAevB,UAAf","sourcesContent":["import React, { Component } from \"react\";\nimport GraphChart from \"./GraphChart.js\";\n\nimport { convertNumberToMonth } from \"../../../../util/Date\";\n\nclass TotalGraph extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: []\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.data !== prevProps.data) {\n      const data = this.props.data;\n\n      let total = 0;\n      let month, year;\n      console.log(data);\n      const newState = data.map(element => {\n        total += element.count;\n        year = element.year.toString().substring(2);\n        month = convertNumberToMonth(element.month);\n\n        return {\n          name: month + \" '\" + year,\n          value: total\n        };\n      });\n\n      this.setState({ data: newState });\n    }\n  }\n  render() {\n    const title = this.props.title;\n    const stroke = this.props.stroke;\n    const yLabel = {\n      value: this.props.yLabel,\n      angle: -90,\n      position: \"insideLeft\"\n    };\n    const xLabel = { value: this.props.xLabel, position: \"center\", dy: 10 };\n\n    return (\n      <div className=\"card-graph card-stats\">\n        <GraphChart\n          title={title}\n          data={this.state.data}\n          xLabel={xLabel}\n          yLabel={yLabel}\n          stroke={stroke}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TotalGraph;\n"]},"metadata":{},"sourceType":"module"}