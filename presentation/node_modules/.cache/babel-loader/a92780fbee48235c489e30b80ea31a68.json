{"ast":null,"code":"var _jsxFileName = \"/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/src/components/dashboard/views/MainView.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport { KPICard } from \"../util/KPICard\";\nimport Sidebar from \"../../navigation/Sidebar\";\nimport Header from \"../../navigation/Header\";\nimport TotalGraph from \"../charts/graph/TotalGraph\";\nimport LastYearBar from \"../charts/bar/LastYearBar\";\nimport LastMonthBar from \"../charts/bar/LastMonthBar\";\nimport SizeChart from \"../charts/circle/SizeChart\";\nimport { fetchKeyStats } from \"../../../redux/actions/kpi/KeyStatsAction\";\nimport { getCurrentTime } from \"../../../util/Date\";\n\nclass MainView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {\n    this.fetchData();\n    setInterval(async () => {\n      this.fetchData();\n    }, 10000000);\n  }\n\n  async fetchData() {\n    await this.props.fetchKeyStats();\n    const stats = this.props.keyStats;\n    let lastUpdatedAt = getCurrentTime();\n    this.setState({\n      userTotal: stats.userStats.userCount,\n      usersLastYear: stats.userStats.usersLastYear.data,\n      userGender: stats.userStats.userGenderStats,\n      groupTotal: stats.groupStats.groupTotal,\n      groupsLastMonth: stats.groupStats.groupsLastMonth.data,\n      groupsLastYear: stats.groupStats.groupsLastYear.data,\n      meetingTotal: stats.meetingStats.meetingTotal,\n      meetingsLastYear: stats.meetingStats.meetingsLastYear.data,\n      shareTotal: stats.shareStats,\n      lastUpdate: lastUpdatedAt\n    });\n  }\n\n  render() {\n    const KPICards = {\n      userTotal: {\n        text: \"Total Users\",\n        icon: \"pe-7s-user text-warning\"\n      },\n      groupTotal: {\n        text: \"Total Groups\",\n        icon: \"pe-7s-users text-info\"\n      },\n      meetingTotal: {\n        text: \"Total Meetings\",\n        icon: \"pe-7s-graph1 text-danger\"\n      },\n      shareTotal: {\n        text: \"Total Shares\",\n        icon: \"pe-7s-wallet text-success\"\n      }\n    };\n    const totalGraphs = {\n      usersLastYear: {\n        title: \"Total Users\",\n        yLabel: \"Users\",\n        stroke: \"#ff0000\"\n      },\n      groupsLastYear: {\n        title: \"Total Groups\",\n        yLabel: \"Groups\",\n        stroke: \"#228b22\"\n      },\n      meetingsLastYear: {\n        title: \"Total Meetings\",\n        yLabel: \"Meetings\",\n        stroke: \"#2196f3\"\n      }\n    };\n    return React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(Sidebar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      id: \"main-panel\",\n      className: \"main-panel\",\n      ref: \"mainPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Header, {\n      title: \"Dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, Object.keys(KPICards).map((kpi, index) => React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: KPICards[kpi].icon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }),\n      statsText: KPICards[kpi].text,\n      statsValue: this.state[kpi],\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-refresh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }),\n      statsIconText: `Last Update: ${this.state.lastUpdate}`,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, Object.keys(totalGraphs).map((element, index) => React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(TotalGraph, {\n      title: totalGraphs[element].title,\n      xLabel: \"Months\",\n      yLabel: totalGraphs[element].yLabel,\n      stroke: totalGraphs[element].stroke,\n      data: this.state[element],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(LastMonthBar, {\n      title: \"Groups Last Month\",\n      xLabel: \"Months\",\n      yLabel: \"Groups\",\n      color: \"#228b22\",\n      data: this.state.groupsLastMonth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(SizeChart, {\n      title: \"Gender Distribution\",\n      colors: [\"#1828E8\", \"#228b22\"],\n      data: this.state.userGender,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(LastYearBar, {\n      title: \"Users Last Year\",\n      xLabel: \"Months\",\n      yLabel: \"Users\",\n      color: \"#ff0000\",\n      data: this.state.usersLastYear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    keyStats: state.KPI.keyStats\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchKeyStats\n})(MainView);","map":{"version":3,"sources":["/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/src/components/dashboard/views/MainView.js"],"names":["React","Component","connect","Grid","Row","Col","KPICard","Sidebar","Header","TotalGraph","LastYearBar","LastMonthBar","SizeChart","fetchKeyStats","getCurrentTime","MainView","constructor","props","state","componentDidMount","fetchData","setInterval","stats","keyStats","lastUpdatedAt","setState","userTotal","userStats","userCount","usersLastYear","data","userGender","userGenderStats","groupTotal","groupStats","groupsLastMonth","groupsLastYear","meetingTotal","meetingStats","meetingsLastYear","shareTotal","shareStats","lastUpdate","render","KPICards","text","icon","totalGraphs","title","yLabel","stroke","Object","keys","map","kpi","index","element","mapStateToProps","KPI"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport { KPICard } from \"../util/KPICard\";\n\nimport Sidebar from \"../../navigation/Sidebar\";\nimport Header from \"../../navigation/Header\";\n\nimport TotalGraph from \"../charts/graph/TotalGraph\";\nimport LastYearBar from \"../charts/bar/LastYearBar\";\nimport LastMonthBar from \"../charts/bar/LastMonthBar\";\nimport SizeChart from \"../charts/circle/SizeChart\";\n\nimport { fetchKeyStats } from \"../../../redux/actions/kpi/KeyStatsAction\";\n\nimport { getCurrentTime } from \"../../../util/Date\";\n\nclass MainView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n  componentDidMount() {\n    this.fetchData();\n\n    setInterval(async () => {\n      this.fetchData();\n    }, 10000000);\n  }\n\n  async fetchData() {\n    await this.props.fetchKeyStats();\n\n    const stats = this.props.keyStats;\n\n    let lastUpdatedAt = getCurrentTime();\n\n    this.setState({\n      userTotal: stats.userStats.userCount,\n      usersLastYear: stats.userStats.usersLastYear.data,\n      userGender: stats.userStats.userGenderStats,\n      groupTotal: stats.groupStats.groupTotal,\n      groupsLastMonth: stats.groupStats.groupsLastMonth.data,\n      groupsLastYear: stats.groupStats.groupsLastYear.data,\n      meetingTotal: stats.meetingStats.meetingTotal,\n      meetingsLastYear: stats.meetingStats.meetingsLastYear.data,\n      shareTotal: stats.shareStats,\n      lastUpdate: lastUpdatedAt\n    });\n  }\n\n  render() {\n    const KPICards = {\n      userTotal: { text: \"Total Users\", icon: \"pe-7s-user text-warning\" },\n      groupTotal: { text: \"Total Groups\", icon: \"pe-7s-users text-info\" },\n      meetingTotal: {\n        text: \"Total Meetings\",\n        icon: \"pe-7s-graph1 text-danger\"\n      },\n      shareTotal: { text: \"Total Shares\", icon: \"pe-7s-wallet text-success\" }\n    };\n\n    const totalGraphs = {\n      usersLastYear: {\n        title: \"Total Users\",\n        yLabel: \"Users\",\n        stroke: \"#ff0000\"\n      },\n      groupsLastYear: {\n        title: \"Total Groups\",\n        yLabel: \"Groups\",\n        stroke: \"#228b22\"\n      },\n      meetingsLastYear: {\n        title: \"Total Meetings\",\n        yLabel: \"Meetings\",\n        stroke: \"#2196f3\"\n      }\n    };\n\n    return (\n      <div className=\"wrapper\">\n        <Sidebar />\n\n        <div id=\"main-panel\" className=\"main-panel\" ref=\"mainPanel\">\n          <Header title=\"Dashboard\" />\n          <div className=\"content\">\n            <Grid fluid>\n              <Row>\n                {Object.keys(KPICards).map((kpi, index) => (\n                  <Col lg={3} sm={6}>\n                    <KPICard\n                      bigIcon={<i className={KPICards[kpi].icon} />}\n                      statsText={KPICards[kpi].text}\n                      statsValue={this.state[kpi]}\n                      statsIcon={<i className=\"fa fa-refresh\" />}\n                      statsIconText={`Last Update: ${this.state.lastUpdate}`}\n                    />\n                  </Col>\n                ))}\n              </Row>\n\n              <Row>\n                {Object.keys(totalGraphs).map((element, index) => (\n                  <Col lg={4} sm={6}>\n                    <TotalGraph\n                      title={totalGraphs[element].title}\n                      xLabel=\"Months\"\n                      yLabel={totalGraphs[element].yLabel}\n                      stroke={totalGraphs[element].stroke}\n                      data={this.state[element]}\n                    />\n                  </Col>\n                ))}\n              </Row>\n              <Row>\n                <Col lg={4} sm={6}>\n                  <LastMonthBar\n                    title=\"Groups Last Month\"\n                    xLabel=\"Months\"\n                    yLabel=\"Groups\"\n                    color=\"#228b22\"\n                    data={this.state.groupsLastMonth}\n                  />\n                </Col>\n                <Col lg={4} sm={6}>\n                  <SizeChart\n                    title=\"Gender Distribution\"\n                    colors={[\"#1828E8\", \"#228b22\"]}\n                    data={this.state.userGender}\n                  />\n                </Col>\n\n                <Col lg={4} sm={6}>\n                  <LastYearBar\n                    title=\"Users Last Year\"\n                    xLabel=\"Months\"\n                    yLabel=\"Users\"\n                    color=\"#ff0000\"\n                    data={this.state.usersLastYear}\n                  />\n                </Col>\n              </Row>\n            </Grid>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    keyStats: state.KPI.keyStats\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchKeyStats\n})(MainView);\n"]},"metadata":{},"sourceType":"module"}