{"ast":null,"code":"import axios from \"axios\";\nimport { setTokenInLocalStorage } from \"../../../security/Token\";\nconst url = \"https://anpjwd4bz4.execute-api.eu-central-1.amazonaws.com/dev/graphql\";\nexport const login = (username, password, history) => async dispatch => {\n  const data = \"mutation {\\n        signin(input: {\\n          channel: ANDROID\\n          username: \\\"\".concat(username, \"\\\"\\n          password: \\\"\").concat(password, \"\\\"\\n        }) {\\n          ... on ValidationError {\\n            result {\\n              field\\n              errors\\n            }\\n          }\\n    \\n          ... on Login {\\n            token\\n            refreshToken\\n            deviceId\\n            user {\\n              email\\n            }  \\n          }\\n        }\\n      }\");\n  let response;\n\n  try {\n    response = await axios({\n      url,\n      method: \"post\",\n      data: {\n        query: data\n      }\n    }); // Flag for error in DB?\n\n    const error = response.data.data.signin.result;\n\n    if (error) {\n      if (error[0].errors[0] === \"NO_SEARCH\" || error[0].errors[0] === \"TO_SHORT\") {\n        return \"Wrong Email/Username\";\n      } else {\n        return \"Wrong Password\";\n      }\n    } else {\n      setTokenInLocalStorage(response);\n      history.push(\"/dashboard\");\n    } // Need better handling of network errors here\n\n  } catch (err) {\n    console.log(err);\n    return \"Connection problem\";\n  }\n};","map":{"version":3,"sources":["/home/nbryn/Desktop/JamiiPay/jamiipay-web-dashboard/client/src/redux/actions/User/LoginAction.js"],"names":["axios","setTokenInLocalStorage","url","login","username","password","history","dispatch","data","response","method","query","error","signin","result","errors","push","err","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,sBAAT,QAAuC,yBAAvC;AAEA,MAAMC,GAAG,GACP,uEADF;AAGA,OAAO,MAAMC,KAAK,GAAG,CAACC,QAAD,EAAWC,QAAX,EAAqBC,OAArB,KAAiC,MAAMC,QAAN,IAAkB;AACtE,QAAMC,IAAI,oGAGWJ,QAHX,uCAIWC,QAJX,oVAAV;AAwBA,MAAII,QAAJ;;AAEA,MAAI;AACFA,IAAAA,QAAQ,GAAG,MAAMT,KAAK,CAAC;AACrBE,MAAAA,GADqB;AAErBQ,MAAAA,MAAM,EAAE,MAFa;AAGrBF,MAAAA,IAAI,EAAE;AACJG,QAAAA,KAAK,EAAEH;AADH;AAHe,KAAD,CAAtB,CADE,CASF;;AACA,UAAMI,KAAK,GAAGH,QAAQ,CAACD,IAAT,CAAcA,IAAd,CAAmBK,MAAnB,CAA0BC,MAAxC;;AACA,QAAIF,KAAJ,EAAW;AACT,UAAIA,KAAK,CAAC,CAAD,CAAL,CAASG,MAAT,CAAgB,CAAhB,MAAuB,WAAvB,IAAsCH,KAAK,CAAC,CAAD,CAAL,CAASG,MAAT,CAAgB,CAAhB,MAAuB,UAAjE,EAA6E;AAC7E,eAAO,sBAAP;AACC,OAFD,MAEO;AACL,eAAO,gBAAP;AACD;AACF,KAND,MAMO;AACLd,MAAAA,sBAAsB,CAACQ,QAAD,CAAtB;AAEAH,MAAAA,OAAO,CAACU,IAAR,CAAa,YAAb;AACD,KArBC,CAuBF;;AACD,GAxBD,CAwBE,OAAOC,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAO,oBAAP;AACD;AACF,CAvDM","sourcesContent":["import axios from \"axios\";\n\nimport { setTokenInLocalStorage } from \"../../../security/Token\";\n\nconst url =\n  \"https://anpjwd4bz4.execute-api.eu-central-1.amazonaws.com/dev/graphql\";\n\nexport const login = (username, password, history) => async dispatch => {\n  const data = `mutation {\n        signin(input: {\n          channel: ANDROID\n          username: \"${username}\"\n          password: \"${password}\"\n        }) {\n          ... on ValidationError {\n            result {\n              field\n              errors\n            }\n          }\n    \n          ... on Login {\n            token\n            refreshToken\n            deviceId\n            user {\n              email\n            }  \n          }\n        }\n      }`;\n\n  let response;\n\n  try {\n    response = await axios({\n      url,\n      method: \"post\",\n      data: {\n        query: data\n      }\n    });\n\n    // Flag for error in DB?\n    const error = response.data.data.signin.result;\n    if (error) {\n      if (error[0].errors[0] === \"NO_SEARCH\" || error[0].errors[0] === \"TO_SHORT\") {\n      return \"Wrong Email/Username\";\n      } else {\n        return \"Wrong Password\"\n      }\n    } else {\n      setTokenInLocalStorage(response);\n\n      history.push(\"/dashboard\");\n    }\n\n    // Need better handling of network errors here\n  } catch (err) {\n    console.log(err);\n    return \"Connection problem\";\n  }\n};\n"]},"metadata":{},"sourceType":"module"}