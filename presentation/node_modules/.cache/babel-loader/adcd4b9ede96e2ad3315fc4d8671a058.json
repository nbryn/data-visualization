{"ast":null,"code":"var _jsxFileName = \"/home/nbryn/Desktop/JamiiPay/jamiipay-web-dashboard/presentation/src/components/dashboard/views/KPIView.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport { KPICard } from \"../KPICard.js\";\nimport GroupTotalGraph from \"../charts/graph/GroupTotalGraph\";\nimport MoneyTotalGraph from \"../charts/graph/MoneyTotalGraph\";\nimport UserTotalGraph from \"../charts/graph/UserTotalGraph\";\nimport SoMeCircleChart from \"../charts/circle/SoMeCircleChart\";\nimport GroupSizeChart from \"../charts/circle/GroupSizeChart\";\nimport UsersLastMonthBar from \"../charts/bar/UsersLastMonthBar\";\nimport UsersLastYearBar from \"../charts/bar/UsersLastYearBar\";\nimport { fetchUserStats } from \"../../../redux/actions/KPI/UserStatsAction\";\nimport { fetchGroupTotal } from \"../../../redux/actions/KPI/GroupTotalAction\";\nimport { getCurrentTime } from \"../../../util/Date\";\n\nclass KPIView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userTotal: \"\",\n      usersTotalLastUpdate: \"\",\n      usersToday: \"\",\n      usersTodayLastUpdate: \"\",\n      groupTotal: \"\",\n      groupTotalLastUpdate: \"\",\n      $Total: \"\"\n    };\n  }\n\n  async componentDidMount() {\n    // Error handling when not authenticated?\n    const temp = await this.props.fetchUserStats();\n    const temp1 = await this.props.fetchGroupTotal();\n    const userStats = this.props.userStats;\n    const groupTotal = this.props.groupTotal;\n    let lastUpdatedAt = getCurrentTime();\n    this.setState({\n      userTotal: userStats.numberOfUsers,\n      usersTotalLastUpdate: lastUpdatedAt,\n      usersToday: userStats.signups[10].count,\n      usersTodayLastUpdate: lastUpdatedAt,\n      groupTotal: groupTotal,\n      groupTotalLastUpdate: lastUpdatedAt\n    }); // Reload KPI data\n\n    setInterval(async () => {\n      // Error handling when not authenticated?\n      const temp = await this.props.fetchUserStats();\n      const temp1 = await this.props.fetchGroupTotal();\n      let lastUpdatedAt = getCurrentTime();\n      this.setState({\n        userTotal: userStats.numberOfUsers,\n        userTotalLastUpdate: lastUpdatedAt,\n        usersToday: userStats.signups[10].count,\n        usersTodayLastUpdate: lastUpdatedAt,\n        groupTotal: groupTotal,\n        groupTotalLastUpdate: lastUpdatedAt\n      });\n    }, 1000000);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: \"pe-7s-user text-warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }),\n      statsText: \"Total Users\",\n      statsValue: this.state.userTotal,\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-refresh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }),\n      statsIconText: \"Last Update: \".concat(this.state.userTotalLastUpdate),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: \"pe-7s-users text-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }),\n      statsText: \"Total Groups\",\n      statsValue: this.state.groupTotal,\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-refresh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }),\n      statsIconText: \"Last Update: \".concat(this.state.groupTotalLastUpdate),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: \"pe-7s-graph1 text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }),\n      statsText: \"New Users Today\",\n      statsValue: this.state.usersToday,\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-clock-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }),\n      statsIconText: \"Last Update: \".concat(this.state.usersTodayLastUpdate),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: \"pe-7s-wallet text-success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }),\n      statsText: \"Amount Registered\",\n      statsValue: \"$5,345\",\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-calendar-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }),\n      statsIconText: \"Last day\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(UserTotalGraph, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(GroupTotalGraph, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(MoneyTotalGraph, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(SoMeCircleChart, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(UsersLastMonthBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(UsersLastYearBar, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    userStats: state.KPI.userStats,\n    groupTotal: state.KPI.groupTotal\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchUserStats,\n  fetchGroupTotal\n})(KPIView);","map":{"version":3,"sources":["/home/nbryn/Desktop/JamiiPay/jamiipay-web-dashboard/presentation/src/components/dashboard/views/KPIView.js"],"names":["React","Component","connect","Grid","Row","Col","KPICard","GroupTotalGraph","MoneyTotalGraph","UserTotalGraph","SoMeCircleChart","GroupSizeChart","UsersLastMonthBar","UsersLastYearBar","fetchUserStats","fetchGroupTotal","getCurrentTime","KPIView","constructor","props","state","userTotal","usersTotalLastUpdate","usersToday","usersTodayLastUpdate","groupTotal","groupTotalLastUpdate","$Total","componentDidMount","temp","temp1","userStats","lastUpdatedAt","setState","numberOfUsers","signups","count","setInterval","userTotalLastUpdate","render","mapStateToProps","KPI"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\n\nimport { KPICard } from \"../KPICard.js\";\n\nimport GroupTotalGraph from \"../charts/graph/GroupTotalGraph\";\nimport MoneyTotalGraph from \"../charts/graph/MoneyTotalGraph\";\nimport UserTotalGraph from \"../charts/graph/UserTotalGraph\";\n\nimport SoMeCircleChart from \"../charts/circle/SoMeCircleChart\";\nimport GroupSizeChart from \"../charts/circle/GroupSizeChart\";\n\nimport UsersLastMonthBar from \"../charts/bar/UsersLastMonthBar\";\nimport UsersLastYearBar from \"../charts/bar/UsersLastYearBar\";\n\nimport { fetchUserStats } from \"../../../redux/actions/KPI/UserStatsAction\";\nimport { fetchGroupTotal } from \"../../../redux/actions/KPI/GroupTotalAction\";\nimport { getCurrentTime } from \"../../../util/Date\";\n\nclass KPIView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      userTotal: \"\",\n      usersTotalLastUpdate: \"\",\n      usersToday: \"\",\n      usersTodayLastUpdate: \"\",\n      groupTotal: \"\",\n      groupTotalLastUpdate: \"\",\n      $Total: \"\"\n    };\n  }\n  async componentDidMount() {\n    // Error handling when not authenticated?\n    const temp = await this.props.fetchUserStats();\n    const temp1 = await this.props.fetchGroupTotal();\n\n    const userStats = this.props.userStats;\n    const groupTotal = this.props.groupTotal;\n\n    let lastUpdatedAt = getCurrentTime();\n\n    this.setState({\n      userTotal: userStats.numberOfUsers,\n      usersTotalLastUpdate: lastUpdatedAt,\n      usersToday: userStats.signups[10].count,\n      usersTodayLastUpdate: lastUpdatedAt,\n      groupTotal: groupTotal,\n      groupTotalLastUpdate: lastUpdatedAt\n    });\n\n    // Reload KPI data\n    setInterval(async () => {\n      // Error handling when not authenticated?\n      const temp = await this.props.fetchUserStats();\n      const temp1 = await this.props.fetchGroupTotal();\n\n      let lastUpdatedAt = getCurrentTime();\n\n      this.setState({\n        userTotal: userStats.numberOfUsers,\n        userTotalLastUpdate: lastUpdatedAt,\n        usersToday: userStats.signups[10].count,\n        usersTodayLastUpdate: lastUpdatedAt,\n        groupTotal: groupTotal,\n        groupTotalLastUpdate: lastUpdatedAt\n      });\n    }, 1000000);\n  }\n\n  render() {\n    return (\n      <div className=\"content\">\n        <Grid fluid>\n          <Row>\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-user text-warning\" />}\n                statsText=\"Total Users\"\n                statsValue={this.state.userTotal}\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText={`Last Update: ${this.state.userTotalLastUpdate}`}\n              />\n            </Col>\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-users text-info\" />}\n                statsText=\"Total Groups\"\n                statsValue={this.state.groupTotal}\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText={`Last Update: ${this.state.groupTotalLastUpdate}`}\n              />\n            </Col>\n\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-graph1 text-danger\" />}\n                statsText=\"New Users Today\"\n                statsValue={this.state.usersToday}\n                statsIcon={<i className=\"fa fa-clock-o\" />}\n                statsIconText={`Last Update: ${this.state.usersTodayLastUpdate}`}\n              />\n            </Col>\n\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-wallet text-success\" />}\n                statsText=\"Amount Registered\"\n                statsValue=\"$5,345\"\n                statsIcon={<i className=\"fa fa-calendar-o\" />}\n                statsIconText=\"Last day\"\n              />\n            </Col>\n          </Row>\n\n          <Row>\n            <Col lg={4} sm={6}>\n              <UserTotalGraph />\n            </Col>\n            <Col lg={4} sm={6}>\n              <GroupTotalGraph />\n            </Col>\n            <Col lg={4} sm={6}>\n              <MoneyTotalGraph />\n            </Col>\n          </Row>\n          <Row>\n            <Col lg={4} sm={6}>\n              <SoMeCircleChart />\n            </Col>\n            <Col lg={4} sm={6}>\n              <UsersLastMonthBar />\n            </Col>\n\n            <Col lg={4} sm={6}>\n              <UsersLastYearBar />\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    userStats: state.KPI.userStats,\n    groupTotal: state.KPI.groupTotal\n  };\n};\n\nexport default connect(mapStateToProps, { fetchUserStats, fetchGroupTotal })(\n  KPIView\n);\n"]},"metadata":{},"sourceType":"module"}