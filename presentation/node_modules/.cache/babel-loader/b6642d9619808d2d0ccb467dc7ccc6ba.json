{"ast":null,"code":"import _regeneratorRuntime from \"/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nexport var fetchFromServer =\n/*#__PURE__*/\nfunction () {\n  var _ref = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(method, data) {\n    var response, url;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            url = \"/graphql\";\n            _context.prev = 1;\n            _context.next = 4;\n            return axios({\n              url: url,\n              method: method,\n              data: {\n                query: data\n              }\n            });\n\n          case 4:\n            response = _context.sent;\n            return _context.abrupt(\"return\", response);\n\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](1);\n            console.log(_context.t0);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 8]]);\n  }));\n\n  return function fetchFromServer(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/src/redux/actions/Fetch.js"],"names":["axios","fetchFromServer","method","data","url","query","response","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,eAAe;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAG,iBAAOC,MAAP,EAAeC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAEvBC,YAAAA,GAFuB,GAEjB,UAFiB;AAAA;AAAA;AAAA,mBAKVJ,KAAK,CAAC;AACrBI,cAAAA,GAAG,EAAEA,GADgB;AAErBF,cAAAA,MAAM,EAAEA,MAFa;AAGrBC,cAAAA,IAAI,EAAE;AACJE,gBAAAA,KAAK,EAAEF;AADH;AAHe,aAAD,CALK;;AAAA;AAK3BG,YAAAA,QAL2B;AAAA,6CAapBA,QAboB;;AAAA;AAAA;AAAA;AAe3BC,YAAAA,OAAO,CAACC,GAAR;;AAf2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAfP,eAAe;AAAA;AAAA;AAAA,GAArB","sourcesContent":["import axios from \"axios\";\n\nexport const fetchFromServer = async (method, data) => {\n  let response;\n  const url = \"/graphql\";\n\n  try {\n    response = await axios({\n      url: url,\n      method: method,\n      data: {\n        query: data\n      }\n    });\n\n    return response;\n  } catch (err) {\n    console.log(err);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}