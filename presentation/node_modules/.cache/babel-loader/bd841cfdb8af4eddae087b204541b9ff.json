{"ast":null,"code":"import _regeneratorRuntime from \"/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { USERS_STATS } from \"../ActionTypes\";\nimport { fetchFromServer } from \"../Fetch\";\nimport { setTokenInHeader } from \"../../../security/Token\";\nvar url = \"/graphql\";\nexport var fetchUserStats = function fetchUserStats() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var data, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                data = \"query {\\n    userStats{\\n      userCount\\n      usersLastMonth{\\n        data{\\n          day{\\n            day\\n            month\\n            year\\n          }\\n          count\\n        }\\n      }\\n      usersLastYear{\\n        data{\\n          year\\n          month\\n          count\\n        }\\n      }\\n      userGenderStats{\\n        value\\n        count\\n      }\\n    }\\n  }\";\n                setTokenInHeader();\n                _context.next = 4;\n                return fetchFromServer(url, \"post\", data);\n\n              case 4:\n                response = _context.sent;\n\n                if (!response.data.errors) {\n                  _context.next = 9;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", response.data.errors[0].extensions.code);\n\n              case 9:\n                dispatch({\n                  type: USERS_STATS,\n                  payload: response.data.data.userStats\n                });\n\n              case 10:\n                return _context.abrupt(\"return\", response.data.data.userStats);\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/src/redux/actions/kpi/UserStatsActions.js"],"names":["USERS_STATS","fetchFromServer","setTokenInHeader","url","fetchUserStats","dispatch","data","response","errors","extensions","code","type","payload","userStats"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,gBAA5B;AAEA,SAASC,eAAT,QAAgC,UAAhC;AACA,SAASC,gBAAT,QAAiC,yBAAjC;AAEA,IAAMC,GAAG,GAAG,UAAZ;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAM,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5BC,gBAAAA,IAD4B;AA4BlCJ,gBAAAA,gBAAgB;AA5BkB;AAAA,uBA8BXD,eAAe,CAACE,GAAD,EAAM,MAAN,EAAcG,IAAd,CA9BJ;;AAAA;AA8B5BC,gBAAAA,QA9B4B;;AAAA,qBAiC9BA,QAAQ,CAACD,IAAT,CAAcE,MAjCgB;AAAA;AAAA;AAAA;;AAAA,iDAkCzBD,QAAQ,CAACD,IAAT,CAAcE,MAAd,CAAqB,CAArB,EAAwBC,UAAxB,CAAmCC,IAlCV;;AAAA;AAoChCL,gBAAAA,QAAQ,CAAC;AACPM,kBAAAA,IAAI,EAAEX,WADC;AAEPY,kBAAAA,OAAO,EAAEL,QAAQ,CAACD,IAAT,CAAcA,IAAd,CAAmBO;AAFrB,iBAAD,CAAR;;AApCgC;AAAA,iDA0C3BN,QAAQ,CAACD,IAAT,CAAcA,IAAd,CAAmBO,SA1CQ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB","sourcesContent":["import { USERS_STATS } from \"../ActionTypes\";\n\nimport { fetchFromServer } from \"../Fetch\";\nimport { setTokenInHeader } from \"../../../security/Token\";\n\nconst url = \"/graphql\";\n\nexport const fetchUserStats = () => async dispatch => {\n  const data = `query {\n    userStats{\n      userCount\n      usersLastMonth{\n        data{\n          day{\n            day\n            month\n            year\n          }\n          count\n        }\n      }\n      usersLastYear{\n        data{\n          year\n          month\n          count\n        }\n      }\n      userGenderStats{\n        value\n        count\n      }\n    }\n  }`;\n\n  setTokenInHeader();\n\n  const response = await fetchFromServer(url, \"post\", data);\n\n\n  if (response.data.errors) {\n    return response.data.errors[0].extensions.code;\n  } else {\n    dispatch({\n      type: USERS_STATS,\n      payload: response.data.data.userStats\n    });\n  }\n\n  return response.data.data.userStats;\n};\n"]},"metadata":{},"sourceType":"module"}