{"ast":null,"code":"import _regeneratorRuntime from \"/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/src/components/dashboard/views/MeetingView.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport { KPICard } from \"../util/KPICard\";\nimport TotalGraph from \"../charts/graph/TotalGraph\";\nimport LastMonthBar from \"../charts/bar/LastMonthBar\";\nimport LastYearBar from \"../charts/bar/LastYearBar\";\nimport { fetchMeetingStats } from \"../../../redux/actions/KPI/MeetingStatsAction\";\nimport { getCurrentTime } from \"../../../util/Date\";\n\nvar GroupView =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GroupView, _Component);\n\n  function GroupView(props) {\n    var _this;\n\n    _classCallCheck(this, GroupView);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(GroupView).call(this, props));\n    _this.state = {\n      meetingTotal: \"\",\n      meetingsToday: \"\",\n      meetingsTodayText: \"\",\n      meetingMonth: \"\",\n      meetingYear: \"\",\n      meetingsLastMonth: \"\",\n      meetingsLastYear: \"\",\n      lastUpdate: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(GroupView, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.fetchData();\n      setInterval(\n      /*#__PURE__*/\n      _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this2.fetchData();\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      })), 10000000);\n    }\n  }, {\n    key: \"fetchData\",\n    value: function () {\n      var _fetchData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var meetingStats, lastMonth, lastUpdatedAt, meetingMonthCount, meetingYearCount;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.props.fetchMeetingStats();\n\n              case 2:\n                meetingStats = this.props.meetingStats;\n                lastMonth = meetingStats.meetingsLastMonth.data;\n                lastUpdatedAt = getCurrentTime();\n                meetingMonthCount = 0;\n                meetingYearCount = 0;\n                lastMonth.forEach(function (element) {\n                  return meetingMonthCount += element.count;\n                });\n                meetingStats.meetingsLastYear.data.forEach(function (element) {\n                  return meetingYearCount += element.count;\n                });\n                this.setState({\n                  meetingTotal: meetingStats.meetingTotal,\n                  meetingsToday: lastMonth[lastMonth.length - 1].count,\n                  meetingsTodayText: lastMonth[lastMonth.length - 1].day.day + \"/\" + lastMonth[lastMonth.length - 1].day.month,\n                  meetingMonth: meetingMonthCount,\n                  meetingYear: meetingYearCount,\n                  meetingsLastMonth: lastMonth,\n                  meetingsLastYear: meetingStats.meetingsLastYear.data,\n                  lastUpdate: lastUpdatedAt\n                });\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function fetchData() {\n        return _fetchData.apply(this, arguments);\n      }\n\n      return fetchData;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"wrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Sidebar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        id: \"main-panel\",\n        className: \"main-panel\",\n        ref: \"mainPanel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Header, {\n        title: \"Meetings\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: 3,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(KPICard, {\n        bigIcon: React.createElement(\"i\", {\n          className: \"pe-7s-graph1 text-danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }),\n        statsText: \"Total Meetings\",\n        statsValue: this.state.meetingTotal,\n        statsIcon: React.createElement(\"i\", {\n          className: \"fa fa-refresh\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        }),\n        statsIconText: \"Last Update: \".concat(this.state.lastUpdate),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      })), React.createElement(Col, {\n        lg: 3,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(KPICard, {\n        bigIcon: React.createElement(\"i\", {\n          className: \"pe-7s-users text-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }),\n        statsText: \"Meetings \" + this.state.meetingsTodayText,\n        statsValue: this.state.meetingsToday,\n        statsIcon: React.createElement(\"i\", {\n          className: \"fa fa-clock-o\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }),\n        statsIconText: \"Last Update: \".concat(this.state.lastUpdate),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })), React.createElement(Col, {\n        lg: 3,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(KPICard, {\n        bigIcon: React.createElement(\"i\", {\n          className: \"pe-7s-users text-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }),\n        statsText: \"This Month\",\n        statsValue: this.state.meetingMonth,\n        statsIcon: React.createElement(\"i\", {\n          className: \"fa fa-refresh\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }),\n        statsIconText: \"Last Update: \".concat(this.state.lastUpdate),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      })), React.createElement(Col, {\n        lg: 3,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(KPICard, {\n        bigIcon: React.createElement(\"i\", {\n          className: \"pe-7s-users text-info\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }),\n        statsText: \"Last Year\",\n        statsValue: this.state.meetingYear,\n        statsIcon: React.createElement(\"i\", {\n          className: \"fa fa-refresh\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }),\n        statsIconText: \"Last Update: \".concat(this.state.lastUpdate),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: 4,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(TotalGraph, {\n        title: \"Total Meetings\",\n        stroke: \"#228b22\",\n        data: this.state.meetingsLastYear,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }))), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Col, {\n        lg: 4,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(LastMonthBar, {\n        title: \"Meetings Last Month\",\n        color: \"#228b22\",\n        data: this.state.meetingsLastMonth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      })), React.createElement(Col, {\n        lg: 4,\n        sm: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(LastYearBar, {\n        title: \"Meetings Last Year\",\n        color: \"#ff0000\",\n        data: this.state.meetingsLastYear,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return GroupView;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    meetingStats: state.KPI.meetingStats\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchMeetingStats: fetchMeetingStats\n})(GroupView);","map":{"version":3,"sources":["/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/src/components/dashboard/views/MeetingView.js"],"names":["React","Component","connect","Grid","Row","Col","KPICard","TotalGraph","LastMonthBar","LastYearBar","fetchMeetingStats","getCurrentTime","GroupView","props","state","meetingTotal","meetingsToday","meetingsTodayText","meetingMonth","meetingYear","meetingsLastMonth","meetingsLastYear","lastUpdate","fetchData","setInterval","meetingStats","lastMonth","data","lastUpdatedAt","meetingMonthCount","meetingYearCount","forEach","element","count","setState","length","day","month","mapStateToProps","KPI"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport { KPICard } from \"../util/KPICard\";\n\nimport TotalGraph from \"../charts/graph/TotalGraph\";\n\nimport LastMonthBar from \"../charts/bar/LastMonthBar\";\nimport LastYearBar from \"../charts/bar/LastYearBar\";\n\nimport { fetchMeetingStats } from \"../../../redux/actions/KPI/MeetingStatsAction\";\nimport { getCurrentTime } from \"../../../util/Date\";\n\nclass GroupView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      meetingTotal: \"\",\n      meetingsToday: \"\",\n      meetingsTodayText: \"\",\n      meetingMonth: \"\",\n      meetingYear: \"\",\n      meetingsLastMonth: \"\",\n      meetingsLastYear: \"\",\n      lastUpdate: \"\"\n    };\n  }\n  componentDidMount() {\n    this.fetchData();\n\n    setInterval(async () => {\n      this.fetchData();\n    }, 10000000);\n  }\n\n  async fetchData() {\n    await this.props.fetchMeetingStats();\n\n    const meetingStats = this.props.meetingStats;\n    const lastMonth = meetingStats.meetingsLastMonth.data;\n    let lastUpdatedAt = getCurrentTime();\n\n    let meetingMonthCount = 0;\n    let meetingYearCount = 0;\n\n    lastMonth.forEach(element => (meetingMonthCount += element.count));\n    meetingStats.meetingsLastYear.data.forEach(\n      element => (meetingYearCount += element.count)\n    );\n\n    this.setState({\n      meetingTotal: meetingStats.meetingTotal,\n      meetingsToday: lastMonth[lastMonth.length - 1].count,\n      meetingsTodayText:\n        lastMonth[lastMonth.length - 1].day.day +\n        \"/\" +\n        lastMonth[lastMonth.length - 1].day.month,\n      meetingMonth: meetingMonthCount,\n      meetingYear: meetingYearCount,\n      meetingsLastMonth: lastMonth,\n      meetingsLastYear: meetingStats.meetingsLastYear.data,\n      lastUpdate: lastUpdatedAt\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"wrapper\">\n      <Sidebar />\n      <div id=\"main-panel\" className=\"main-panel\" ref=\"mainPanel\">\n          <Header title=\"Meetings\" />\n      <div className=\"content\">\n        <Grid fluid>\n          <Row>\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-graph1 text-danger\" />}\n                statsText=\"Total Meetings\"\n                statsValue={this.state.meetingTotal}\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText={`Last Update: ${this.state.lastUpdate}`}\n              />\n            </Col>\n\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-users text-info\" />}\n                statsText={\"Meetings \" + this.state.meetingsTodayText}\n                statsValue={this.state.meetingsToday}\n                statsIcon={<i className=\"fa fa-clock-o\" />}\n                statsIconText={`Last Update: ${this.state.lastUpdate}`}\n              />\n            </Col>\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-users text-info\" />}\n                statsText=\"This Month\"\n                statsValue={this.state.meetingMonth}\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText={`Last Update: ${this.state.lastUpdate}`}\n              />\n            </Col>\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-users text-info\" />}\n                statsText=\"Last Year\"\n                statsValue={this.state.meetingYear}\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText={`Last Update: ${this.state.lastUpdate}`}\n              />\n            </Col>\n          </Row>\n\n          <Row>\n            <Col lg={4} sm={6}>\n              <TotalGraph\n                title=\"Total Meetings\"\n                stroke=\"#228b22\"\n                data={this.state.meetingsLastYear}\n              />\n            </Col>\n          </Row>\n          <Row>\n            <Col lg={4} sm={6}>\n              <LastMonthBar\n                title=\"Meetings Last Month\"\n                color=\"#228b22\"\n                data={this.state.meetingsLastMonth}\n              />\n            </Col>\n\n            <Col lg={4} sm={6}>\n              <LastYearBar\n                title=\"Meetings Last Year\"\n                color=\"#ff0000\"\n                data={this.state.meetingsLastYear}\n              />\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n      </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    meetingStats: state.KPI.meetingStats\n  };\n};\n\nexport default connect(mapStateToProps, { fetchMeetingStats })(GroupView);\n"]},"metadata":{},"sourceType":"module"}