{"ast":null,"code":"import { SET_CURRENT_USER } from \"../ActionTypes\";\nimport axios from \"axios\";\nimport { setTokenInHeader } from \"../../../security/Token\";\nconst url = \"http://localhost:4000/graphql\";\nexport const setCurrentUser = () => async dispatch => {\n  const data = \"query{\\n        me\\n      }\";\n  setTokenInHeader();\n  let response;\n\n  try {\n    response = await axios({\n      url,\n      method: \"post\",\n      data: {\n        query: data\n      }\n    }); // Flag for error in DB?\n\n    console.log(response);\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: response.data.data\n    });\n    return response; // Need better handling of network errors here\n  } catch (err) {\n    console.log(err);\n    return \"Connection problem\";\n  }\n};","map":{"version":3,"sources":["/home/nbryn/Desktop/jamiipay/Projects/jamiipay-web-dashboard/presentation/src/redux/actions/User/SetUserAction.js"],"names":["SET_CURRENT_USER","axios","setTokenInHeader","url","setCurrentUser","dispatch","data","response","method","query","console","log","type","payload","err"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,gBAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAASC,gBAAT,QAAiC,yBAAjC;AAEA,MAAMC,GAAG,GACT,+BADA;AAGA,OAAO,MAAMC,cAAc,GAAG,MAAM,MAAMC,QAAN,IAAkB;AACpD,QAAMC,IAAI,gCAAV;AAIAJ,EAAAA,gBAAgB;AAEhB,MAAIK,QAAJ;;AAEA,MAAI;AACFA,IAAAA,QAAQ,GAAG,MAAMN,KAAK,CAAC;AACrBE,MAAAA,GADqB;AAErBK,MAAAA,MAAM,EAAE,MAFa;AAGrBF,MAAAA,IAAI,EAAE;AACJG,QAAAA,KAAK,EAAEH;AADH;AAHe,KAAD,CAAtB,CADE,CAUF;;AAEAI,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACAF,IAAAA,QAAQ,CAAC;AACPO,MAAAA,IAAI,EAAEZ,gBADC;AAEPa,MAAAA,OAAO,EAAEN,QAAQ,CAACD,IAAT,CAAcA;AAFhB,KAAD,CAAR;AAKA,WAAOC,QAAP,CAlBE,CAoBF;AACD,GArBD,CAqBE,OAAOO,GAAP,EAAY;AACZJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACA,WAAO,oBAAP;AACD;AACF,CAlCM","sourcesContent":["import { SET_CURRENT_USER } from \"../ActionTypes\";\nimport axios from \"axios\";\n\nimport { setTokenInHeader } from \"../../../security/Token\";\n\nconst url =\n\"http://localhost:4000/graphql\";\n\nexport const setCurrentUser = () => async dispatch => {\n  const data = `query{\n        me\n      }`;\n\n  setTokenInHeader();\n\n  let response;\n\n  try {\n    response = await axios({\n      url,\n      method: \"post\",\n      data: {\n        query: data\n      }\n    });\n\n\n    // Flag for error in DB?\n\n    console.log(response);\n    dispatch({\n      type: SET_CURRENT_USER,\n      payload: response.data.data\n    });\n\n    return response;\n\n    // Need better handling of network errors here\n  } catch (err) {\n    console.log(err);\n    return \"Connection problem\";\n  }\n};\n"]},"metadata":{},"sourceType":"module"}