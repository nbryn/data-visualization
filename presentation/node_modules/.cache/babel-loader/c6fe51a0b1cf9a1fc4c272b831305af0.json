{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar graphql_1 = require(\"graphql\");\n\nvar isEmptyObject_1 = require(\"../isEmptyObject\");\n\nvar visitSchema_1 = require(\"./visitSchema\");\n\nvar schemaRecreation_1 = require(\"../stitching/schemaRecreation\");\n\nvar TransformRootFields =\n/** @class */\nfunction () {\n  function TransformRootFields(transform) {\n    this.transform = transform;\n  }\n\n  TransformRootFields.prototype.transformSchema = function (originalSchema) {\n    var _a;\n\n    var _this = this;\n\n    return visitSchema_1.visitSchema(originalSchema, (_a = {}, _a[visitSchema_1.VisitSchemaKind.QUERY] = function (type) {\n      return transformFields(type, function (fieldName, field) {\n        return _this.transform('Query', fieldName, field);\n      });\n    }, _a[visitSchema_1.VisitSchemaKind.MUTATION] = function (type) {\n      return transformFields(type, function (fieldName, field) {\n        return _this.transform('Mutation', fieldName, field);\n      });\n    }, _a[visitSchema_1.VisitSchemaKind.SUBSCRIPTION] = function (type) {\n      return transformFields(type, function (fieldName, field) {\n        return _this.transform('Subscription', fieldName, field);\n      });\n    }, _a));\n  };\n\n  return TransformRootFields;\n}();\n\nexports.default = TransformRootFields;\n\nfunction transformFields(type, transformer) {\n  var resolveType = schemaRecreation_1.createResolveType(function (name, originalType) {\n    return originalType;\n  });\n  var fields = type.getFields();\n  var newFields = {};\n  Object.keys(fields).forEach(function (fieldName) {\n    var field = fields[fieldName];\n    var newField = transformer(fieldName, field);\n\n    if (typeof newField === 'undefined') {\n      newFields[fieldName] = schemaRecreation_1.fieldToFieldConfig(field, resolveType, true);\n    } else if (newField !== null) {\n      if (newField.name) {\n        newFields[newField.name] = newField.field;\n      } else {\n        newFields[fieldName] = newField;\n      }\n    }\n  });\n\n  if (isEmptyObject_1.default(newFields)) {\n    return null;\n  } else {\n    return new graphql_1.GraphQLObjectType({\n      name: type.name,\n      description: type.description,\n      astNode: type.astNode,\n      fields: newFields\n    });\n  }\n}","map":null,"metadata":{},"sourceType":"script"}