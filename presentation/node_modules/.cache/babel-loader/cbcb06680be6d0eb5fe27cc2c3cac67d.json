{"ast":null,"code":"import _regeneratorRuntime from \"/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { ENGAGEMENT_STATS } from \"../ActionTypes\";\nimport { fetchFromServer } from \"../Fetch\";\nexport var fetchEngagementStats = function fetchEngagementStats() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var data, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                data = \"query{\\n    engagementStats{\\n      groupEngagement{\\n      activeGroups\\n      groupActivity {\\n        value\\n        count\\n    }\\n    }\\n  }\\n  }\";\n                _context.next = 3;\n                return fetchFromServer(\"post\", data);\n\n              case 3:\n                response = _context.sent;\n                dispatch({\n                  type: ENGAGEMENT_STATS,\n                  payload: response.data.data.engagementStats\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/src/redux/actions/kpi/EngagementStatsAction.js"],"names":["ENGAGEMENT_STATS","fetchFromServer","fetchEngagementStats","dispatch","data","response","type","payload","engagementStats"],"mappings":";;AAAA,SAASA,gBAAT,QAAiC,gBAAjC;AACA,SAASC,eAAT,QAAgC,UAAhC;AAEA,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAM,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAClCC,gBAAAA,IADkC;AAAA;AAAA,uBAajBH,eAAe,CAAC,MAAD,EAASG,IAAT,CAbE;;AAAA;AAalCC,gBAAAA,QAbkC;AAexCF,gBAAAA,QAAQ,CAAC;AACPG,kBAAAA,IAAI,EAAEN,gBADC;AAEPO,kBAAAA,OAAO,EAAEF,QAAQ,CAACD,IAAT,CAAcA,IAAd,CAAmBI;AAFrB,iBAAD,CAAR;;AAfwC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA7B","sourcesContent":["import { ENGAGEMENT_STATS } from \"../ActionTypes\";\nimport { fetchFromServer } from \"../Fetch\";\n\nexport const fetchEngagementStats = () => async dispatch => {\n  const data = `query{\n    engagementStats{\n      groupEngagement{\n      activeGroups\n      groupActivity {\n        value\n        count\n    }\n    }\n  }\n  }`;\n\n  const response = await fetchFromServer(\"post\", data);\n\n  dispatch({\n    type: ENGAGEMENT_STATS,\n    payload: response.data.data.engagementStats\n  });\n};\n"]},"metadata":{},"sourceType":"module"}