{"ast":null,"code":"var _jsxFileName = \"/home/nbryn/Desktop/JamiiPay/jamiipay-web-dashboard/presentation/src/components/dashboard/charts/graph/TotalGraph.js\";\nimport React, { Component } from \"react\";\nimport GraphChart from \"./GraphChart.js\";\n\nclass TotalGraph extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [{\n        name: \"\",\n        value: \"\"\n      }, {\n        name: \"\",\n        value: \"\"\n      }, {\n        name: \"\",\n        value: \"\"\n      }, {\n        name: \"\",\n        value: \"\"\n      }, {\n        name: \"\",\n        value: \"\"\n      }, {\n        name: \"\",\n        value: \"\"\n      }, {\n        name: \"\",\n        value: \"\"\n      }, {\n        name: \"\",\n        value: \"\"\n      }, {\n        name: \"\",\n        value: \"\"\n      }]\n    };\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (this.props.data !== prevProps.data) {\n      const data = this.props.data;\n      let total = 0;\n      const newState = data.map(element => {\n        total += element.count;\n        return {\n          name: element.month,\n          value: total\n        };\n      });\n      this.setState({\n        data: newState\n      });\n    }\n  }\n\n  render() {\n    const title = this.props.title;\n    const stroke = this.props.stroke;\n    const yLabel = {\n      value: \"Users\",\n      angle: -90,\n      position: \"insideLeft\"\n    };\n    const xLabel = {\n      value: \"Months\",\n      position: \"center\",\n      dy: 10\n    };\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(GraphChart, {\n      title: title,\n      data: this.state.data,\n      xLabel: xLabel,\n      yLabel: yLabel,\n      stroke: stroke,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default TotalGraph;","map":{"version":3,"sources":["/home/nbryn/Desktop/JamiiPay/jamiipay-web-dashboard/presentation/src/components/dashboard/charts/graph/TotalGraph.js"],"names":["React","Component","GraphChart","TotalGraph","constructor","props","state","data","name","value","componentDidUpdate","prevProps","total","newState","map","element","count","month","setState","render","title","stroke","yLabel","angle","position","xLabel","dy"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,iBAAvB;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AACjCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,CACJ;AACEC,QAAAA,IAAI,EAAE,EADR;AAEEC,QAAAA,KAAK,EAAE;AAFT,OADI,EAKJ;AACED,QAAAA,IAAI,EAAE,EADR;AAEEC,QAAAA,KAAK,EAAE;AAFT,OALI,EASJ;AACED,QAAAA,IAAI,EAAE,EADR;AAEEC,QAAAA,KAAK,EAAE;AAFT,OATI,EAaJ;AACED,QAAAA,IAAI,EAAE,EADR;AAEEC,QAAAA,KAAK,EAAE;AAFT,OAbI,EAiBJ;AACED,QAAAA,IAAI,EAAE,EADR;AAEEC,QAAAA,KAAK,EAAE;AAFT,OAjBI,EAqBJ;AACED,QAAAA,IAAI,EAAE,EADR;AAEEC,QAAAA,KAAK,EAAE;AAFT,OArBI,EAyBJ;AACED,QAAAA,IAAI,EAAE,EADR;AAEEC,QAAAA,KAAK,EAAE;AAFT,OAzBI,EA6BJ;AACED,QAAAA,IAAI,EAAE,EADR;AAEEC,QAAAA,KAAK,EAAE;AAFT,OA7BI,EAiCJ;AACED,QAAAA,IAAI,EAAE,EADR;AAEEC,QAAAA,KAAK,EAAE;AAFT,OAjCI;AADK,KAAb;AAwCD;;AAED,QAAMC,kBAAN,CAAyBC,SAAzB,EAAoC;AAClC,QAAI,KAAKN,KAAL,CAAWE,IAAX,KAAoBI,SAAS,CAACJ,IAAlC,EAAwC;AACtC,YAAMA,IAAI,GAAG,KAAKF,KAAL,CAAWE,IAAxB;AAEA,UAAIK,KAAK,GAAG,CAAZ;AACA,YAAMC,QAAQ,GAAGN,IAAI,CAACO,GAAL,CAASC,OAAO,IAAI;AACnCH,QAAAA,KAAK,IAAIG,OAAO,CAACC,KAAjB;AACA,eAAO;AACLR,UAAAA,IAAI,EAAEO,OAAO,CAACE,KADT;AAELR,UAAAA,KAAK,EAAEG;AAFF,SAAP;AAID,OANgB,CAAjB;AAQA,WAAKM,QAAL,CAAc;AAAEX,QAAAA,IAAI,EAAEM;AAAR,OAAd;AACD;AACF;;AACDM,EAAAA,MAAM,GAAG;AACP,UAAMC,KAAK,GAAG,KAAKf,KAAL,CAAWe,KAAzB;AACA,UAAMC,MAAM,GAAG,KAAKhB,KAAL,CAAWgB,MAA1B;AACA,UAAMC,MAAM,GAAG;AAAEb,MAAAA,KAAK,EAAE,OAAT;AAAkBc,MAAAA,KAAK,EAAE,CAAC,EAA1B;AAA8BC,MAAAA,QAAQ,EAAE;AAAxC,KAAf;AACA,UAAMC,MAAM,GAAG;AAAEhB,MAAAA,KAAK,EAAE,QAAT;AAAmBe,MAAAA,QAAQ,EAAE,QAA7B;AAAuCE,MAAAA,EAAE,EAAE;AAA3C,KAAf;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AACE,MAAA,KAAK,EAAEN,KADT;AAEE,MAAA,IAAI,EAAE,KAAKd,KAAL,CAAWC,IAFnB;AAGE,MAAA,MAAM,EAAEkB,MAHV;AAIE,MAAA,MAAM,EAAEH,MAJV;AAKE,MAAA,MAAM,EAAED,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAWD;;AA/EgC;;AAkFnC,eAAelB,UAAf","sourcesContent":["import React, { Component } from \"react\";\nimport GraphChart from \"./GraphChart.js\";\n\nclass TotalGraph extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [\n        {\n          name: \"\",\n          value: \"\"\n        },\n        {\n          name: \"\",\n          value: \"\"\n        },\n        {\n          name: \"\",\n          value: \"\"\n        },\n        {\n          name: \"\",\n          value: \"\"\n        },\n        {\n          name: \"\",\n          value: \"\"\n        },\n        {\n          name: \"\",\n          value: \"\"\n        },\n        {\n          name: \"\",\n          value: \"\"\n        },\n        {\n          name: \"\",\n          value: \"\"\n        },\n        {\n          name: \"\",\n          value: \"\"\n        }\n      ]\n    };\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (this.props.data !== prevProps.data) {\n      const data = this.props.data;\n\n      let total = 0;\n      const newState = data.map(element => {\n        total += element.count;\n        return {\n          name: element.month,\n          value: total\n        };\n      });\n\n      this.setState({ data: newState });\n    }\n  }\n  render() {\n    const title = this.props.title;\n    const stroke = this.props.stroke;\n    const yLabel = { value: \"Users\", angle: -90, position: \"insideLeft\" };\n    const xLabel = { value: \"Months\", position: \"center\", dy: 10 };\n\n    return (\n      <div>\n        <GraphChart\n          title={title}\n          data={this.state.data}\n          xLabel={xLabel}\n          yLabel={yLabel}\n          stroke={stroke}\n        />\n      </div>\n    );\n  }\n}\n\nexport default TotalGraph;\n"]},"metadata":{},"sourceType":"module"}