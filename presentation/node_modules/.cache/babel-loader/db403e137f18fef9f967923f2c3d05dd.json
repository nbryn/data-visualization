{"ast":null,"code":"import axios from \"axios\";\nimport { setTokenInLocalStorage } from \"../../../security/Token\";\nconst url = \"http://localhost:4000/graphql\";\nexport const login = (username, password, history) => async dispatch => {\n  const data = \"mutation signin {\\n    data:\\n     signin(input: {\\n       username: \".concat(username, \"\\n       password: \").concat(password, \"\\n     })  {\\n       ... on Login {\\n        email \\n       }\\n     }\\n }\");\n  let response;\n\n  try {\n    response = await axios({\n      url,\n      method: \"post\",\n      data: {\n        query: data\n      }\n    });\n    console.log(response); // Flag for error in DB?\n\n    const error = response.data.data.signin.result;\n\n    if (error) {\n      if (error[0].errors[0] === \"NO_SEARCH\" || error[0].errors[0] === \"TO_SHORT\") {\n        return \"Wrong Email/Username\";\n      } else {\n        return \"Wrong Password\";\n      }\n    } else {\n      setTokenInLocalStorage(response);\n      history.push(\"/dashboard\");\n    } // Need better handling of network errors here\n\n  } catch (err) {\n    console.log(err);\n    return \"Connection problem\";\n  }\n};","map":{"version":3,"sources":["/home/nbryn/Desktop/jamiipay/Projects/jamiipay-web-dashboard/presentation/src/redux/actions/User/LoginAction.js"],"names":["axios","setTokenInLocalStorage","url","login","username","password","history","dispatch","data","response","method","query","console","log","error","signin","result","errors","push","err"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,sBAAT,QAAuC,yBAAvC;AAEA,MAAMC,GAAG,GACP,+BADF;AAGA,OAAO,MAAMC,KAAK,GAAG,CAACC,QAAD,EAAWC,QAAX,EAAqBC,OAArB,KAAiC,MAAMC,QAAN,IAAkB;AACtE,QAAMC,IAAI,kFAGOJ,QAHP,gCAIOC,QAJP,8EAAV;AAYA,MAAII,QAAJ;;AAEA,MAAI;AACFA,IAAAA,QAAQ,GAAG,MAAMT,KAAK,CAAC;AACrBE,MAAAA,GADqB;AAErBQ,MAAAA,MAAM,EAAE,MAFa;AAGrBF,MAAAA,IAAI,EAAE;AACJG,QAAAA,KAAK,EAAEH;AADH;AAHe,KAAD,CAAtB;AAQAI,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ,EATE,CAWF;;AACA,UAAMK,KAAK,GAAGL,QAAQ,CAACD,IAAT,CAAcA,IAAd,CAAmBO,MAAnB,CAA0BC,MAAxC;;AACA,QAAIF,KAAJ,EAAW;AACT,UAAIA,KAAK,CAAC,CAAD,CAAL,CAASG,MAAT,CAAgB,CAAhB,MAAuB,WAAvB,IAAsCH,KAAK,CAAC,CAAD,CAAL,CAASG,MAAT,CAAgB,CAAhB,MAAuB,UAAjE,EAA6E;AAC7E,eAAO,sBAAP;AACC,OAFD,MAEO;AACL,eAAO,gBAAP;AACD;AACF,KAND,MAMO;AACLhB,MAAAA,sBAAsB,CAACQ,QAAD,CAAtB;AAEAH,MAAAA,OAAO,CAACY,IAAR,CAAa,YAAb;AACD,KAvBC,CAyBF;;AACD,GA1BD,CA0BE,OAAOC,GAAP,EAAY;AACZP,IAAAA,OAAO,CAACC,GAAR,CAAYM,GAAZ;AACA,WAAO,oBAAP;AACD;AACF,CA7CM","sourcesContent":["import axios from \"axios\";\n\nimport { setTokenInLocalStorage } from \"../../../security/Token\";\n\nconst url =\n  \"http://localhost:4000/graphql\";\n\nexport const login = (username, password, history) => async dispatch => {\n  const data = `mutation signin {\n    data:\n     signin(input: {\n       username: ${username}\n       password: ${password}\n     })  {\n       ... on Login {\n        email \n       }\n     }\n }`;\n\n  let response;\n\n  try {\n    response = await axios({\n      url,\n      method: \"post\",\n      data: {\n        query: data\n      }\n    });\n\n    console.log(response);\n\n    // Flag for error in DB?\n    const error = response.data.data.signin.result;\n    if (error) {\n      if (error[0].errors[0] === \"NO_SEARCH\" || error[0].errors[0] === \"TO_SHORT\") {\n      return \"Wrong Email/Username\";\n      } else {\n        return \"Wrong Password\"\n      }\n    } else {\n      setTokenInLocalStorage(response);\n\n      history.push(\"/dashboard\");\n    }\n\n    // Need better handling of network errors here\n  } catch (err) {\n    console.log(err);\n    return \"Connection problem\";\n  }\n};\n"]},"metadata":{},"sourceType":"module"}