{"ast":null,"code":"import _regeneratorRuntime from \"/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { SET_CURRENT_USER } from \"../ActionTypes\";\nimport { fetchFromServer } from \"../Fetch\";\nimport { setTokenInHeader } from \"../../../security/Token\";\nexport var setCurrentUser = function setCurrentUser() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var data, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                data = \"query{\\n        me\\n      }\";\n                setTokenInHeader();\n                _context.next = 4;\n                return fetchFromServer(\"post\", data);\n\n              case 4:\n                response = _context.sent;\n                dispatch({\n                  type: SET_CURRENT_USER,\n                  payload: response.data.data\n                });\n                return _context.abrupt(\"return\", response);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/home/nbryn/Desktop/jamiipay/jamiipay-web-dashboard/presentation/src/redux/actions/user/SetUserAction.js"],"names":["SET_CURRENT_USER","fetchFromServer","setTokenInHeader","setCurrentUser","dispatch","data","response","type","payload"],"mappings":";;AAAA,SAASA,gBAAT,QAAiC,gBAAjC;AACA,SAASC,eAAT,QAAgC,UAAhC;AACA,SAASC,gBAAT,QAAiC,yBAAjC;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAM,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5BC,gBAAAA,IAD4B;AAKlCH,gBAAAA,gBAAgB;AALkB;AAAA,uBAOXD,eAAe,CAAC,MAAD,EAASI,IAAT,CAPJ;;AAAA;AAO5BC,gBAAAA,QAP4B;AASlCF,gBAAAA,QAAQ,CAAC;AACPG,kBAAAA,IAAI,EAAEP,gBADC;AAEPQ,kBAAAA,OAAO,EAAEF,QAAQ,CAACD,IAAT,CAAcA;AAFhB,iBAAD,CAAR;AATkC,iDAc3BC,QAd2B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB","sourcesContent":["import { SET_CURRENT_USER } from \"../ActionTypes\";\nimport { fetchFromServer } from \"../Fetch\";\nimport { setTokenInHeader } from \"../../../security/Token\";\n\nexport const setCurrentUser = () => async dispatch => {\n  const data = `query{\n        me\n      }`;\n\n  setTokenInHeader();\n\n  const response = await fetchFromServer(\"post\", data);\n\n  dispatch({\n    type: SET_CURRENT_USER,\n    payload: response.data.data\n  });\n\n  return response;\n};\n"]},"metadata":{},"sourceType":"module"}