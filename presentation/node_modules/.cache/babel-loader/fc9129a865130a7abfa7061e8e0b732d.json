{"ast":null,"code":"var _jsxFileName = \"/home/nbryn/Desktop/JamiiPay/jamiipay-web-dashboard/presentation/src/components/dashboard/views/MeetingView.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport { KPICard } from \"../util/KPICard\";\nimport TotalGraph from \"../charts/graph/TotalGraph\";\nimport SizeChart from \"../charts/circle/SizeChart\";\nimport LastMonthBar from \"../charts/bar/LastMonthBar\";\nimport LastYearBar from \"../charts/bar/LastYearBar\";\nimport { fetchMeetingStats } from \"../../../redux/actions/KPI/MeetingStatsAction\";\nimport { getCurrentTime } from \"../../../util/Date\";\n\nclass GroupView extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      meetingTotal: \"\",\n      meetingsToday: \"\",\n      meetingMonth: \"\",\n      meetingYear: \"\",\n      meetingsLastMonth: \"\",\n      meetingsLastYear: \"\",\n      lastUpdate: \"\"\n    };\n    this.fetchData = this.fetchData.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchData();\n    setInterval(async () => {\n      this.fetchData();\n    }, 10000000);\n  }\n\n  async fetchData() {\n    await this.props.fetchMeetingStats();\n    const meetingStats = this.props.meetingStats;\n    let lastUpdatedAt = getCurrentTime();\n    let meetingMonthCount = 0;\n    let meetingYearCount = 0;\n    meetingStats.meetingsLastMonth.data.forEach(element => meetingMonthCount += element.count);\n    meetingStats.meetingsLastYear.data.forEach(element => meetingYearCount += element.count);\n    this.setState({\n      meetingTotal: meetingStats.meetingTotal,\n      meetingToday: meetingStats.meetingsLastMonth.data[meetingStats.meetingsLastMonth.data.length - 1].count,\n      meetingMonth: meetingMonthCount,\n      meetingYear: meetingYearCount,\n      meetingsLastMonth: meetingStats.meetingsLastMonth.data,\n      meetingsLastYear: meetingStats.meetingsLastYear.data,\n      lastUpdate: lastUpdatedAt\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: \"pe-7s-graph1 text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }),\n      statsText: \"Total Meetings\",\n      statsValue: this.state.meetingTotal,\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-refresh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }),\n      statsIconText: \"Last Update: \".concat(this.state.lastUpdate),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: \"pe-7s-users text-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }),\n      statsText: \"Meetings Today\",\n      statsValue: this.state.meetingsToday,\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-clock-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }),\n      statsIconText: \"Last Update: \".concat(this.state.lastUpdate),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: \"pe-7s-users text-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }),\n      statsText: \"This Month\",\n      statsValue: this.state.meetingMonth,\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-refresh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }),\n      statsIconText: \"Last Update: \".concat(this.state.lastUpdate),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 3,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(KPICard, {\n      bigIcon: React.createElement(\"i\", {\n        className: \"pe-7s-users text-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }),\n      statsText: \"This Year\",\n      statsValue: this.state.meetingYear,\n      statsIcon: React.createElement(\"i\", {\n        className: \"fa fa-refresh\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }),\n      statsIconText: \"Last Update: \".concat(this.state.lastUpdate),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(TotalGraph, {\n      title: \"Total Meetings\",\n      stroke: \"#228b22\",\n      data: this.state.meetingsLastYear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    })), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(LastMonthBar, {\n      title: \"Meetings Last Month\",\n      color: \"#228b22\",\n      data: this.state.meetingsLastMonth,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })), React.createElement(Col, {\n      lg: 4,\n      sm: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(LastYearBar, {\n      title: \"Meetings Last Year\",\n      color: \"#ff0000\",\n      data: this.state.meetingsLastYear,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    meetingStats: state.KPI.meetingStats\n  };\n};\n\nexport default connect(mapStateToProps, {\n  fetchMeetingStats\n})(GroupView);","map":{"version":3,"sources":["/home/nbryn/Desktop/JamiiPay/jamiipay-web-dashboard/presentation/src/components/dashboard/views/MeetingView.js"],"names":["React","Component","connect","Grid","Row","Col","KPICard","TotalGraph","SizeChart","LastMonthBar","LastYearBar","fetchMeetingStats","getCurrentTime","GroupView","constructor","props","state","meetingTotal","meetingsToday","meetingMonth","meetingYear","meetingsLastMonth","meetingsLastYear","lastUpdate","fetchData","bind","componentDidMount","setInterval","meetingStats","lastUpdatedAt","meetingMonthCount","meetingYearCount","data","forEach","element","count","setState","meetingToday","length","render","mapStateToProps","KPI"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid, Row, Col } from \"react-bootstrap\";\nimport { KPICard } from \"../util/KPICard\";\n\nimport TotalGraph from \"../charts/graph/TotalGraph\";\nimport SizeChart from \"../charts/circle/SizeChart\";\n\nimport LastMonthBar from \"../charts/bar/LastMonthBar\";\nimport LastYearBar from \"../charts/bar/LastYearBar\";\n\nimport { fetchMeetingStats } from \"../../../redux/actions/KPI/MeetingStatsAction\";\nimport { getCurrentTime } from \"../../../util/Date\";\n\nclass GroupView extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      meetingTotal: \"\",\n      meetingsToday: \"\",\n      meetingMonth: \"\",\n      meetingYear: \"\",\n      meetingsLastMonth: \"\",\n      meetingsLastYear: \"\",\n      lastUpdate: \"\"\n    };\n    this.fetchData = this.fetchData.bind(this);\n  }\n  componentDidMount() {\n    this.fetchData();\n\n    setInterval(async () => {\n      this.fetchData();\n    }, 10000000);\n  }\n\n  async fetchData() {\n    await this.props.fetchMeetingStats();\n\n    const meetingStats = this.props.meetingStats;\n    let lastUpdatedAt = getCurrentTime();\n\n    let meetingMonthCount = 0;\n    let meetingYearCount = 0;\n\n    meetingStats.meetingsLastMonth.data.forEach(\n      element => (meetingMonthCount += element.count)\n    );\n    meetingStats.meetingsLastYear.data.forEach(\n      element => (meetingYearCount += element.count)\n    );\n\n    this.setState({\n      meetingTotal: meetingStats.meetingTotal,\n      meetingToday:\n        meetingStats.meetingsLastMonth.data[\n          meetingStats.meetingsLastMonth.data.length - 1\n        ].count,\n      meetingMonth: meetingMonthCount,\n      meetingYear: meetingYearCount,\n      meetingsLastMonth: meetingStats.meetingsLastMonth.data,\n      meetingsLastYear: meetingStats.meetingsLastYear.data,\n      lastUpdate: lastUpdatedAt\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"content\">\n        <Grid fluid>\n          <Row>\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-graph1 text-danger\" />}\n                statsText=\"Total Meetings\"\n                statsValue={this.state.meetingTotal}\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText={`Last Update: ${this.state.lastUpdate}`}\n              />\n            </Col>\n\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-users text-info\" />}\n                statsText=\"Meetings Today\"\n                statsValue={this.state.meetingsToday}\n                statsIcon={<i className=\"fa fa-clock-o\" />}\n                statsIconText={`Last Update: ${this.state.lastUpdate}`}\n              />\n            </Col>\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-users text-info\" />}\n                statsText=\"This Month\"\n                statsValue={this.state.meetingMonth}\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText={`Last Update: ${this.state.lastUpdate}`}\n              />\n            </Col>\n            <Col lg={3} sm={6}>\n              <KPICard\n                bigIcon={<i className=\"pe-7s-users text-info\" />}\n                statsText=\"This Year\"\n                statsValue={this.state.meetingYear}\n                statsIcon={<i className=\"fa fa-refresh\" />}\n                statsIconText={`Last Update: ${this.state.lastUpdate}`}\n              />\n            </Col>\n          </Row>\n\n          <Row>\n            <Col lg={4} sm={6}></Col>\n            <TotalGraph\n              title=\"Total Meetings\"\n              stroke=\"#228b22\"\n              data={this.state.meetingsLastYear}\n            />\n            <Col lg={4} sm={6}></Col>\n          </Row>\n          <Row>\n            <Col lg={4} sm={6}>\n              <LastMonthBar\n                title=\"Meetings Last Month\"\n                color=\"#228b22\"\n                data={this.state.meetingsLastMonth}\n              />\n            </Col>\n            \n            <Col lg={4} sm={6}>\n              <LastYearBar\n                title=\"Meetings Last Year\"\n                color=\"#ff0000\"\n                data={this.state.meetingsLastYear}\n              />\n            </Col>\n          </Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    meetingStats: state.KPI.meetingStats\n  };\n};\n\nexport default connect(mapStateToProps, { fetchMeetingStats })(GroupView);\n"]},"metadata":{},"sourceType":"module"}